"use strict";
(self.webpackChunkresume_frontend =
  self.webpackChunkresume_frontend || []).push([
  [179],
  {
    58: () => {
      function se(t) {
        return "function" == typeof t;
      }
      function ds(t) {
        const e = t((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const cl = ds(
        (t) =>
          function (e) {
            t(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((i, o) => `${o + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = e);
          }
      );
      function zo(t, n) {
        if (t) {
          const e = t.indexOf(n);
          0 <= e && t.splice(e, 1);
        }
      }
      class lt {
        constructor(n) {
          (this.initialTeardown = n),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let n;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const r of e) r.remove(this);
              else e.remove(this);
            const { initialTeardown: i } = this;
            if (se(i))
              try {
                i();
              } catch (r) {
                n = r instanceof cl ? r.errors : [r];
              }
            const { _finalizers: o } = this;
            if (o) {
              this._finalizers = null;
              for (const r of o)
                try {
                  v_(r);
                } catch (s) {
                  (n = n ?? []),
                    s instanceof cl ? (n = [...n, ...s.errors]) : n.push(s);
                }
            }
            if (n) throw new cl(n);
          }
        }
        add(n) {
          var e;
          if (n && n !== this)
            if (this.closed) v_(n);
            else {
              if (n instanceof lt) {
                if (n.closed || n._hasParent(this)) return;
                n._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                n
              );
            }
        }
        _hasParent(n) {
          const { _parentage: e } = this;
          return e === n || (Array.isArray(e) && e.includes(n));
        }
        _addParent(n) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(n), e) : e ? [e, n] : n;
        }
        _removeParent(n) {
          const { _parentage: e } = this;
          e === n ? (this._parentage = null) : Array.isArray(e) && zo(e, n);
        }
        remove(n) {
          const { _finalizers: e } = this;
          e && zo(e, n), n instanceof lt && n._removeParent(this);
        }
      }
      lt.EMPTY = (() => {
        const t = new lt();
        return (t.closed = !0), t;
      })();
      const __ = lt.EMPTY;
      function y_(t) {
        return (
          t instanceof lt ||
          (t && "closed" in t && se(t.remove) && se(t.add) && se(t.unsubscribe))
        );
      }
      function v_(t) {
        se(t) ? t() : t.unsubscribe();
      }
      const ro = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        dl = {
          setTimeout(t, n, ...e) {
            const { delegate: i } = dl;
            return i?.setTimeout
              ? i.setTimeout(t, n, ...e)
              : setTimeout(t, n, ...e);
          },
          clearTimeout(t) {
            const { delegate: n } = dl;
            return (n?.clearTimeout || clearTimeout)(t);
          },
          delegate: void 0,
        };
      function b_(t) {
        dl.setTimeout(() => {
          const { onUnhandledError: n } = ro;
          if (!n) throw t;
          n(t);
        });
      }
      function ul() {}
      const xI = Su("C", void 0, void 0);
      function Su(t, n, e) {
        return { kind: t, value: n, error: e };
      }
      let so = null;
      function hl(t) {
        if (ro.useDeprecatedSynchronousErrorHandling) {
          const n = !so;
          if ((n && (so = { errorThrown: !1, error: null }), t(), n)) {
            const { errorThrown: e, error: i } = so;
            if (((so = null), e)) throw i;
          }
        } else t();
      }
      class Tu extends lt {
        constructor(n) {
          super(),
            (this.isStopped = !1),
            n
              ? ((this.destination = n), y_(n) && n.add(this))
              : (this.destination = OI);
        }
        static create(n, e, i) {
          return new us(n, e, i);
        }
        next(n) {
          this.isStopped
            ? Au(
                (function MI(t) {
                  return Su("N", t, void 0);
                })(n),
                this
              )
            : this._next(n);
        }
        error(n) {
          this.isStopped
            ? Au(
                (function EI(t) {
                  return Su("E", void 0, t);
                })(n),
                this
              )
            : ((this.isStopped = !0), this._error(n));
        }
        complete() {
          this.isStopped
            ? Au(xI, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(n) {
          this.destination.next(n);
        }
        _error(n) {
          try {
            this.destination.error(n);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const TI = Function.prototype.bind;
      function Iu(t, n) {
        return TI.call(t, n);
      }
      class II {
        constructor(n) {
          this.partialObserver = n;
        }
        next(n) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(n);
            } catch (i) {
              fl(i);
            }
        }
        error(n) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(n);
            } catch (i) {
              fl(i);
            }
          else fl(n);
        }
        complete() {
          const { partialObserver: n } = this;
          if (n.complete)
            try {
              n.complete();
            } catch (e) {
              fl(e);
            }
        }
      }
      class us extends Tu {
        constructor(n, e, i) {
          let o;
          if ((super(), se(n) || !n))
            o = {
              next: n ?? void 0,
              error: e ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let r;
            this && ro.useDeprecatedNextContext
              ? ((r = Object.create(n)),
                (r.unsubscribe = () => this.unsubscribe()),
                (o = {
                  next: n.next && Iu(n.next, r),
                  error: n.error && Iu(n.error, r),
                  complete: n.complete && Iu(n.complete, r),
                }))
              : (o = n);
          }
          this.destination = new II(o);
        }
      }
      function fl(t) {
        ro.useDeprecatedSynchronousErrorHandling
          ? (function SI(t) {
              ro.useDeprecatedSynchronousErrorHandling &&
                so &&
                ((so.errorThrown = !0), (so.error = t));
            })(t)
          : b_(t);
      }
      function Au(t, n) {
        const { onStoppedNotification: e } = ro;
        e && dl.setTimeout(() => e(t, n));
      }
      const OI = {
          closed: !0,
          next: ul,
          error: function AI(t) {
            throw t;
          },
          complete: ul,
        },
        Ou =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function Ei(t) {
        return t;
      }
      function C_(t) {
        return 0 === t.length
          ? Ei
          : 1 === t.length
          ? t[0]
          : function (e) {
              return t.reduce((i, o) => o(i), e);
            };
      }
      let Fe = (() => {
        class t {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const i = new t();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, o) {
            const r = (function kI(t) {
              return (
                (t && t instanceof Tu) ||
                ((function PI(t) {
                  return t && se(t.next) && se(t.error) && se(t.complete);
                })(t) &&
                  y_(t))
              );
            })(e)
              ? e
              : new us(e, i, o);
            return (
              hl(() => {
                const { operator: s, source: a } = this;
                r.add(
                  s
                    ? s.call(r, a)
                    : a
                    ? this._subscribe(r)
                    : this._trySubscribe(r)
                );
              }),
              r
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              e.error(i);
            }
          }
          forEach(e, i) {
            return new (i = w_(i))((o, r) => {
              const s = new us({
                next: (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    r(l), s.unsubscribe();
                  }
                },
                error: r,
                complete: o,
              });
              this.subscribe(s);
            });
          }
          _subscribe(e) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(e);
          }
          [Ou]() {
            return this;
          }
          pipe(...e) {
            return C_(e)(this);
          }
          toPromise(e) {
            return new (e = w_(e))((i, o) => {
              let r;
              this.subscribe(
                (s) => (r = s),
                (s) => o(s),
                () => i(r)
              );
            });
          }
        }
        return (t.create = (n) => new t(n)), t;
      })();
      function w_(t) {
        var n;
        return null !== (n = t ?? ro.Promise) && void 0 !== n ? n : Promise;
      }
      const FI = ds(
        (t) =>
          function () {
            t(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let me = (() => {
        class t extends Fe {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const i = new D_(this, this);
            return (i.operator = e), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new FI();
          }
          next(e) {
            hl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(e);
              }
            });
          }
          error(e) {
            hl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(e);
              }
            });
          }
          complete() {
            hl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: i, isStopped: o, observers: r } = this;
            return i || o
              ? __
              : ((this.currentObservers = null),
                r.push(e),
                new lt(() => {
                  (this.currentObservers = null), zo(r, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: i, thrownError: o, isStopped: r } = this;
            i ? e.error(o) : r && e.complete();
          }
          asObservable() {
            const e = new Fe();
            return (e.source = this), e;
          }
        }
        return (t.create = (n, e) => new D_(n, e)), t;
      })();
      class D_ extends me {
        constructor(n, e) {
          super(), (this.destination = n), (this.source = e);
        }
        next(n) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === i ||
            i.call(e, n);
        }
        error(n) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === i ||
            i.call(e, n);
        }
        complete() {
          var n, e;
          null ===
            (e =
              null === (n = this.destination) || void 0 === n
                ? void 0
                : n.complete) ||
            void 0 === e ||
            e.call(n);
        }
        _subscribe(n) {
          var e, i;
          return null !==
            (i =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(n)) && void 0 !== i
            ? i
            : __;
        }
      }
      function x_(t) {
        return se(t?.lift);
      }
      function qe(t) {
        return (n) => {
          if (x_(n))
            return n.lift(function (e) {
              try {
                return t(e, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function Le(t, n, e, i, o) {
        return new NI(t, n, e, i, o);
      }
      class NI extends Tu {
        constructor(n, e, i, o, r, s) {
          super(n),
            (this.onFinalize = r),
            (this.shouldUnsubscribe = s),
            (this._next = e
              ? function (a) {
                  try {
                    e(a);
                  } catch (l) {
                    n.error(l);
                  }
                }
              : super._next),
            (this._error = o
              ? function (a) {
                  try {
                    o(a);
                  } catch (l) {
                    n.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (a) {
                    n.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var n;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (n = this.onFinalize) ||
                  void 0 === n ||
                  n.call(this));
          }
        }
      }
      function ae(t, n) {
        return qe((e, i) => {
          let o = 0;
          e.subscribe(
            Le(i, (r) => {
              i.next(t.call(n, r, o++));
            })
          );
        });
      }
      function Mi(t) {
        return this instanceof Mi ? ((this.v = t), this) : new Mi(t);
      }
      function T_(t) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var e,
          n = t[Symbol.asyncIterator];
        return n
          ? n.call(t)
          : ((t = (function Fu(t) {
              var n = "function" == typeof Symbol && Symbol.iterator,
                e = n && t[n],
                i = 0;
              if (e) return e.call(t);
              if (t && "number" == typeof t.length)
                return {
                  next: function () {
                    return (
                      t && i >= t.length && (t = void 0),
                      { value: t && t[i++], done: !t }
                    );
                  },
                };
              throw new TypeError(
                n
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(t)),
            (e = {}),
            i("next"),
            i("throw"),
            i("return"),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function i(r) {
          e[r] =
            t[r] &&
            function (s) {
              return new Promise(function (a, l) {
                !(function o(r, s, a, l) {
                  Promise.resolve(l).then(function (c) {
                    r({ value: c, done: a });
                  }, s);
                })(a, l, (s = t[r](s)).done, s.value);
              });
            };
        }
      }
      "function" == typeof SuppressedError && SuppressedError;
      const Nu = (t) =>
        t && "number" == typeof t.length && "function" != typeof t;
      function I_(t) {
        return se(t?.then);
      }
      function A_(t) {
        return se(t[Ou]);
      }
      function O_(t) {
        return Symbol.asyncIterator && se(t?.[Symbol.asyncIterator]);
      }
      function R_(t) {
        return new TypeError(
          `You provided ${
            null !== t && "object" == typeof t ? "an invalid object" : `'${t}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const P_ = (function oA() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function k_(t) {
        return se(t?.[P_]);
      }
      function F_(t) {
        return (function S_(t, n, e) {
          if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
          var o,
            i = e.apply(t, n || []),
            r = [];
          return (
            (o = {}),
            a("next"),
            a("throw"),
            a("return", function s(f) {
              return function (p) {
                return Promise.resolve(p).then(f, u);
              };
            }),
            (o[Symbol.asyncIterator] = function () {
              return this;
            }),
            o
          );
          function a(f, p) {
            i[f] &&
              ((o[f] = function (m) {
                return new Promise(function (v, D) {
                  r.push([f, m, v, D]) > 1 || l(f, m);
                });
              }),
              p && (o[f] = p(o[f])));
          }
          function l(f, p) {
            try {
              !(function c(f) {
                f.value instanceof Mi
                  ? Promise.resolve(f.value.v).then(d, u)
                  : h(r[0][2], f);
              })(i[f](p));
            } catch (m) {
              h(r[0][3], m);
            }
          }
          function d(f) {
            l("next", f);
          }
          function u(f) {
            l("throw", f);
          }
          function h(f, p) {
            f(p), r.shift(), r.length && l(r[0][0], r[0][1]);
          }
        })(this, arguments, function* () {
          const e = t.getReader();
          try {
            for (;;) {
              const { value: i, done: o } = yield Mi(e.read());
              if (o) return yield Mi(void 0);
              yield yield Mi(i);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function N_(t) {
        return se(t?.getReader);
      }
      function vt(t) {
        if (t instanceof Fe) return t;
        if (null != t) {
          if (A_(t))
            return (function rA(t) {
              return new Fe((n) => {
                const e = t[Ou]();
                if (se(e.subscribe)) return e.subscribe(n);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(t);
          if (Nu(t))
            return (function sA(t) {
              return new Fe((n) => {
                for (let e = 0; e < t.length && !n.closed; e++) n.next(t[e]);
                n.complete();
              });
            })(t);
          if (I_(t))
            return (function aA(t) {
              return new Fe((n) => {
                t.then(
                  (e) => {
                    n.closed || (n.next(e), n.complete());
                  },
                  (e) => n.error(e)
                ).then(null, b_);
              });
            })(t);
          if (O_(t)) return L_(t);
          if (k_(t))
            return (function lA(t) {
              return new Fe((n) => {
                for (const e of t) if ((n.next(e), n.closed)) return;
                n.complete();
              });
            })(t);
          if (N_(t))
            return (function cA(t) {
              return L_(F_(t));
            })(t);
        }
        throw R_(t);
      }
      function L_(t) {
        return new Fe((n) => {
          (function dA(t, n) {
            var e, i, o, r;
            return (function E_(t, n, e, i) {
              return new (e || (e = Promise))(function (r, s) {
                function a(d) {
                  try {
                    c(i.next(d));
                  } catch (u) {
                    s(u);
                  }
                }
                function l(d) {
                  try {
                    c(i.throw(d));
                  } catch (u) {
                    s(u);
                  }
                }
                function c(d) {
                  d.done
                    ? r(d.value)
                    : (function o(r) {
                        return r instanceof e
                          ? r
                          : new e(function (s) {
                              s(r);
                            });
                      })(d.value).then(a, l);
                }
                c((i = i.apply(t, n || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (e = T_(t); !(i = yield e.next()).done; )
                  if ((n.next(i.value), n.closed)) return;
              } catch (s) {
                o = { error: s };
              } finally {
                try {
                  i && !i.done && (r = e.return) && (yield r.call(e));
                } finally {
                  if (o) throw o.error;
                }
              }
              n.complete();
            });
          })(t, n).catch((e) => n.error(e));
        });
      }
      function ei(t, n, e, i = 0, o = !1) {
        const r = n.schedule(function () {
          e(), o ? t.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((t.add(r), !o)) return r;
      }
      function nt(t, n, e = 1 / 0) {
        return se(n)
          ? nt((i, o) => ae((r, s) => n(i, r, o, s))(vt(t(i, o))), e)
          : ("number" == typeof n && (e = n),
            qe((i, o) =>
              (function uA(t, n, e, i, o, r, s, a) {
                const l = [];
                let c = 0,
                  d = 0,
                  u = !1;
                const h = () => {
                    u && !l.length && !c && n.complete();
                  },
                  f = (m) => (c < i ? p(m) : l.push(m)),
                  p = (m) => {
                    r && n.next(m), c++;
                    let v = !1;
                    vt(e(m, d++)).subscribe(
                      Le(
                        n,
                        (D) => {
                          o?.(D), r ? f(D) : n.next(D);
                        },
                        () => {
                          v = !0;
                        },
                        void 0,
                        () => {
                          if (v)
                            try {
                              for (c--; l.length && c < i; ) {
                                const D = l.shift();
                                s ? ei(n, s, () => p(D)) : p(D);
                              }
                              h();
                            } catch (D) {
                              n.error(D);
                            }
                        }
                      )
                    );
                  };
                return (
                  t.subscribe(
                    Le(n, f, () => {
                      (u = !0), h();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(i, o, t, e)
            ));
      }
      function qo(t = 1 / 0) {
        return nt(Ei, t);
      }
      const kn = new Fe((t) => t.complete());
      function V_(t) {
        return t && se(t.schedule);
      }
      function Lu(t) {
        return t[t.length - 1];
      }
      function B_(t) {
        return se(Lu(t)) ? t.pop() : void 0;
      }
      function hs(t) {
        return V_(Lu(t)) ? t.pop() : void 0;
      }
      function j_(t, n = 0) {
        return qe((e, i) => {
          e.subscribe(
            Le(
              i,
              (o) => ei(i, t, () => i.next(o), n),
              () => ei(i, t, () => i.complete(), n),
              (o) => ei(i, t, () => i.error(o), n)
            )
          );
        });
      }
      function H_(t, n = 0) {
        return qe((e, i) => {
          i.add(t.schedule(() => e.subscribe(i), n));
        });
      }
      function U_(t, n) {
        if (!t) throw new Error("Iterable cannot be null");
        return new Fe((e) => {
          ei(e, n, () => {
            const i = t[Symbol.asyncIterator]();
            ei(
              e,
              n,
              () => {
                i.next().then((o) => {
                  o.done ? e.complete() : e.next(o.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function it(t, n) {
        return n
          ? (function vA(t, n) {
              if (null != t) {
                if (A_(t))
                  return (function pA(t, n) {
                    return vt(t).pipe(H_(n), j_(n));
                  })(t, n);
                if (Nu(t))
                  return (function gA(t, n) {
                    return new Fe((e) => {
                      let i = 0;
                      return n.schedule(function () {
                        i === t.length
                          ? e.complete()
                          : (e.next(t[i++]), e.closed || this.schedule());
                      });
                    });
                  })(t, n);
                if (I_(t))
                  return (function mA(t, n) {
                    return vt(t).pipe(H_(n), j_(n));
                  })(t, n);
                if (O_(t)) return U_(t, n);
                if (k_(t))
                  return (function _A(t, n) {
                    return new Fe((e) => {
                      let i;
                      return (
                        ei(e, n, () => {
                          (i = t[P_]()),
                            ei(
                              e,
                              n,
                              () => {
                                let o, r;
                                try {
                                  ({ value: o, done: r } = i.next());
                                } catch (s) {
                                  return void e.error(s);
                                }
                                r ? e.complete() : e.next(o);
                              },
                              0,
                              !0
                            );
                        }),
                        () => se(i?.return) && i.return()
                      );
                    });
                  })(t, n);
                if (N_(t))
                  return (function yA(t, n) {
                    return U_(F_(t), n);
                  })(t, n);
              }
              throw R_(t);
            })(t, n)
          : vt(t);
      }
      function Si(...t) {
        const n = hs(t),
          e = (function fA(t, n) {
            return "number" == typeof Lu(t) ? t.pop() : n;
          })(t, 1 / 0),
          i = t;
        return i.length ? (1 === i.length ? vt(i[0]) : qo(e)(it(i, n))) : kn;
      }
      class Wt extends me {
        constructor(n) {
          super(), (this._value = n);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(n) {
          const e = super._subscribe(n);
          return !e.closed && n.next(this._value), e;
        }
        getValue() {
          const { hasError: n, thrownError: e, _value: i } = this;
          if (n) throw e;
          return this._throwIfClosed(), i;
        }
        next(n) {
          super.next((this._value = n));
        }
      }
      function H(...t) {
        return it(t, hs(t));
      }
      function $_(t = {}) {
        const {
          connector: n = () => new me(),
          resetOnError: e = !0,
          resetOnComplete: i = !0,
          resetOnRefCountZero: o = !0,
        } = t;
        return (r) => {
          let s,
            a,
            l,
            c = 0,
            d = !1,
            u = !1;
          const h = () => {
              a?.unsubscribe(), (a = void 0);
            },
            f = () => {
              h(), (s = l = void 0), (d = u = !1);
            },
            p = () => {
              const m = s;
              f(), m?.unsubscribe();
            };
          return qe((m, v) => {
            c++, !u && !d && h();
            const D = (l = l ?? n());
            v.add(() => {
              c--, 0 === c && !u && !d && (a = Vu(p, o));
            }),
              D.subscribe(v),
              !s &&
                c > 0 &&
                ((s = new us({
                  next: (b) => D.next(b),
                  error: (b) => {
                    (u = !0), h(), (a = Vu(f, e, b)), D.error(b);
                  },
                  complete: () => {
                    (d = !0), h(), (a = Vu(f, i)), D.complete();
                  },
                })),
                vt(m).subscribe(s));
          })(r);
        };
      }
      function Vu(t, n, ...e) {
        if (!0 === n) return void t();
        if (!1 === n) return;
        const i = new us({
          next: () => {
            i.unsubscribe(), t();
          },
        });
        return vt(n(...e)).subscribe(i);
      }
      function Vt(t, n) {
        return qe((e, i) => {
          let o = null,
            r = 0,
            s = !1;
          const a = () => s && !o && i.complete();
          e.subscribe(
            Le(
              i,
              (l) => {
                o?.unsubscribe();
                let c = 0;
                const d = r++;
                vt(t(l, d)).subscribe(
                  (o = Le(
                    i,
                    (u) => i.next(n ? n(l, u, d, c++) : u),
                    () => {
                      (o = null), a();
                    }
                  ))
                );
              },
              () => {
                (s = !0), a();
              }
            )
          );
        });
      }
      function Bu(t, n = Ei) {
        return (
          (t = t ?? bA),
          qe((e, i) => {
            let o,
              r = !0;
            e.subscribe(
              Le(i, (s) => {
                const a = n(s);
                (r || !t(o, a)) && ((r = !1), (o = a), i.next(s));
              })
            );
          })
        );
      }
      function bA(t, n) {
        return t === n;
      }
      function be(t) {
        for (let n in t) if (t[n] === be) return n;
        throw Error("Could not find renamed property on target object.");
      }
      function pl(t, n) {
        for (const e in n)
          n.hasOwnProperty(e) && !t.hasOwnProperty(e) && (t[e] = n[e]);
      }
      function ot(t) {
        if ("string" == typeof t) return t;
        if (Array.isArray(t)) return "[" + t.map(ot).join(", ") + "]";
        if (null == t) return "" + t;
        if (t.overriddenName) return `${t.overriddenName}`;
        if (t.name) return `${t.name}`;
        const n = t.toString();
        if (null == n) return "" + n;
        const e = n.indexOf("\n");
        return -1 === e ? n : n.substring(0, e);
      }
      function ju(t, n) {
        return null == t || "" === t
          ? null === n
            ? ""
            : n
          : null == n || "" === n
          ? t
          : t + " " + n;
      }
      const CA = be({ __forward_ref__: be });
      function Ee(t) {
        return (
          (t.__forward_ref__ = Ee),
          (t.toString = function () {
            return ot(this());
          }),
          t
        );
      }
      function G(t) {
        return Hu(t) ? t() : t;
      }
      function Hu(t) {
        return (
          "function" == typeof t &&
          t.hasOwnProperty(CA) &&
          t.__forward_ref__ === Ee
        );
      }
      function Uu(t) {
        return t && !!t.ɵproviders;
      }
      const z_ = "https://g.co/ng/security#xss";
      class x extends Error {
        constructor(n, e) {
          super(
            (function ml(t, n) {
              return `NG0${Math.abs(t)}${n ? ": " + n : ""}`;
            })(n, e)
          ),
            (this.code = n);
        }
      }
      function K(t) {
        return "string" == typeof t ? t : null == t ? "" : String(t);
      }
      function $u(t, n) {
        throw new x(-201, !1);
      }
      function cn(t, n) {
        null == t &&
          (function z(t, n, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${t}` +
                (null == i ? "" : ` [Expected=> ${e} ${i} ${n} <=Actual]`)
            );
          })(n, t, null, "!=");
      }
      function I(t) {
        return {
          token: t.token,
          providedIn: t.providedIn || null,
          factory: t.factory,
          value: void 0,
        };
      }
      function ce(t) {
        return { providers: t.providers || [], imports: t.imports || [] };
      }
      function gl(t) {
        return q_(t, yl) || q_(t, G_);
      }
      function q_(t, n) {
        return t.hasOwnProperty(n) ? t[n] : null;
      }
      function _l(t) {
        return t && (t.hasOwnProperty(zu) || t.hasOwnProperty(IA))
          ? t[zu]
          : null;
      }
      const yl = be({ ɵprov: be }),
        zu = be({ ɵinj: be }),
        G_ = be({ ngInjectableDef: be }),
        IA = be({ ngInjectorDef: be });
      var ie = (function (t) {
        return (
          (t[(t.Default = 0)] = "Default"),
          (t[(t.Host = 1)] = "Host"),
          (t[(t.Self = 2)] = "Self"),
          (t[(t.SkipSelf = 4)] = "SkipSelf"),
          (t[(t.Optional = 8)] = "Optional"),
          t
        );
      })(ie || {});
      let qu;
      function Bt(t) {
        const n = qu;
        return (qu = t), n;
      }
      function Y_(t, n, e) {
        const i = gl(t);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & ie.Optional
          ? null
          : void 0 !== n
          ? n
          : void $u(ot(t));
      }
      const Ie = globalThis;
      class S {
        constructor(n, e) {
          (this._desc = n),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = I({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const fs = {},
        Zu = "__NG_DI_FLAG__",
        vl = "ngTempTokenPath",
        RA = /\n/gm,
        Z_ = "__source";
      let Go;
      function Ti(t) {
        const n = Go;
        return (Go = t), n;
      }
      function FA(t, n = ie.Default) {
        if (void 0 === Go) throw new x(-203, !1);
        return null === Go
          ? Y_(t, void 0, n)
          : Go.get(t, n & ie.Optional ? null : void 0, n);
      }
      function C(t, n = ie.Default) {
        return (
          (function W_() {
            return qu;
          })() || FA
        )(G(t), n);
      }
      function R(t, n = ie.Default) {
        return C(t, bl(n));
      }
      function bl(t) {
        return typeof t > "u" || "number" == typeof t
          ? t
          : 0 |
              (t.optional && 8) |
              (t.host && 1) |
              (t.self && 2) |
              (t.skipSelf && 4);
      }
      function Qu(t) {
        const n = [];
        for (let e = 0; e < t.length; e++) {
          const i = G(t[e]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new x(900, !1);
            let o,
              r = ie.Default;
            for (let s = 0; s < i.length; s++) {
              const a = i[s],
                l = NA(a);
              "number" == typeof l
                ? -1 === l
                  ? (o = a.token)
                  : (r |= l)
                : (o = a);
            }
            n.push(C(o, r));
          } else n.push(C(i));
        }
        return n;
      }
      function ps(t, n) {
        return (t[Zu] = n), (t.prototype[Zu] = n), t;
      }
      function NA(t) {
        return t[Zu];
      }
      function ti(t) {
        return { toString: t }.toString();
      }
      var Cl = (function (t) {
          return (
            (t[(t.OnPush = 0)] = "OnPush"), (t[(t.Default = 1)] = "Default"), t
          );
        })(Cl || {}),
        dn = (function (t) {
          return (
            (t[(t.Emulated = 0)] = "Emulated"),
            (t[(t.None = 2)] = "None"),
            (t[(t.ShadowDom = 3)] = "ShadowDom"),
            t
          );
        })(dn || {});
      const Fn = {},
        pe = [],
        wl = be({ ɵcmp: be }),
        Xu = be({ ɵdir: be }),
        Ju = be({ ɵpipe: be }),
        X_ = be({ ɵmod: be }),
        ni = be({ ɵfac: be }),
        ms = be({ __NG_ELEMENT_ID__: be }),
        J_ = be({ __NG_ENV_ID__: be });
      function ey(t, n, e) {
        let i = t.length;
        for (;;) {
          const o = t.indexOf(n, e);
          if (-1 === o) return o;
          if (0 === o || t.charCodeAt(o - 1) <= 32) {
            const r = n.length;
            if (o + r === i || t.charCodeAt(o + r) <= 32) return o;
          }
          e = o + 1;
        }
      }
      function eh(t, n, e) {
        let i = 0;
        for (; i < e.length; ) {
          const o = e[i];
          if ("number" == typeof o) {
            if (0 !== o) break;
            i++;
            const r = e[i++],
              s = e[i++],
              a = e[i++];
            t.setAttribute(n, s, a, r);
          } else {
            const r = o,
              s = e[++i];
            ny(r) ? t.setProperty(n, r, s) : t.setAttribute(n, r, s), i++;
          }
        }
        return i;
      }
      function ty(t) {
        return 3 === t || 4 === t || 6 === t;
      }
      function ny(t) {
        return 64 === t.charCodeAt(0);
      }
      function gs(t, n) {
        if (null !== n && 0 !== n.length)
          if (null === t || 0 === t.length) t = n.slice();
          else {
            let e = -1;
            for (let i = 0; i < n.length; i++) {
              const o = n[i];
              "number" == typeof o
                ? (e = o)
                : 0 === e ||
                  iy(t, e, o, null, -1 === e || 2 === e ? n[++i] : null);
            }
          }
        return t;
      }
      function iy(t, n, e, i, o) {
        let r = 0,
          s = t.length;
        if (-1 === n) s = -1;
        else
          for (; r < t.length; ) {
            const a = t[r++];
            if ("number" == typeof a) {
              if (a === n) {
                s = -1;
                break;
              }
              if (a > n) {
                s = r - 1;
                break;
              }
            }
          }
        for (; r < t.length; ) {
          const a = t[r];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === i) return void (null !== o && (t[r + 1] = o));
            if (i === t[r + 1]) return void (t[r + 2] = o);
          }
          r++, null !== i && r++, null !== o && r++;
        }
        -1 !== s && (t.splice(s, 0, n), (r = s + 1)),
          t.splice(r++, 0, e),
          null !== i && t.splice(r++, 0, i),
          null !== o && t.splice(r++, 0, o);
      }
      const oy = "ng-template";
      function BA(t, n, e) {
        let i = 0,
          o = !0;
        for (; i < t.length; ) {
          let r = t[i++];
          if ("string" == typeof r && o) {
            const s = t[i++];
            if (e && "class" === r && -1 !== ey(s.toLowerCase(), n, 0))
              return !0;
          } else {
            if (1 === r) {
              for (; i < t.length && "string" == typeof (r = t[i++]); )
                if (r.toLowerCase() === n) return !0;
              return !1;
            }
            "number" == typeof r && (o = !1);
          }
        }
        return !1;
      }
      function ry(t) {
        return 4 === t.type && t.value !== oy;
      }
      function jA(t, n, e) {
        return n === (4 !== t.type || e ? t.value : oy);
      }
      function HA(t, n, e) {
        let i = 4;
        const o = t.attrs || [],
          r = (function zA(t) {
            for (let n = 0; n < t.length; n++) if (ty(t[n])) return n;
            return t.length;
          })(o);
        let s = !1;
        for (let a = 0; a < n.length; a++) {
          const l = n[a];
          if ("number" != typeof l) {
            if (!s)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !jA(t, l, e)) || ("" === l && 1 === n.length))
                ) {
                  if (wn(i)) return !1;
                  s = !0;
                }
              } else {
                const c = 8 & i ? l : n[++a];
                if (8 & i && null !== t.attrs) {
                  if (!BA(t.attrs, c, e)) {
                    if (wn(i)) return !1;
                    s = !0;
                  }
                  continue;
                }
                const u = UA(8 & i ? "class" : l, o, ry(t), e);
                if (-1 === u) {
                  if (wn(i)) return !1;
                  s = !0;
                  continue;
                }
                if ("" !== c) {
                  let h;
                  h = u > r ? "" : o[u + 1].toLowerCase();
                  const f = 8 & i ? h : null;
                  if ((f && -1 !== ey(f, c, 0)) || (2 & i && c !== h)) {
                    if (wn(i)) return !1;
                    s = !0;
                  }
                }
              }
          } else {
            if (!s && !wn(i) && !wn(l)) return !1;
            if (s && wn(l)) continue;
            (s = !1), (i = l | (1 & i));
          }
        }
        return wn(i) || s;
      }
      function wn(t) {
        return 0 == (1 & t);
      }
      function UA(t, n, e, i) {
        if (null === n) return -1;
        let o = 0;
        if (i || !e) {
          let r = !1;
          for (; o < n.length; ) {
            const s = n[o];
            if (s === t) return o;
            if (3 === s || 6 === s) r = !0;
            else {
              if (1 === s || 2 === s) {
                let a = n[++o];
                for (; "string" == typeof a; ) a = n[++o];
                continue;
              }
              if (4 === s) break;
              if (0 === s) {
                o += 4;
                continue;
              }
            }
            o += r ? 1 : 2;
          }
          return -1;
        }
        return (function qA(t, n) {
          let e = t.indexOf(4);
          if (e > -1)
            for (e++; e < t.length; ) {
              const i = t[e];
              if ("number" == typeof i) return -1;
              if (i === n) return e;
              e++;
            }
          return -1;
        })(n, t);
      }
      function sy(t, n, e = !1) {
        for (let i = 0; i < n.length; i++) if (HA(t, n[i], e)) return !0;
        return !1;
      }
      function GA(t, n) {
        e: for (let e = 0; e < n.length; e++) {
          const i = n[e];
          if (t.length === i.length) {
            for (let o = 0; o < t.length; o++) if (t[o] !== i[o]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function ay(t, n) {
        return t ? ":not(" + n.trim() + ")" : n;
      }
      function WA(t) {
        let n = t[0],
          e = 1,
          i = 2,
          o = "",
          r = !1;
        for (; e < t.length; ) {
          let s = t[e];
          if ("string" == typeof s)
            if (2 & i) {
              const a = t[++e];
              o += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (o += "." + s) : 4 & i && (o += " " + s);
          else
            "" !== o && !wn(s) && ((n += ay(r, o)), (o = "")),
              (i = s),
              (r = r || !wn(i));
          e++;
        }
        return "" !== o && (n += ay(r, o)), n;
      }
      function Ae(t) {
        return ti(() => {
          const n = cy(t),
            e = {
              ...n,
              decls: t.decls,
              vars: t.vars,
              template: t.template,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              onPush: t.changeDetection === Cl.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (n.standalone && t.dependencies) || null,
              getStandaloneInjector: null,
              signals: t.signals ?? !1,
              data: t.data || {},
              encapsulation: t.encapsulation || dn.Emulated,
              styles: t.styles || pe,
              _: null,
              schemas: t.schemas || null,
              tView: null,
              id: "",
            };
          dy(e);
          const i = t.dependencies;
          return (
            (e.directiveDefs = Dl(i, !1)),
            (e.pipeDefs = Dl(i, !0)),
            (e.id = (function tO(t) {
              let n = 0;
              const e = [
                t.selectors,
                t.ngContentSelectors,
                t.hostVars,
                t.hostAttrs,
                t.consts,
                t.vars,
                t.decls,
                t.encapsulation,
                t.standalone,
                t.signals,
                t.exportAs,
                JSON.stringify(t.inputs),
                JSON.stringify(t.outputs),
                Object.getOwnPropertyNames(t.type.prototype),
                !!t.contentQueries,
                !!t.viewQuery,
              ].join("|");
              for (const o of e) n = (Math.imul(31, n) + o.charCodeAt(0)) << 0;
              return (n += 2147483648), "c" + n;
            })(e)),
            e
          );
        });
      }
      function QA(t) {
        return de(t) || ft(t);
      }
      function XA(t) {
        return null !== t;
      }
      function he(t) {
        return ti(() => ({
          type: t.type,
          bootstrap: t.bootstrap || pe,
          declarations: t.declarations || pe,
          imports: t.imports || pe,
          exports: t.exports || pe,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        }));
      }
      function ly(t, n) {
        if (null == t) return Fn;
        const e = {};
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            let o = t[i],
              r = o;
            Array.isArray(o) && ((r = o[1]), (o = o[0])),
              (e[o] = i),
              n && (n[o] = r);
          }
        return e;
      }
      function j(t) {
        return ti(() => {
          const n = cy(t);
          return dy(n), n;
        });
      }
      function Et(t) {
        return {
          type: t.type,
          name: t.name,
          factory: null,
          pure: !1 !== t.pure,
          standalone: !0 === t.standalone,
          onDestroy: t.type.prototype.ngOnDestroy || null,
        };
      }
      function de(t) {
        return t[wl] || null;
      }
      function ft(t) {
        return t[Xu] || null;
      }
      function Mt(t) {
        return t[Ju] || null;
      }
      function Kt(t, n) {
        const e = t[X_] || null;
        if (!e && !0 === n)
          throw new Error(`Type ${ot(t)} does not have '\u0275mod' property.`);
        return e;
      }
      function cy(t) {
        const n = {};
        return {
          type: t.type,
          providersResolver: null,
          factory: null,
          hostBindings: t.hostBindings || null,
          hostVars: t.hostVars || 0,
          hostAttrs: t.hostAttrs || null,
          contentQueries: t.contentQueries || null,
          declaredInputs: n,
          inputTransforms: null,
          inputConfig: t.inputs || Fn,
          exportAs: t.exportAs || null,
          standalone: !0 === t.standalone,
          signals: !0 === t.signals,
          selectors: t.selectors || pe,
          viewQuery: t.viewQuery || null,
          features: t.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: ly(t.inputs, n),
          outputs: ly(t.outputs),
        };
      }
      function dy(t) {
        t.features?.forEach((n) => n(t));
      }
      function Dl(t, n) {
        if (!t) return null;
        const e = n ? Mt : QA;
        return () =>
          ("function" == typeof t ? t() : t).map((i) => e(i)).filter(XA);
      }
      const Ge = 0,
        P = 1,
        ee = 2,
        Ve = 3,
        Dn = 4,
        _s = 5,
        bt = 6,
        Yo = 7,
        Ze = 8,
        Ii = 9,
        Ko = 10,
        Q = 11,
        ys = 12,
        uy = 13,
        Zo = 14,
        Qe = 15,
        vs = 16,
        Qo = 17,
        Nn = 18,
        bs = 19,
        hy = 20,
        Ai = 21,
        ii = 22,
        Cs = 23,
        ws = 24,
        oe = 25,
        th = 1,
        fy = 2,
        Ln = 7,
        Xo = 9,
        pt = 11;
      function jt(t) {
        return Array.isArray(t) && "object" == typeof t[th];
      }
      function St(t) {
        return Array.isArray(t) && !0 === t[th];
      }
      function nh(t) {
        return 0 != (4 & t.flags);
      }
      function lo(t) {
        return t.componentOffset > -1;
      }
      function El(t) {
        return 1 == (1 & t.flags);
      }
      function xn(t) {
        return !!t.template;
      }
      function ih(t) {
        return 0 != (512 & t[ee]);
      }
      function co(t, n) {
        return t.hasOwnProperty(ni) ? t[ni] : null;
      }
      let mt = null,
        Ml = !1;
      function un(t) {
        const n = mt;
        return (mt = t), n;
      }
      const gy = {
        version: 0,
        dirty: !1,
        producerNode: void 0,
        producerLastReadVersion: void 0,
        producerIndexOfThis: void 0,
        nextProducerIndex: 0,
        liveConsumerNode: void 0,
        liveConsumerIndexOfThis: void 0,
        consumerAllowSignalWrites: !1,
        consumerIsAlwaysLive: !1,
        producerMustRecompute: () => !1,
        producerRecomputeValue: () => {},
        consumerMarkedDirty: () => {},
      };
      function yy(t) {
        if (!xs(t) || t.dirty) {
          if (!t.producerMustRecompute(t) && !Cy(t)) return void (t.dirty = !1);
          t.producerRecomputeValue(t), (t.dirty = !1);
        }
      }
      function by(t) {
        (t.dirty = !0),
          (function vy(t) {
            if (void 0 === t.liveConsumerNode) return;
            const n = Ml;
            Ml = !0;
            try {
              for (const e of t.liveConsumerNode) e.dirty || by(e);
            } finally {
              Ml = n;
            }
          })(t),
          t.consumerMarkedDirty?.(t);
      }
      function rh(t) {
        return t && (t.nextProducerIndex = 0), un(t);
      }
      function sh(t, n) {
        if (
          (un(n),
          t &&
            void 0 !== t.producerNode &&
            void 0 !== t.producerIndexOfThis &&
            void 0 !== t.producerLastReadVersion)
        ) {
          if (xs(t))
            for (let e = t.nextProducerIndex; e < t.producerNode.length; e++)
              Sl(t.producerNode[e], t.producerIndexOfThis[e]);
          for (; t.producerNode.length > t.nextProducerIndex; )
            t.producerNode.pop(),
              t.producerLastReadVersion.pop(),
              t.producerIndexOfThis.pop();
        }
      }
      function Cy(t) {
        Jo(t);
        for (let n = 0; n < t.producerNode.length; n++) {
          const e = t.producerNode[n],
            i = t.producerLastReadVersion[n];
          if (i !== e.version || (yy(e), i !== e.version)) return !0;
        }
        return !1;
      }
      function wy(t) {
        if ((Jo(t), xs(t)))
          for (let n = 0; n < t.producerNode.length; n++)
            Sl(t.producerNode[n], t.producerIndexOfThis[n]);
        (t.producerNode.length =
          t.producerLastReadVersion.length =
          t.producerIndexOfThis.length =
            0),
          t.liveConsumerNode &&
            (t.liveConsumerNode.length = t.liveConsumerIndexOfThis.length = 0);
      }
      function Sl(t, n) {
        if (
          ((function xy(t) {
            (t.liveConsumerNode ??= []), (t.liveConsumerIndexOfThis ??= []);
          })(t),
          Jo(t),
          1 === t.liveConsumerNode.length)
        )
          for (let i = 0; i < t.producerNode.length; i++)
            Sl(t.producerNode[i], t.producerIndexOfThis[i]);
        const e = t.liveConsumerNode.length - 1;
        if (
          ((t.liveConsumerNode[n] = t.liveConsumerNode[e]),
          (t.liveConsumerIndexOfThis[n] = t.liveConsumerIndexOfThis[e]),
          t.liveConsumerNode.length--,
          t.liveConsumerIndexOfThis.length--,
          n < t.liveConsumerNode.length)
        ) {
          const i = t.liveConsumerIndexOfThis[n],
            o = t.liveConsumerNode[n];
          Jo(o), (o.producerIndexOfThis[i] = n);
        }
      }
      function xs(t) {
        return t.consumerIsAlwaysLive || (t?.liveConsumerNode?.length ?? 0) > 0;
      }
      function Jo(t) {
        (t.producerNode ??= []),
          (t.producerIndexOfThis ??= []),
          (t.producerLastReadVersion ??= []);
      }
      let Ey = null;
      function Ty(t) {
        const n = un(null);
        try {
          return t();
        } finally {
          un(n);
        }
      }
      const Iy = () => {},
        pO = (() => ({
          ...gy,
          consumerIsAlwaysLive: !0,
          consumerAllowSignalWrites: !1,
          consumerMarkedDirty: (t) => {
            t.schedule(t.ref);
          },
          hasRun: !1,
          cleanupFn: Iy,
        }))();
      class mO {
        constructor(n, e, i) {
          (this.previousValue = n),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Tt() {
        return Ay;
      }
      function Ay(t) {
        return t.type.prototype.ngOnChanges && (t.setInput = _O), gO;
      }
      function gO() {
        const t = Ry(this),
          n = t?.current;
        if (n) {
          const e = t.previous;
          if (e === Fn) t.previous = n;
          else for (let i in n) e[i] = n[i];
          (t.current = null), this.ngOnChanges(n);
        }
      }
      function _O(t, n, e, i) {
        const o = this.declaredInputs[e],
          r =
            Ry(t) ||
            (function yO(t, n) {
              return (t[Oy] = n);
            })(t, { previous: Fn, current: null }),
          s = r.current || (r.current = {}),
          a = r.previous,
          l = a[o];
        (s[o] = new mO(l && l.currentValue, n, a === Fn)), (t[i] = n);
      }
      Tt.ngInherit = !0;
      const Oy = "__ngSimpleChanges__";
      function Ry(t) {
        return t[Oy] || null;
      }
      const Vn = function (t, n, e) {},
        Py = "svg";
      function Oe(t) {
        for (; Array.isArray(t); ) t = t[Ge];
        return t;
      }
      function Tl(t, n) {
        return Oe(n[t]);
      }
      function Ht(t, n) {
        return Oe(n[t.index]);
      }
      function Fy(t, n) {
        return t.data[n];
      }
      function er(t, n) {
        return t[n];
      }
      function Zt(t, n) {
        const e = n[t];
        return jt(e) ? e : e[Ge];
      }
      function Ri(t, n) {
        return null == n ? null : t[n];
      }
      function Ny(t) {
        t[Qo] = 0;
      }
      function xO(t) {
        1024 & t[ee] || ((t[ee] |= 1024), Vy(t, 1));
      }
      function Ly(t) {
        1024 & t[ee] && ((t[ee] &= -1025), Vy(t, -1));
      }
      function Vy(t, n) {
        let e = t[Ve];
        if (null === e) return;
        e[_s] += n;
        let i = e;
        for (
          e = e[Ve];
          null !== e && ((1 === n && 1 === i[_s]) || (-1 === n && 0 === i[_s]));

        )
          (e[_s] += n), (i = e), (e = e[Ve]);
      }
      const q = {
        lFrame: Ky(null),
        bindingsEnabled: !0,
        skipHydrationRootTNode: null,
      };
      function Hy() {
        return q.bindingsEnabled;
      }
      function tr() {
        return null !== q.skipHydrationRootTNode;
      }
      function E() {
        return q.lFrame.lView;
      }
      function ue() {
        return q.lFrame.tView;
      }
      function Ce(t) {
        return (q.lFrame.contextLView = t), t[Ze];
      }
      function we(t) {
        return (q.lFrame.contextLView = null), t;
      }
      function gt() {
        let t = Uy();
        for (; null !== t && 64 === t.type; ) t = t.parent;
        return t;
      }
      function Uy() {
        return q.lFrame.currentTNode;
      }
      function Bn(t, n) {
        const e = q.lFrame;
        (e.currentTNode = t), (e.isParent = n);
      }
      function uh() {
        return q.lFrame.isParent;
      }
      function hh() {
        q.lFrame.isParent = !1;
      }
      function It() {
        const t = q.lFrame;
        let n = t.bindingRootIndex;
        return (
          -1 === n && (n = t.bindingRootIndex = t.tView.bindingStartIndex), n
        );
      }
      function oi() {
        return q.lFrame.bindingIndex;
      }
      function nr() {
        return q.lFrame.bindingIndex++;
      }
      function ri(t) {
        const n = q.lFrame,
          e = n.bindingIndex;
        return (n.bindingIndex = n.bindingIndex + t), e;
      }
      function NO(t, n) {
        const e = q.lFrame;
        (e.bindingIndex = e.bindingRootIndex = t), fh(n);
      }
      function fh(t) {
        q.lFrame.currentDirectiveIndex = t;
      }
      function Gy() {
        return q.lFrame.currentQueryIndex;
      }
      function mh(t) {
        q.lFrame.currentQueryIndex = t;
      }
      function VO(t) {
        const n = t[P];
        return 2 === n.type ? n.declTNode : 1 === n.type ? t[bt] : null;
      }
      function Wy(t, n, e) {
        if (e & ie.SkipSelf) {
          let o = n,
            r = t;
          for (
            ;
            !((o = o.parent),
            null !== o ||
              e & ie.Host ||
              ((o = VO(r)), null === o || ((r = r[Zo]), 10 & o.type)));

          );
          if (null === o) return !1;
          (n = o), (t = r);
        }
        const i = (q.lFrame = Yy());
        return (i.currentTNode = n), (i.lView = t), !0;
      }
      function gh(t) {
        const n = Yy(),
          e = t[P];
        (q.lFrame = n),
          (n.currentTNode = e.firstChild),
          (n.lView = t),
          (n.tView = e),
          (n.contextLView = t),
          (n.bindingIndex = e.bindingStartIndex),
          (n.inI18n = !1);
      }
      function Yy() {
        const t = q.lFrame,
          n = null === t ? null : t.child;
        return null === n ? Ky(t) : n;
      }
      function Ky(t) {
        const n = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
          inI18n: !1,
        };
        return null !== t && (t.child = n), n;
      }
      function Zy() {
        const t = q.lFrame;
        return (
          (q.lFrame = t.parent), (t.currentTNode = null), (t.lView = null), t
        );
      }
      const Qy = Zy;
      function _h() {
        const t = Zy();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = -1),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function At() {
        return q.lFrame.selectedIndex;
      }
      function uo(t) {
        q.lFrame.selectedIndex = t;
      }
      function je() {
        const t = q.lFrame;
        return Fy(t.tView, t.selectedIndex);
      }
      function yh() {
        q.lFrame.currentNamespace = Py;
      }
      let Jy = !0;
      function Il() {
        return Jy;
      }
      function Pi(t) {
        Jy = t;
      }
      function Al(t, n) {
        for (let e = n.directiveStart, i = n.directiveEnd; e < i; e++) {
          const r = t.data[e].type.prototype,
            {
              ngAfterContentInit: s,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: d,
            } = r;
          s && (t.contentHooks ??= []).push(-e, s),
            a &&
              ((t.contentHooks ??= []).push(e, a),
              (t.contentCheckHooks ??= []).push(e, a)),
            l && (t.viewHooks ??= []).push(-e, l),
            c &&
              ((t.viewHooks ??= []).push(e, c),
              (t.viewCheckHooks ??= []).push(e, c)),
            null != d && (t.destroyHooks ??= []).push(e, d);
        }
      }
      function Ol(t, n, e) {
        ev(t, n, 3, e);
      }
      function Rl(t, n, e, i) {
        (3 & t[ee]) === e && ev(t, n, e, i);
      }
      function vh(t, n) {
        let e = t[ee];
        (3 & e) === n && ((e &= 8191), (e += 1), (t[ee] = e));
      }
      function ev(t, n, e, i) {
        const r = i ?? -1,
          s = n.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & t[Qo] : 0; l < s; l++)
          if ("number" == typeof n[l + 1]) {
            if (((a = n[l]), null != i && a >= i)) break;
          } else
            n[l] < 0 && (t[Qo] += 65536),
              (a < r || -1 == r) &&
                (qO(t, e, n, l), (t[Qo] = (4294901760 & t[Qo]) + l + 2)),
              l++;
      }
      function tv(t, n) {
        Vn(4, t, n);
        const e = un(null);
        try {
          n.call(t);
        } finally {
          un(e), Vn(5, t, n);
        }
      }
      function qO(t, n, e, i) {
        const o = e[i] < 0,
          r = e[i + 1],
          a = t[o ? -e[i] : e[i]];
        o
          ? t[ee] >> 13 < t[Qo] >> 16 &&
            (3 & t[ee]) === n &&
            ((t[ee] += 8192), tv(a, r))
          : tv(a, r);
      }
      const ir = -1;
      class Ms {
        constructor(n, e, i) {
          (this.factory = n),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function Ch(t) {
        return t !== ir;
      }
      function Ss(t) {
        return 32767 & t;
      }
      function Ts(t, n) {
        let e = (function KO(t) {
            return t >> 16;
          })(t),
          i = n;
        for (; e > 0; ) (i = i[Zo]), e--;
        return i;
      }
      let wh = !0;
      function Pl(t) {
        const n = wh;
        return (wh = t), n;
      }
      const nv = 255,
        iv = 5;
      let ZO = 0;
      const jn = {};
      function kl(t, n) {
        const e = ov(t, n);
        if (-1 !== e) return e;
        const i = n[P];
        i.firstCreatePass &&
          ((t.injectorIndex = n.length),
          Dh(i.data, t),
          Dh(n, null),
          Dh(i.blueprint, null));
        const o = Fl(t, n),
          r = t.injectorIndex;
        if (Ch(o)) {
          const s = Ss(o),
            a = Ts(o, n),
            l = a[P].data;
          for (let c = 0; c < 8; c++) n[r + c] = a[s + c] | l[s + c];
        }
        return (n[r + 8] = o), r;
      }
      function Dh(t, n) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, n);
      }
      function ov(t, n) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null === n[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function Fl(t, n) {
        if (t.parent && -1 !== t.parent.injectorIndex)
          return t.parent.injectorIndex;
        let e = 0,
          i = null,
          o = n;
        for (; null !== o; ) {
          if (((i = uv(o)), null === i)) return ir;
          if ((e++, (o = o[Zo]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return ir;
      }
      function xh(t, n, e) {
        !(function QO(t, n, e) {
          let i;
          "string" == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(ms) && (i = e[ms]),
            null == i && (i = e[ms] = ZO++);
          const o = i & nv;
          n.data[t + (o >> iv)] |= 1 << o;
        })(t, n, e);
      }
      function rv(t, n, e) {
        if (e & ie.Optional || void 0 !== t) return t;
        $u();
      }
      function sv(t, n, e, i) {
        if (
          (e & ie.Optional && void 0 === i && (i = null),
          !(e & (ie.Self | ie.Host)))
        ) {
          const o = t[Ii],
            r = Bt(void 0);
          try {
            return o ? o.get(n, i, e & ie.Optional) : Y_(n, i, e & ie.Optional);
          } finally {
            Bt(r);
          }
        }
        return rv(i, 0, e);
      }
      function av(t, n, e, i = ie.Default, o) {
        if (null !== t) {
          if (2048 & n[ee] && !(i & ie.Self)) {
            const s = (function o1(t, n, e, i, o) {
              let r = t,
                s = n;
              for (
                ;
                null !== r && null !== s && 2048 & s[ee] && !(512 & s[ee]);

              ) {
                const a = lv(r, s, e, i | ie.Self, jn);
                if (a !== jn) return a;
                let l = r.parent;
                if (!l) {
                  const c = s[hy];
                  if (c) {
                    const d = c.get(e, jn, i);
                    if (d !== jn) return d;
                  }
                  (l = uv(s)), (s = s[Zo]);
                }
                r = l;
              }
              return o;
            })(t, n, e, i, jn);
            if (s !== jn) return s;
          }
          const r = lv(t, n, e, i, jn);
          if (r !== jn) return r;
        }
        return sv(n, e, i, o);
      }
      function lv(t, n, e, i, o) {
        const r = (function e1(t) {
          if ("string" == typeof t) return t.charCodeAt(0) || 0;
          const n = t.hasOwnProperty(ms) ? t[ms] : void 0;
          return "number" == typeof n ? (n >= 0 ? n & nv : n1) : n;
        })(e);
        if ("function" == typeof r) {
          if (!Wy(n, t, i)) return i & ie.Host ? rv(o, 0, i) : sv(n, e, i, o);
          try {
            let s;
            if (((s = r(i)), null != s || i & ie.Optional)) return s;
            $u();
          } finally {
            Qy();
          }
        } else if ("number" == typeof r) {
          let s = null,
            a = ov(t, n),
            l = ir,
            c = i & ie.Host ? n[Qe][bt] : null;
          for (
            (-1 === a || i & ie.SkipSelf) &&
            ((l = -1 === a ? Fl(t, n) : n[a + 8]),
            l !== ir && dv(i, !1)
              ? ((s = n[P]), (a = Ss(l)), (n = Ts(l, n)))
              : (a = -1));
            -1 !== a;

          ) {
            const d = n[P];
            if (cv(r, a, d.data)) {
              const u = JO(a, n, e, s, i, c);
              if (u !== jn) return u;
            }
            (l = n[a + 8]),
              l !== ir && dv(i, n[P].data[a + 8] === c) && cv(r, a, n)
                ? ((s = d), (a = Ss(l)), (n = Ts(l, n)))
                : (a = -1);
          }
        }
        return o;
      }
      function JO(t, n, e, i, o, r) {
        const s = n[P],
          a = s.data[t + 8],
          d = Nl(
            a,
            s,
            e,
            null == i ? lo(a) && wh : i != s && 0 != (3 & a.type),
            o & ie.Host && r === a
          );
        return null !== d ? ho(n, s, d, a) : jn;
      }
      function Nl(t, n, e, i, o) {
        const r = t.providerIndexes,
          s = n.data,
          a = 1048575 & r,
          l = t.directiveStart,
          d = r >> 20,
          h = o ? a + d : t.directiveEnd;
        for (let f = i ? a : a + d; f < h; f++) {
          const p = s[f];
          if ((f < l && e === p) || (f >= l && p.type === e)) return f;
        }
        if (o) {
          const f = s[l];
          if (f && xn(f) && f.type === e) return l;
        }
        return null;
      }
      function ho(t, n, e, i) {
        let o = t[e];
        const r = n.data;
        if (
          (function GO(t) {
            return t instanceof Ms;
          })(o)
        ) {
          const s = o;
          s.resolving &&
            (function wA(t, n) {
              const e = n ? `. Dependency path: ${n.join(" > ")} > ${t}` : "";
              throw new x(
                -200,
                `Circular dependency in DI detected for ${t}${e}`
              );
            })(
              (function ve(t) {
                return "function" == typeof t
                  ? t.name || t.toString()
                  : "object" == typeof t &&
                    null != t &&
                    "function" == typeof t.type
                  ? t.type.name || t.type.toString()
                  : K(t);
              })(r[e])
            );
          const a = Pl(s.canSeeViewProviders);
          s.resolving = !0;
          const c = s.injectImpl ? Bt(s.injectImpl) : null;
          Wy(t, i, ie.Default);
          try {
            (o = t[e] = s.factory(void 0, r, t, i)),
              n.firstCreatePass &&
                e >= i.directiveStart &&
                (function zO(t, n, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: o,
                    ngDoCheck: r,
                  } = n.type.prototype;
                  if (i) {
                    const s = Ay(n);
                    (e.preOrderHooks ??= []).push(t, s),
                      (e.preOrderCheckHooks ??= []).push(t, s);
                  }
                  o && (e.preOrderHooks ??= []).push(0 - t, o),
                    r &&
                      ((e.preOrderHooks ??= []).push(t, r),
                      (e.preOrderCheckHooks ??= []).push(t, r));
                })(e, r[e], n);
          } finally {
            null !== c && Bt(c), Pl(a), (s.resolving = !1), Qy();
          }
        }
        return o;
      }
      function cv(t, n, e) {
        return !!(e[n + (t >> iv)] & (1 << t));
      }
      function dv(t, n) {
        return !(t & ie.Self || (t & ie.Host && n));
      }
      class Ot {
        constructor(n, e) {
          (this._tNode = n), (this._lView = e);
        }
        get(n, e, i) {
          return av(this._tNode, this._lView, n, bl(i), e);
        }
      }
      function n1() {
        return new Ot(gt(), E());
      }
      function ct(t) {
        return ti(() => {
          const n = t.prototype.constructor,
            e = n[ni] || Eh(n),
            i = Object.prototype;
          let o = Object.getPrototypeOf(t.prototype).constructor;
          for (; o && o !== i; ) {
            const r = o[ni] || Eh(o);
            if (r && r !== e) return r;
            o = Object.getPrototypeOf(o);
          }
          return (r) => new r();
        });
      }
      function Eh(t) {
        return Hu(t)
          ? () => {
              const n = Eh(G(t));
              return n && n();
            }
          : co(t);
      }
      function uv(t) {
        const n = t[P],
          e = n.type;
        return 2 === e ? n.declTNode : 1 === e ? t[bt] : null;
      }
      const rr = "__parameters__";
      function ar(t, n, e) {
        return ti(() => {
          const i = (function Mh(t) {
            return function (...e) {
              if (t) {
                const i = t(...e);
                for (const o in i) this[o] = i[o];
              }
            };
          })(n);
          function o(...r) {
            if (this instanceof o) return i.apply(this, r), this;
            const s = new o(...r);
            return (a.annotation = s), a;
            function a(l, c, d) {
              const u = l.hasOwnProperty(rr)
                ? l[rr]
                : Object.defineProperty(l, rr, { value: [] })[rr];
              for (; u.length <= d; ) u.push(null);
              return (u[d] = u[d] || []).push(s), l;
            }
          }
          return (
            e && (o.prototype = Object.create(e.prototype)),
            (o.prototype.ngMetadataName = t),
            (o.annotationCls = o),
            o
          );
        });
      }
      function cr(t, n) {
        t.forEach((e) => (Array.isArray(e) ? cr(e, n) : n(e)));
      }
      function fv(t, n, e) {
        n >= t.length ? t.push(e) : t.splice(n, 0, e);
      }
      function Vl(t, n) {
        return n >= t.length - 1 ? t.pop() : t.splice(n, 1)[0];
      }
      function Os(t, n) {
        const e = [];
        for (let i = 0; i < t; i++) e.push(n);
        return e;
      }
      function Qt(t, n, e) {
        let i = dr(t, n);
        return (
          i >= 0
            ? (t[1 | i] = e)
            : ((i = ~i),
              (function u1(t, n, e, i) {
                let o = t.length;
                if (o == n) t.push(e, i);
                else if (1 === o) t.push(i, t[0]), (t[0] = e);
                else {
                  for (o--, t.push(t[o - 1], t[o]); o > n; )
                    (t[o] = t[o - 2]), o--;
                  (t[n] = e), (t[n + 1] = i);
                }
              })(t, i, n, e)),
          i
        );
      }
      function Sh(t, n) {
        const e = dr(t, n);
        if (e >= 0) return t[1 | e];
      }
      function dr(t, n) {
        return (function pv(t, n, e) {
          let i = 0,
            o = t.length >> e;
          for (; o !== i; ) {
            const r = i + ((o - i) >> 1),
              s = t[r << e];
            if (n === s) return r << e;
            s > n ? (o = r) : (i = r + 1);
          }
          return ~(o << e);
        })(t, n, 1);
      }
      const jl = ps(ar("Optional"), 8),
        Hl = ps(ar("SkipSelf"), 4);
      function Gl(t) {
        return 128 == (128 & t.flags);
      }
      var ki = (function (t) {
        return (
          (t[(t.Important = 1)] = "Important"),
          (t[(t.DashCase = 2)] = "DashCase"),
          t
        );
      })(ki || {});
      const Rh = new Map();
      let F1 = 0;
      const kh = "__ngContext__";
      function Ct(t, n) {
        jt(n)
          ? ((t[kh] = n[bs]),
            (function L1(t) {
              Rh.set(t[bs], t);
            })(n))
          : (t[kh] = n);
      }
      let Fh;
      function Nh(t, n) {
        return Fh(t, n);
      }
      function ks(t) {
        const n = t[Ve];
        return St(n) ? n[Ve] : n;
      }
      function kv(t) {
        return Nv(t[ys]);
      }
      function Fv(t) {
        return Nv(t[Dn]);
      }
      function Nv(t) {
        for (; null !== t && !St(t); ) t = t[Dn];
        return t;
      }
      function fr(t, n, e, i, o) {
        if (null != i) {
          let r,
            s = !1;
          St(i) ? (r = i) : jt(i) && ((s = !0), (i = i[Ge]));
          const a = Oe(i);
          0 === t && null !== e
            ? null == o
              ? jv(n, e, a)
              : fo(n, e, a, o || null, !0)
            : 1 === t && null !== e
            ? fo(n, e, a, o || null, !0)
            : 2 === t
            ? (function Jl(t, n, e) {
                const i = Ql(t, n);
                i &&
                  (function nR(t, n, e, i) {
                    t.removeChild(n, e, i);
                  })(t, i, n, e);
              })(n, a, s)
            : 3 === t && n.destroyNode(a),
            null != r &&
              (function rR(t, n, e, i, o) {
                const r = e[Ln];
                r !== Oe(e) && fr(n, t, i, r, o);
                for (let a = pt; a < e.length; a++) {
                  const l = e[a];
                  Ns(l[P], l, t, n, i, r);
                }
              })(n, t, r, e, o);
        }
      }
      function Kl(t, n, e) {
        return t.createElement(n, e);
      }
      function Vv(t, n) {
        const e = t[Xo],
          i = e.indexOf(n);
        Ly(n), e.splice(i, 1);
      }
      function Zl(t, n) {
        if (t.length <= pt) return;
        const e = pt + n,
          i = t[e];
        if (i) {
          const o = i[vs];
          null !== o && o !== t && Vv(o, i), n > 0 && (t[e - 1][Dn] = i[Dn]);
          const r = Vl(t, pt + n);
          !(function Y1(t, n) {
            Ns(t, n, n[Q], 2, null, null), (n[Ge] = null), (n[bt] = null);
          })(i[P], i);
          const s = r[Nn];
          null !== s && s.detachView(r[P]),
            (i[Ve] = null),
            (i[Dn] = null),
            (i[ee] &= -129);
        }
        return i;
      }
      function Vh(t, n) {
        if (!(256 & n[ee])) {
          const e = n[Q];
          n[Cs] && wy(n[Cs]),
            n[ws] && wy(n[ws]),
            e.destroyNode && Ns(t, n, e, 3, null, null),
            (function Q1(t) {
              let n = t[ys];
              if (!n) return Bh(t[P], t);
              for (; n; ) {
                let e = null;
                if (jt(n)) e = n[ys];
                else {
                  const i = n[pt];
                  i && (e = i);
                }
                if (!e) {
                  for (; n && !n[Dn] && n !== t; )
                    jt(n) && Bh(n[P], n), (n = n[Ve]);
                  null === n && (n = t), jt(n) && Bh(n[P], n), (e = n && n[Dn]);
                }
                n = e;
              }
            })(n);
        }
      }
      function Bh(t, n) {
        if (!(256 & n[ee])) {
          (n[ee] &= -129),
            (n[ee] |= 256),
            (function tR(t, n) {
              let e;
              if (null != t && null != (e = t.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const o = n[e[i]];
                  if (!(o instanceof Ms)) {
                    const r = e[i + 1];
                    if (Array.isArray(r))
                      for (let s = 0; s < r.length; s += 2) {
                        const a = o[r[s]],
                          l = r[s + 1];
                        Vn(4, a, l);
                        try {
                          l.call(a);
                        } finally {
                          Vn(5, a, l);
                        }
                      }
                    else {
                      Vn(4, o, r);
                      try {
                        r.call(o);
                      } finally {
                        Vn(5, o, r);
                      }
                    }
                  }
                }
            })(t, n),
            (function eR(t, n) {
              const e = t.cleanup,
                i = n[Yo];
              if (null !== e)
                for (let r = 0; r < e.length - 1; r += 2)
                  if ("string" == typeof e[r]) {
                    const s = e[r + 3];
                    s >= 0 ? i[s]() : i[-s].unsubscribe(), (r += 2);
                  } else e[r].call(i[e[r + 1]]);
              null !== i && (n[Yo] = null);
              const o = n[Ai];
              if (null !== o) {
                n[Ai] = null;
                for (let r = 0; r < o.length; r++) (0, o[r])();
              }
            })(t, n),
            1 === n[P].type && n[Q].destroy();
          const e = n[vs];
          if (null !== e && St(n[Ve])) {
            e !== n[Ve] && Vv(e, n);
            const i = n[Nn];
            null !== i && i.detachView(t);
          }
          !(function V1(t) {
            Rh.delete(t[bs]);
          })(n);
        }
      }
      function jh(t, n, e) {
        return (function Bv(t, n, e) {
          let i = n;
          for (; null !== i && 40 & i.type; ) i = (n = i).parent;
          if (null === i) return e[Ge];
          {
            const { componentOffset: o } = i;
            if (o > -1) {
              const { encapsulation: r } = t.data[i.directiveStart + o];
              if (r === dn.None || r === dn.Emulated) return null;
            }
            return Ht(i, e);
          }
        })(t, n.parent, e);
      }
      function fo(t, n, e, i, o) {
        t.insertBefore(n, e, i, o);
      }
      function jv(t, n, e) {
        t.appendChild(n, e);
      }
      function Hv(t, n, e, i, o) {
        null !== i ? fo(t, n, e, i, o) : jv(t, n, e);
      }
      function Ql(t, n) {
        return t.parentNode(n);
      }
      function Uv(t, n, e) {
        return zv(t, n, e);
      }
      let Hh,
        ec,
        qh,
        tc,
        zv = function $v(t, n, e) {
          return 40 & t.type ? Ht(t, e) : null;
        };
      function Xl(t, n, e, i) {
        const o = jh(t, i, n),
          r = n[Q],
          a = Uv(i.parent || n[bt], i, n);
        if (null != o)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) Hv(r, o, e[l], a, !1);
          else Hv(r, o, e, a, !1);
        void 0 !== Hh && Hh(r, i, n, e, o);
      }
      function Fs(t, n) {
        if (null !== n) {
          const e = n.type;
          if (3 & e) return Ht(n, t);
          if (4 & e) return Uh(-1, t[n.index]);
          if (8 & e) {
            const i = n.child;
            if (null !== i) return Fs(t, i);
            {
              const o = t[n.index];
              return St(o) ? Uh(-1, o) : Oe(o);
            }
          }
          if (32 & e) return Nh(n, t)() || Oe(t[n.index]);
          {
            const i = Gv(t, n);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Fs(ks(t[Qe]), i)
              : Fs(t, n.next);
          }
        }
        return null;
      }
      function Gv(t, n) {
        return null !== n ? t[Qe][bt].projection[n.projection] : null;
      }
      function Uh(t, n) {
        const e = pt + t + 1;
        if (e < n.length) {
          const i = n[e],
            o = i[P].firstChild;
          if (null !== o) return Fs(i, o);
        }
        return n[Ln];
      }
      function $h(t, n, e, i, o, r, s) {
        for (; null != e; ) {
          const a = i[e.index],
            l = e.type;
          if (
            (s && 0 === n && (a && Ct(Oe(a), i), (e.flags |= 2)),
            32 != (32 & e.flags))
          )
            if (8 & l) $h(t, n, e.child, i, o, r, !1), fr(n, t, o, a, r);
            else if (32 & l) {
              const c = Nh(e, i);
              let d;
              for (; (d = c()); ) fr(n, t, o, d, r);
              fr(n, t, o, a, r);
            } else 16 & l ? Yv(t, n, i, e, o, r) : fr(n, t, o, a, r);
          e = s ? e.projectionNext : e.next;
        }
      }
      function Ns(t, n, e, i, o, r) {
        $h(e, i, t.firstChild, n, o, r, !1);
      }
      function Yv(t, n, e, i, o, r) {
        const s = e[Qe],
          l = s[bt].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) fr(n, t, o, l[c], r);
        else {
          let c = l;
          const d = s[Ve];
          Gl(i) && (c.flags |= 128), $h(t, n, c, d, o, r, !0);
        }
      }
      function Kv(t, n, e) {
        "" === e
          ? t.removeAttribute(n, "class")
          : t.setAttribute(n, "class", e);
      }
      function Zv(t, n, e) {
        const { mergedAttrs: i, classes: o, styles: r } = e;
        null !== i && eh(t, n, i),
          null !== o && Kv(t, n, o),
          null !== r &&
            (function aR(t, n, e) {
              t.setAttribute(n, "style", e);
            })(t, n, r);
      }
      function pr(t) {
        return (
          (function zh() {
            if (void 0 === ec && ((ec = null), Ie.trustedTypes))
              try {
                ec = Ie.trustedTypes.createPolicy("angular", {
                  createHTML: (t) => t,
                  createScript: (t) => t,
                  createScriptURL: (t) => t,
                });
              } catch {}
            return ec;
          })()?.createHTML(t) || t
        );
      }
      function mr() {
        if (void 0 !== qh) return qh;
        if (typeof document < "u") return document;
        throw new x(210, !1);
      }
      function Qv(t) {
        return (
          (function Gh() {
            if (void 0 === tc && ((tc = null), Ie.trustedTypes))
              try {
                tc = Ie.trustedTypes.createPolicy("angular#unsafe-bypass", {
                  createHTML: (t) => t,
                  createScript: (t) => t,
                  createScriptURL: (t) => t,
                });
              } catch {}
            return tc;
          })()?.createHTML(t) || t
        );
      }
      class eb {
        constructor(n) {
          this.changingThisBreaksApplicationSecurity = n;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${z_})`;
        }
      }
      function Fi(t) {
        return t instanceof eb ? t.changingThisBreaksApplicationSecurity : t;
      }
      class yR {
        constructor(n) {
          this.inertDocumentHelper = n;
        }
        getInertBodyElement(n) {
          n = "<body><remove></remove>" + n;
          try {
            const e = new window.DOMParser().parseFromString(
              pr(n),
              "text/html"
            ).body;
            return null === e
              ? this.inertDocumentHelper.getInertBodyElement(n)
              : (e.removeChild(e.firstChild), e);
          } catch {
            return null;
          }
        }
      }
      class vR {
        constructor(n) {
          (this.defaultDoc = n),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              ));
        }
        getInertBodyElement(n) {
          const e = this.inertDocument.createElement("template");
          return (e.innerHTML = pr(n)), e;
        }
      }
      const CR = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function si(t) {
        const n = {};
        for (const e of t.split(",")) n[e] = !0;
        return n;
      }
      function Vs(...t) {
        const n = {};
        for (const e of t)
          for (const i in e) e.hasOwnProperty(i) && (n[i] = !0);
        return n;
      }
      const nb = si("area,br,col,hr,img,wbr"),
        ib = si("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        ob = si("rp,rt"),
        Yh = Vs(
          nb,
          Vs(
            ib,
            si(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          Vs(
            ob,
            si(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          Vs(ob, ib)
        ),
        Kh = si("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        rb = Vs(
          Kh,
          si(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          si(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        wR = si("script,style,template");
      class DR {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(n) {
          let e = n.firstChild,
            i = !0;
          for (; e; )
            if (
              (e.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(e))
                : e.nodeType === Node.TEXT_NODE
                ? this.chars(e.nodeValue)
                : (this.sanitizedSomething = !0),
              i && e.firstChild)
            )
              e = e.firstChild;
            else
              for (; e; ) {
                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                let o = this.checkClobberedElement(e, e.nextSibling);
                if (o) {
                  e = o;
                  break;
                }
                e = this.checkClobberedElement(e, e.parentNode);
              }
          return this.buf.join("");
        }
        startElement(n) {
          const e = n.nodeName.toLowerCase();
          if (!Yh.hasOwnProperty(e))
            return (this.sanitizedSomething = !0), !wR.hasOwnProperty(e);
          this.buf.push("<"), this.buf.push(e);
          const i = n.attributes;
          for (let o = 0; o < i.length; o++) {
            const r = i.item(o),
              s = r.name,
              a = s.toLowerCase();
            if (!rb.hasOwnProperty(a)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let l = r.value;
            Kh[a] &&
              ((t = l), (l = (t = String(t)).match(CR) ? t : "unsafe:" + t)),
              this.buf.push(" ", s, '="', sb(l), '"');
          }
          var t;
          return this.buf.push(">"), !0;
        }
        endElement(n) {
          const e = n.nodeName.toLowerCase();
          Yh.hasOwnProperty(e) &&
            !nb.hasOwnProperty(e) &&
            (this.buf.push("</"), this.buf.push(e), this.buf.push(">"));
        }
        chars(n) {
          this.buf.push(sb(n));
        }
        checkClobberedElement(n, e) {
          if (
            e &&
            (n.compareDocumentPosition(e) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${n.outerHTML}`
            );
          return e;
        }
      }
      const xR = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        ER = /([^\#-~ |!])/g;
      function sb(t) {
        return t
          .replace(/&/g, "&amp;")
          .replace(xR, function (n) {
            return (
              "&#" +
              (1024 * (n.charCodeAt(0) - 55296) +
                (n.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(ER, function (n) {
            return "&#" + n.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let nc;
      function Zh(t) {
        return "content" in t &&
          (function SR(t) {
            return (
              t.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === t.nodeName
            );
          })(t)
          ? t.content
          : null;
      }
      var gr = (function (t) {
        return (
          (t[(t.NONE = 0)] = "NONE"),
          (t[(t.HTML = 1)] = "HTML"),
          (t[(t.STYLE = 2)] = "STYLE"),
          (t[(t.SCRIPT = 3)] = "SCRIPT"),
          (t[(t.URL = 4)] = "URL"),
          (t[(t.RESOURCE_URL = 5)] = "RESOURCE_URL"),
          t
        );
      })(gr || {});
      function ab(t) {
        const n = (function Bs() {
          const t = E();
          return t && t[Ko].sanitizer;
        })();
        return n
          ? Qv(n.sanitize(gr.HTML, t) || "")
          : (function Ls(t, n) {
              const e = (function _R(t) {
                return (t instanceof eb && t.getTypeName()) || null;
              })(t);
              if (null != e && e !== n) {
                if ("ResourceURL" === e && "URL" === n) return !0;
                throw new Error(`Required a safe ${n}, got a ${e} (see ${z_})`);
              }
              return e === n;
            })(t, "HTML")
          ? Qv(Fi(t))
          : (function MR(t, n) {
              let e = null;
              try {
                nc =
                  nc ||
                  (function tb(t) {
                    const n = new vR(t);
                    return (function bR() {
                      try {
                        return !!new window.DOMParser().parseFromString(
                          pr(""),
                          "text/html"
                        );
                      } catch {
                        return !1;
                      }
                    })()
                      ? new yR(n)
                      : n;
                  })(t);
                let i = n ? String(n) : "";
                e = nc.getInertBodyElement(i);
                let o = 5,
                  r = i;
                do {
                  if (0 === o)
                    throw new Error(
                      "Failed to sanitize html because the input is unstable"
                    );
                  o--,
                    (i = r),
                    (r = e.innerHTML),
                    (e = nc.getInertBodyElement(i));
                } while (i !== r);
                return pr(new DR().sanitizeChildren(Zh(e) || e));
              } finally {
                if (e) {
                  const i = Zh(e) || e;
                  for (; i.firstChild; ) i.removeChild(i.firstChild);
                }
              }
            })(mr(), K(t));
      }
      const js = new S("ENVIRONMENT_INITIALIZER"),
        ub = new S("INJECTOR", -1),
        hb = new S("INJECTOR_DEF_TYPES");
      class Qh {
        get(n, e = fs) {
          if (e === fs) {
            const i = new Error(`NullInjectorError: No provider for ${ot(n)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return e;
        }
      }
      function PR(...t) {
        return { ɵproviders: fb(0, t), ɵfromNgModule: !0 };
      }
      function fb(t, ...n) {
        const e = [],
          i = new Set();
        let o;
        const r = (s) => {
          e.push(s);
        };
        return (
          cr(n, (s) => {
            const a = s;
            ic(a, r, [], i) && ((o ||= []), o.push(a));
          }),
          void 0 !== o && pb(o, r),
          e
        );
      }
      function pb(t, n) {
        for (let e = 0; e < t.length; e++) {
          const { ngModule: i, providers: o } = t[e];
          Jh(o, (r) => {
            n(r, i);
          });
        }
      }
      function ic(t, n, e, i) {
        if (!(t = G(t))) return !1;
        let o = null,
          r = _l(t);
        const s = !r && de(t);
        if (r || s) {
          if (s && !s.standalone) return !1;
          o = t;
        } else {
          const l = t.ngModule;
          if (((r = _l(l)), !r)) return !1;
          o = l;
        }
        const a = i.has(o);
        if (s) {
          if (a) return !1;
          if ((i.add(o), s.dependencies)) {
            const l =
              "function" == typeof s.dependencies
                ? s.dependencies()
                : s.dependencies;
            for (const c of l) ic(c, n, e, i);
          }
        } else {
          if (!r) return !1;
          {
            if (null != r.imports && !a) {
              let c;
              i.add(o);
              try {
                cr(r.imports, (d) => {
                  ic(d, n, e, i) && ((c ||= []), c.push(d));
                });
              } finally {
              }
              void 0 !== c && pb(c, n);
            }
            if (!a) {
              const c = co(o) || (() => new o());
              n({ provide: o, useFactory: c, deps: pe }, o),
                n({ provide: hb, useValue: o, multi: !0 }, o),
                n({ provide: js, useValue: () => C(o), multi: !0 }, o);
            }
            const l = r.providers;
            if (null != l && !a) {
              const c = t;
              Jh(l, (d) => {
                n(d, c);
              });
            }
          }
        }
        return o !== t && void 0 !== t.providers;
      }
      function Jh(t, n) {
        for (let e of t)
          Uu(e) && (e = e.ɵproviders), Array.isArray(e) ? Jh(e, n) : n(e);
      }
      const kR = be({ provide: String, useValue: be });
      function ef(t) {
        return null !== t && "object" == typeof t && kR in t;
      }
      function po(t) {
        return "function" == typeof t;
      }
      const tf = new S("Set Injector scope."),
        oc = {},
        NR = {};
      let nf;
      function rc() {
        return void 0 === nf && (nf = new Qh()), nf;
      }
      class Xt {}
      class _r extends Xt {
        get destroyed() {
          return this._destroyed;
        }
        constructor(n, e, i, o) {
          super(),
            (this.parent = e),
            (this.source = i),
            (this.scopes = o),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            sf(n, (s) => this.processProvider(s)),
            this.records.set(ub, yr(void 0, this)),
            o.has("environment") && this.records.set(Xt, yr(void 0, this));
          const r = this.records.get(tf);
          null != r && "string" == typeof r.value && this.scopes.add(r.value),
            (this.injectorDefTypes = new Set(this.get(hb.multi, pe, ie.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const e of this._ngOnDestroyHooks) e.ngOnDestroy();
            const n = this._onDestroyHooks;
            this._onDestroyHooks = [];
            for (const e of n) e();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear();
          }
        }
        onDestroy(n) {
          return (
            this.assertNotDestroyed(),
            this._onDestroyHooks.push(n),
            () => this.removeOnDestroy(n)
          );
        }
        runInContext(n) {
          this.assertNotDestroyed();
          const e = Ti(this),
            i = Bt(void 0);
          try {
            return n();
          } finally {
            Ti(e), Bt(i);
          }
        }
        get(n, e = fs, i = ie.Default) {
          if ((this.assertNotDestroyed(), n.hasOwnProperty(J_)))
            return n[J_](this);
          i = bl(i);
          const r = Ti(this),
            s = Bt(void 0);
          try {
            if (!(i & ie.SkipSelf)) {
              let l = this.records.get(n);
              if (void 0 === l) {
                const c =
                  (function HR(t) {
                    return (
                      "function" == typeof t ||
                      ("object" == typeof t && t instanceof S)
                    );
                  })(n) && gl(n);
                (l = c && this.injectableDefInScope(c) ? yr(rf(n), oc) : null),
                  this.records.set(n, l);
              }
              if (null != l) return this.hydrate(n, l);
            }
            return (i & ie.Self ? rc() : this.parent).get(
              n,
              (e = i & ie.Optional && e === fs ? null : e)
            );
          } catch (a) {
            if ("NullInjectorError" === a.name) {
              if (((a[vl] = a[vl] || []).unshift(ot(n)), r)) throw a;
              return (function LA(t, n, e, i) {
                const o = t[vl];
                throw (
                  (n[Z_] && o.unshift(n[Z_]),
                  (t.message = (function VA(t, n, e, i = null) {
                    t =
                      t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1)
                        ? t.slice(2)
                        : t;
                    let o = ot(n);
                    if (Array.isArray(n)) o = n.map(ot).join(" -> ");
                    else if ("object" == typeof n) {
                      let r = [];
                      for (let s in n)
                        if (n.hasOwnProperty(s)) {
                          let a = n[s];
                          r.push(
                            s +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : ot(a))
                          );
                        }
                      o = `{${r.join(", ")}}`;
                    }
                    return `${e}${i ? "(" + i + ")" : ""}[${o}]: ${t.replace(
                      RA,
                      "\n  "
                    )}`;
                  })("\n" + t.message, o, e, i)),
                  (t.ngTokenPath = o),
                  (t[vl] = null),
                  t)
                );
              })(a, n, "R3InjectorError", this.source);
            }
            throw a;
          } finally {
            Bt(s), Ti(r);
          }
        }
        resolveInjectorInitializers() {
          const n = Ti(this),
            e = Bt(void 0);
          try {
            const o = this.get(js.multi, pe, ie.Self);
            for (const r of o) r();
          } finally {
            Ti(n), Bt(e);
          }
        }
        toString() {
          const n = [],
            e = this.records;
          for (const i of e.keys()) n.push(ot(i));
          return `R3Injector[${n.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new x(205, !1);
        }
        processProvider(n) {
          let e = po((n = G(n))) ? n : G(n && n.provide);
          const i = (function VR(t) {
            return ef(t) ? yr(void 0, t.useValue) : yr(_b(t), oc);
          })(n);
          if (po(n) || !0 !== n.multi) this.records.get(e);
          else {
            let o = this.records.get(e);
            o ||
              ((o = yr(void 0, oc, !0)),
              (o.factory = () => Qu(o.multi)),
              this.records.set(e, o)),
              (e = n),
              o.multi.push(n);
          }
          this.records.set(e, i);
        }
        hydrate(n, e) {
          return (
            e.value === oc && ((e.value = NR), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function jR(t) {
                return (
                  null !== t &&
                  "object" == typeof t &&
                  "function" == typeof t.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(n) {
          if (!n.providedIn) return !1;
          const e = G(n.providedIn);
          return "string" == typeof e
            ? "any" === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
        removeOnDestroy(n) {
          const e = this._onDestroyHooks.indexOf(n);
          -1 !== e && this._onDestroyHooks.splice(e, 1);
        }
      }
      function rf(t) {
        const n = gl(t),
          e = null !== n ? n.factory : co(t);
        if (null !== e) return e;
        if (t instanceof S) throw new x(204, !1);
        if (t instanceof Function)
          return (function LR(t) {
            const n = t.length;
            if (n > 0) throw (Os(n, "?"), new x(204, !1));
            const e = (function TA(t) {
              return (t && (t[yl] || t[G_])) || null;
            })(t);
            return null !== e ? () => e.factory(t) : () => new t();
          })(t);
        throw new x(204, !1);
      }
      function _b(t, n, e) {
        let i;
        if (po(t)) {
          const o = G(t);
          return co(o) || rf(o);
        }
        if (ef(t)) i = () => G(t.useValue);
        else if (
          (function gb(t) {
            return !(!t || !t.useFactory);
          })(t)
        )
          i = () => t.useFactory(...Qu(t.deps || []));
        else if (
          (function mb(t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          i = () => C(G(t.useExisting));
        else {
          const o = G(t && (t.useClass || t.provide));
          if (
            !(function BR(t) {
              return !!t.deps;
            })(t)
          )
            return co(o) || rf(o);
          i = () => new o(...Qu(t.deps));
        }
        return i;
      }
      function yr(t, n, e = !1) {
        return { factory: t, value: n, multi: e ? [] : void 0 };
      }
      function sf(t, n) {
        for (const e of t)
          Array.isArray(e) ? sf(e, n) : e && Uu(e) ? sf(e.ɵproviders, n) : n(e);
      }
      const sc = new S("AppId", { providedIn: "root", factory: () => UR }),
        UR = "ng",
        yb = new S("Platform Initializer"),
        ai = new S("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        Hs = new S("AnimationModuleType"),
        af = new S("CSP nonce", {
          providedIn: "root",
          factory: () =>
            mr()
              .body?.querySelector("[ngCspNonce]")
              ?.getAttribute("ngCspNonce") || null,
        });
      let vb = (t, n, e) => null;
      function mf(t, n, e = !1) {
        return vb(t, n, e);
      }
      class XR {}
      class wb {}
      class eP {
        resolveComponentFactory(n) {
          throw (function JR(t) {
            const n = Error(`No component factory found for ${ot(t)}.`);
            return (n.ngComponent = t), n;
          })(n);
        }
      }
      let mo = (() => {
        class t {
          static #e = (this.NULL = new eP());
        }
        return t;
      })();
      function tP() {
        return Cr(gt(), E());
      }
      function Cr(t, n) {
        return new Me(Ht(t, n));
      }
      let Me = (() => {
        class t {
          constructor(e) {
            this.nativeElement = e;
          }
          static #e = (this.__NG_ELEMENT_ID__ = tP);
        }
        return t;
      })();
      function nP(t) {
        return t instanceof Me ? t.nativeElement : t;
      }
      class wr {}
      let fn = (() => {
          class t {
            constructor() {
              this.destroyNode = null;
            }
            static #e = (this.__NG_ELEMENT_ID__ = () =>
              (function iP() {
                const t = E(),
                  e = Zt(gt().index, t);
                return (jt(e) ? e : t)[Q];
              })());
          }
          return t;
        })(),
        oP = (() => {
          class t {
            static #e = (this.ɵprov = I({
              token: t,
              providedIn: "root",
              factory: () => null,
            }));
          }
          return t;
        })();
      class go {
        constructor(n) {
          (this.full = n),
            (this.major = n.split(".")[0]),
            (this.minor = n.split(".")[1]),
            (this.patch = n.split(".").slice(2).join("."));
        }
      }
      const rP = new go("16.2.12"),
        yf = {};
      function Sb(t, n = null, e = null, i) {
        const o = Tb(t, n, e, i);
        return o.resolveInjectorInitializers(), o;
      }
      function Tb(t, n = null, e = null, i, o = new Set()) {
        const r = [e || pe, PR(t)];
        return (
          (i = i || ("object" == typeof t ? void 0 : ot(t))),
          new _r(r, n || rc(), i || null, o)
        );
      }
      let He = (() => {
        class t {
          static #e = (this.THROW_IF_NOT_FOUND = fs);
          static #t = (this.NULL = new Qh());
          static create(e, i) {
            if (Array.isArray(e)) return Sb({ name: "" }, i, e, "");
            {
              const o = e.name ?? "";
              return Sb({ name: o }, e.parent, e.providers, o);
            }
          }
          static #n = (this.ɵprov = I({
            token: t,
            providedIn: "any",
            factory: () => C(ub),
          }));
          static #i = (this.__NG_ELEMENT_ID__ = -1);
        }
        return t;
      })();
      function bf(t) {
        return t.ngOriginalError;
      }
      class li {
        constructor() {
          this._console = console;
        }
        handleError(n) {
          const e = this._findOriginalError(n);
          this._console.error("ERROR", n),
            e && this._console.error("ORIGINAL ERROR", e);
        }
        _findOriginalError(n) {
          let e = n && bf(n);
          for (; e && bf(e); ) e = bf(e);
          return e || null;
        }
      }
      function wf(t) {
        return (n) => {
          setTimeout(t, void 0, n);
        };
      }
      const V = class hP extends me {
        constructor(n = !1) {
          super(), (this.__isAsync = n);
        }
        emit(n) {
          super.next(n);
        }
        subscribe(n, e, i) {
          let o = n,
            r = e || (() => null),
            s = i;
          if (n && "object" == typeof n) {
            const l = n;
            (o = l.next?.bind(l)),
              (r = l.error?.bind(l)),
              (s = l.complete?.bind(l));
          }
          this.__isAsync && ((r = wf(r)), o && (o = wf(o)), s && (s = wf(s)));
          const a = super.subscribe({ next: o, error: r, complete: s });
          return n instanceof lt && n.add(a), a;
        }
      };
      function Ab(...t) {}
      class X {
        constructor({
          enableLongStackTrace: n = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new V(!1)),
            (this.onMicrotaskEmpty = new V(!1)),
            (this.onStable = new V(!1)),
            (this.onError = new V(!1)),
            typeof Zone > "u")
          )
            throw new x(908, !1);
          Zone.assertZonePatched();
          const o = this;
          (o._nesting = 0),
            (o._outer = o._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec())),
            n &&
              Zone.longStackTraceZoneSpec &&
              (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)),
            (o.shouldCoalesceEventChangeDetection = !i && e),
            (o.shouldCoalesceRunChangeDetection = i),
            (o.lastRequestAnimationFrameId = -1),
            (o.nativeRequestAnimationFrame = (function fP() {
              const t = "function" == typeof Ie.requestAnimationFrame;
              let n = Ie[t ? "requestAnimationFrame" : "setTimeout"],
                e = Ie[t ? "cancelAnimationFrame" : "clearTimeout"];
              if (typeof Zone < "u" && n && e) {
                const i = n[Zone.__symbol__("OriginalDelegate")];
                i && (n = i);
                const o = e[Zone.__symbol__("OriginalDelegate")];
                o && (e = o);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: e,
              };
            })().nativeRequestAnimationFrame),
            (function gP(t) {
              const n = () => {
                !(function mP(t) {
                  t.isCheckStableRunning ||
                    -1 !== t.lastRequestAnimationFrameId ||
                    ((t.lastRequestAnimationFrameId =
                      t.nativeRequestAnimationFrame.call(Ie, () => {
                        t.fakeTopEventTask ||
                          (t.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (t.lastRequestAnimationFrameId = -1),
                                xf(t),
                                (t.isCheckStableRunning = !0),
                                Df(t),
                                (t.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          t.fakeTopEventTask.invoke();
                      })),
                    xf(t));
                })(t);
              };
              t._inner = t._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, o, r, s, a) => {
                  if (
                    (function yP(t) {
                      return (
                        !(!Array.isArray(t) || 1 !== t.length) &&
                        !0 === t[0].data?.__ignore_ng_zone__
                      );
                    })(a)
                  )
                    return e.invokeTask(o, r, s, a);
                  try {
                    return Ob(t), e.invokeTask(o, r, s, a);
                  } finally {
                    ((t.shouldCoalesceEventChangeDetection &&
                      "eventTask" === r.type) ||
                      t.shouldCoalesceRunChangeDetection) &&
                      n(),
                      Rb(t);
                  }
                },
                onInvoke: (e, i, o, r, s, a, l) => {
                  try {
                    return Ob(t), e.invoke(o, r, s, a, l);
                  } finally {
                    t.shouldCoalesceRunChangeDetection && n(), Rb(t);
                  }
                },
                onHasTask: (e, i, o, r) => {
                  e.hasTask(o, r),
                    i === o &&
                      ("microTask" == r.change
                        ? ((t._hasPendingMicrotasks = r.microTask),
                          xf(t),
                          Df(t))
                        : "macroTask" == r.change &&
                          (t.hasPendingMacrotasks = r.macroTask));
                },
                onHandleError: (e, i, o, r) => (
                  e.handleError(o, r),
                  t.runOutsideAngular(() => t.onError.emit(r)),
                  !1
                ),
              });
            })(o);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!X.isInAngularZone()) throw new x(909, !1);
        }
        static assertNotInAngularZone() {
          if (X.isInAngularZone()) throw new x(909, !1);
        }
        run(n, e, i) {
          return this._inner.run(n, e, i);
        }
        runTask(n, e, i, o) {
          const r = this._inner,
            s = r.scheduleEventTask("NgZoneEvent: " + o, n, pP, Ab, Ab);
          try {
            return r.runTask(s, e, i);
          } finally {
            r.cancelTask(s);
          }
        }
        runGuarded(n, e, i) {
          return this._inner.runGuarded(n, e, i);
        }
        runOutsideAngular(n) {
          return this._outer.run(n);
        }
      }
      const pP = {};
      function Df(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function xf(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          ((t.shouldCoalesceEventChangeDetection ||
            t.shouldCoalesceRunChangeDetection) &&
            -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function Ob(t) {
        t._nesting++,
          t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function Rb(t) {
        t._nesting--, Df(t);
      }
      class _P {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new V()),
            (this.onMicrotaskEmpty = new V()),
            (this.onStable = new V()),
            (this.onError = new V());
        }
        run(n, e, i) {
          return n.apply(e, i);
        }
        runGuarded(n, e, i) {
          return n.apply(e, i);
        }
        runOutsideAngular(n) {
          return n();
        }
        runTask(n, e, i, o) {
          return n.apply(e, i);
        }
      }
      const Pb = new S("", { providedIn: "root", factory: kb });
      function kb() {
        const t = R(X);
        let n = !0;
        return Si(
          new Fe((o) => {
            (n =
              t.isStable && !t.hasPendingMacrotasks && !t.hasPendingMicrotasks),
              t.runOutsideAngular(() => {
                o.next(n), o.complete();
              });
          }),
          new Fe((o) => {
            let r;
            t.runOutsideAngular(() => {
              r = t.onStable.subscribe(() => {
                X.assertNotInAngularZone(),
                  queueMicrotask(() => {
                    !n &&
                      !t.hasPendingMacrotasks &&
                      !t.hasPendingMicrotasks &&
                      ((n = !0), o.next(!0));
                  });
              });
            });
            const s = t.onUnstable.subscribe(() => {
              X.assertInAngularZone(),
                n &&
                  ((n = !1),
                  t.runOutsideAngular(() => {
                    o.next(!1);
                  }));
            });
            return () => {
              r.unsubscribe(), s.unsubscribe();
            };
          }).pipe($_())
        );
      }
      function hc(t) {
        return t.ownerDocument.defaultView;
      }
      function ci(t) {
        return t instanceof Function ? t() : t;
      }
      let Ef = (() => {
        class t {
          constructor() {
            (this.renderDepth = 0), (this.handler = null);
          }
          begin() {
            this.handler?.validateBegin(), this.renderDepth++;
          }
          end() {
            this.renderDepth--,
              0 === this.renderDepth && this.handler?.execute();
          }
          ngOnDestroy() {
            this.handler?.destroy(), (this.handler = null);
          }
          static #e = (this.ɵprov = I({
            token: t,
            providedIn: "root",
            factory: () => new t(),
          }));
        }
        return t;
      })();
      function zs(t) {
        for (; t; ) {
          t[ee] |= 64;
          const n = ks(t);
          if (ih(t) && !n) return t;
          t = n;
        }
        return null;
      }
      const Bb = new S("", { providedIn: "root", factory: () => !1 });
      let pc = null;
      function $b(t, n) {
        return t[n] ?? Gb();
      }
      function zb(t, n) {
        const e = Gb();
        e.producerNode?.length && ((t[n] = pc), (e.lView = t), (pc = qb()));
      }
      const SP = {
        ...gy,
        consumerIsAlwaysLive: !0,
        consumerMarkedDirty: (t) => {
          zs(t.lView);
        },
        lView: null,
      };
      function qb() {
        return Object.create(SP);
      }
      function Gb() {
        return (pc ??= qb()), pc;
      }
      const J = {};
      function M(t) {
        Wb(ue(), E(), At() + t, !1);
      }
      function Wb(t, n, e, i) {
        if (!i)
          if (3 == (3 & n[ee])) {
            const r = t.preOrderCheckHooks;
            null !== r && Ol(n, r, e);
          } else {
            const r = t.preOrderHooks;
            null !== r && Rl(n, r, 0, e);
          }
        uo(e);
      }
      function y(t, n = ie.Default) {
        const e = E();
        return null === e ? C(t, n) : av(gt(), e, G(t), n);
      }
      function Mf() {
        throw new Error("invalid");
      }
      function mc(t, n, e, i, o, r, s, a, l, c, d) {
        const u = n.blueprint.slice();
        return (
          (u[Ge] = o),
          (u[ee] = 140 | i),
          (null !== c || (t && 2048 & t[ee])) && (u[ee] |= 2048),
          Ny(u),
          (u[Ve] = u[Zo] = t),
          (u[Ze] = e),
          (u[Ko] = s || (t && t[Ko])),
          (u[Q] = a || (t && t[Q])),
          (u[Ii] = l || (t && t[Ii]) || null),
          (u[bt] = r),
          (u[bs] = (function N1() {
            return F1++;
          })()),
          (u[ii] = d),
          (u[hy] = c),
          (u[Qe] = 2 == n.type ? t[Qe] : u),
          u
        );
      }
      function Er(t, n, e, i, o) {
        let r = t.data[n];
        if (null === r)
          (r = (function Sf(t, n, e, i, o) {
            const r = Uy(),
              s = uh(),
              l = (t.data[n] = (function FP(t, n, e, i, o, r) {
                let s = n ? n.injectorIndex : -1,
                  a = 0;
                return (
                  tr() && (a |= 128),
                  {
                    type: e,
                    index: i,
                    insertBeforeIndex: null,
                    injectorIndex: s,
                    directiveStart: -1,
                    directiveEnd: -1,
                    directiveStylingLast: -1,
                    componentOffset: -1,
                    propertyBindings: null,
                    flags: a,
                    providerIndexes: 0,
                    value: o,
                    attrs: r,
                    mergedAttrs: null,
                    localNames: null,
                    initialInputs: void 0,
                    inputs: null,
                    outputs: null,
                    tView: null,
                    next: null,
                    prev: null,
                    projectionNext: null,
                    child: null,
                    parent: n,
                    projection: null,
                    styles: null,
                    stylesWithoutHost: null,
                    residualStyles: void 0,
                    classes: null,
                    classesWithoutHost: null,
                    residualClasses: void 0,
                    classBindings: 0,
                    styleBindings: 0,
                  }
                );
              })(0, s ? r : r && r.parent, e, n, i, o));
            return (
              null === t.firstChild && (t.firstChild = l),
              null !== r &&
                (s
                  ? null == r.child && null !== l.parent && (r.child = l)
                  : null === r.next && ((r.next = l), (l.prev = r))),
              l
            );
          })(t, n, e, i, o)),
            (function FO() {
              return q.lFrame.inI18n;
            })() && (r.flags |= 32);
        else if (64 & r.type) {
          (r.type = e), (r.value = i), (r.attrs = o);
          const s = (function Es() {
            const t = q.lFrame,
              n = t.currentTNode;
            return t.isParent ? n : n.parent;
          })();
          r.injectorIndex = null === s ? -1 : s.injectorIndex;
        }
        return Bn(r, !0), r;
      }
      function qs(t, n, e, i) {
        if (0 === e) return -1;
        const o = n.length;
        for (let r = 0; r < e; r++)
          n.push(i), t.blueprint.push(i), t.data.push(null);
        return o;
      }
      function Yb(t, n, e, i, o) {
        const r = $b(n, Cs),
          s = At(),
          a = 2 & i;
        try {
          uo(-1), a && n.length > oe && Wb(t, n, oe, !1), Vn(a ? 2 : 0, o);
          const c = a ? r : null,
            d = rh(c);
          try {
            null !== c && (c.dirty = !1), e(i, o);
          } finally {
            sh(c, d);
          }
        } finally {
          a && null === n[Cs] && zb(n, Cs), uo(s), Vn(a ? 3 : 1, o);
        }
      }
      function Tf(t, n, e) {
        if (nh(n)) {
          const i = un(null);
          try {
            const r = n.directiveEnd;
            for (let s = n.directiveStart; s < r; s++) {
              const a = t.data[s];
              a.contentQueries && a.contentQueries(1, e[s], s);
            }
          } finally {
            un(i);
          }
        }
      }
      function If(t, n, e) {
        Hy() &&
          ((function UP(t, n, e, i) {
            const o = e.directiveStart,
              r = e.directiveEnd;
            lo(e) &&
              (function KP(t, n, e) {
                const i = Ht(n, t),
                  o = Kb(e);
                let s = 16;
                e.signals ? (s = 4096) : e.onPush && (s = 64);
                const a = gc(
                  t,
                  mc(
                    t,
                    o,
                    null,
                    s,
                    i,
                    n,
                    null,
                    t[Ko].rendererFactory.createRenderer(i, e),
                    null,
                    null,
                    null
                  )
                );
                t[n.index] = a;
              })(n, e, t.data[o + e.componentOffset]),
              t.firstCreatePass || kl(e, n),
              Ct(i, n);
            const s = e.initialInputs;
            for (let a = o; a < r; a++) {
              const l = t.data[a],
                c = ho(n, t, a, e);
              Ct(c, n),
                null !== s && ZP(0, a - o, c, l, 0, s),
                xn(l) && (Zt(e.index, n)[Ze] = ho(n, t, a, e));
            }
          })(t, n, e, Ht(e, n)),
          64 == (64 & e.flags) && eC(t, n, e));
      }
      function Af(t, n, e = Ht) {
        const i = n.localNames;
        if (null !== i) {
          let o = n.index + 1;
          for (let r = 0; r < i.length; r += 2) {
            const s = i[r + 1],
              a = -1 === s ? e(n, t) : t[s];
            t[o++] = a;
          }
        }
      }
      function Kb(t) {
        const n = t.tView;
        return null === n || n.incompleteFirstPass
          ? (t.tView = Of(
              1,
              null,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts,
              t.id
            ))
          : n;
      }
      function Of(t, n, e, i, o, r, s, a, l, c, d) {
        const u = oe + i,
          h = u + o,
          f = (function IP(t, n) {
            const e = [];
            for (let i = 0; i < n; i++) e.push(i < t ? null : J);
            return e;
          })(u, h),
          p = "function" == typeof c ? c() : c;
        return (f[P] = {
          type: t,
          blueprint: f,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: n,
          data: f.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: h,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof r ? r() : r,
          pipeRegistry: "function" == typeof s ? s() : s,
          firstChild: null,
          schemas: l,
          consts: p,
          incompleteFirstPass: !1,
          ssrId: d,
        });
      }
      let Zb = (t) => null;
      function Qb(t, n, e, i) {
        for (let o in t)
          if (t.hasOwnProperty(o)) {
            e = null === e ? {} : e;
            const r = t[o];
            null === i
              ? Xb(e, n, o, r)
              : i.hasOwnProperty(o) && Xb(e, n, i[o], r);
          }
        return e;
      }
      function Xb(t, n, e, i) {
        t.hasOwnProperty(e) ? t[e].push(n, i) : (t[e] = [n, i]);
      }
      function Jt(t, n, e, i, o, r, s, a) {
        const l = Ht(n, e);
        let d,
          c = n.inputs;
        !a && null != c && (d = c[i])
          ? (Nf(t, e, d, i, o),
            lo(n) &&
              (function VP(t, n) {
                const e = Zt(n, t);
                16 & e[ee] || (e[ee] |= 64);
              })(e, n.index))
          : 3 & n.type &&
            ((i = (function LP(t) {
              return "class" === t
                ? "className"
                : "for" === t
                ? "htmlFor"
                : "formaction" === t
                ? "formAction"
                : "innerHtml" === t
                ? "innerHTML"
                : "readonly" === t
                ? "readOnly"
                : "tabindex" === t
                ? "tabIndex"
                : t;
            })(i)),
            (o = null != s ? s(o, n.value || "", i) : o),
            r.setProperty(l, i, o));
      }
      function Rf(t, n, e, i) {
        if (Hy()) {
          const o = null === i ? null : { "": -1 },
            r = (function zP(t, n) {
              const e = t.directiveRegistry;
              let i = null,
                o = null;
              if (e)
                for (let r = 0; r < e.length; r++) {
                  const s = e[r];
                  if (sy(n, s.selectors, !1))
                    if ((i || (i = []), xn(s)))
                      if (null !== s.findHostDirectiveDefs) {
                        const a = [];
                        (o = o || new Map()),
                          s.findHostDirectiveDefs(s, a, o),
                          i.unshift(...a, s),
                          Pf(t, n, a.length);
                      } else i.unshift(s), Pf(t, n, 0);
                    else
                      (o = o || new Map()),
                        s.findHostDirectiveDefs?.(s, i, o),
                        i.push(s);
                }
              return null === i ? null : [i, o];
            })(t, e);
          let s, a;
          null === r ? (s = a = null) : ([s, a] = r),
            null !== s && Jb(t, n, e, s, o, a),
            o &&
              (function qP(t, n, e) {
                if (n) {
                  const i = (t.localNames = []);
                  for (let o = 0; o < n.length; o += 2) {
                    const r = e[n[o + 1]];
                    if (null == r) throw new x(-301, !1);
                    i.push(n[o], r);
                  }
                }
              })(e, i, o);
        }
        e.mergedAttrs = gs(e.mergedAttrs, e.attrs);
      }
      function Jb(t, n, e, i, o, r) {
        for (let c = 0; c < i.length; c++) xh(kl(e, n), t, i[c].type);
        !(function WP(t, n, e) {
          (t.flags |= 1),
            (t.directiveStart = n),
            (t.directiveEnd = n + e),
            (t.providerIndexes = n);
        })(e, t.data.length, i.length);
        for (let c = 0; c < i.length; c++) {
          const d = i[c];
          d.providersResolver && d.providersResolver(d);
        }
        let s = !1,
          a = !1,
          l = qs(t, n, i.length, null);
        for (let c = 0; c < i.length; c++) {
          const d = i[c];
          (e.mergedAttrs = gs(e.mergedAttrs, d.hostAttrs)),
            YP(t, e, n, l, d),
            GP(l, d, o),
            null !== d.contentQueries && (e.flags |= 4),
            (null !== d.hostBindings ||
              null !== d.hostAttrs ||
              0 !== d.hostVars) &&
              (e.flags |= 64);
          const u = d.type.prototype;
          !s &&
            (u.ngOnChanges || u.ngOnInit || u.ngDoCheck) &&
            ((t.preOrderHooks ??= []).push(e.index), (s = !0)),
            !a &&
              (u.ngOnChanges || u.ngDoCheck) &&
              ((t.preOrderCheckHooks ??= []).push(e.index), (a = !0)),
            l++;
        }
        !(function NP(t, n, e) {
          const o = n.directiveEnd,
            r = t.data,
            s = n.attrs,
            a = [];
          let l = null,
            c = null;
          for (let d = n.directiveStart; d < o; d++) {
            const u = r[d],
              h = e ? e.get(u) : null,
              p = h ? h.outputs : null;
            (l = Qb(u.inputs, d, l, h ? h.inputs : null)),
              (c = Qb(u.outputs, d, c, p));
            const m = null === l || null === s || ry(n) ? null : QP(l, d, s);
            a.push(m);
          }
          null !== l &&
            (l.hasOwnProperty("class") && (n.flags |= 8),
            l.hasOwnProperty("style") && (n.flags |= 16)),
            (n.initialInputs = a),
            (n.inputs = l),
            (n.outputs = c);
        })(t, e, r);
      }
      function eC(t, n, e) {
        const i = e.directiveStart,
          o = e.directiveEnd,
          r = e.index,
          s = (function LO() {
            return q.lFrame.currentDirectiveIndex;
          })();
        try {
          uo(r);
          for (let a = i; a < o; a++) {
            const l = t.data[a],
              c = n[a];
            fh(a),
              (null !== l.hostBindings ||
                0 !== l.hostVars ||
                null !== l.hostAttrs) &&
                $P(l, c);
          }
        } finally {
          uo(-1), fh(s);
        }
      }
      function $P(t, n) {
        null !== t.hostBindings && t.hostBindings(1, n);
      }
      function Pf(t, n, e) {
        (n.componentOffset = e), (t.components ??= []).push(n.index);
      }
      function GP(t, n, e) {
        if (e) {
          if (n.exportAs)
            for (let i = 0; i < n.exportAs.length; i++) e[n.exportAs[i]] = t;
          xn(n) && (e[""] = t);
        }
      }
      function YP(t, n, e, i, o) {
        t.data[i] = o;
        const r = o.factory || (o.factory = co(o.type)),
          s = new Ms(r, xn(o), y);
        (t.blueprint[i] = s),
          (e[i] = s),
          (function jP(t, n, e, i, o) {
            const r = o.hostBindings;
            if (r) {
              let s = t.hostBindingOpCodes;
              null === s && (s = t.hostBindingOpCodes = []);
              const a = ~n.index;
              (function HP(t) {
                let n = t.length;
                for (; n > 0; ) {
                  const e = t[--n];
                  if ("number" == typeof e && e < 0) return e;
                }
                return 0;
              })(s) != a && s.push(a),
                s.push(e, i, r);
            }
          })(t, n, i, qs(t, e, o.hostVars, J), o);
      }
      function Hn(t, n, e, i, o, r) {
        const s = Ht(t, n);
        !(function kf(t, n, e, i, o, r, s) {
          if (null == r) t.removeAttribute(n, o, e);
          else {
            const a = null == s ? K(r) : s(r, i || "", o);
            t.setAttribute(n, o, a, e);
          }
        })(n[Q], s, r, t.value, e, i, o);
      }
      function ZP(t, n, e, i, o, r) {
        const s = r[n];
        if (null !== s)
          for (let a = 0; a < s.length; ) tC(i, e, s[a++], s[a++], s[a++]);
      }
      function tC(t, n, e, i, o) {
        const r = un(null);
        try {
          const s = t.inputTransforms;
          null !== s && s.hasOwnProperty(i) && (o = s[i].call(n, o)),
            null !== t.setInput ? t.setInput(n, o, e, i) : (n[i] = o);
        } finally {
          un(r);
        }
      }
      function QP(t, n, e) {
        let i = null,
          o = 0;
        for (; o < e.length; ) {
          const r = e[o];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              if (t.hasOwnProperty(r)) {
                null === i && (i = []);
                const s = t[r];
                for (let a = 0; a < s.length; a += 2)
                  if (s[a] === n) {
                    i.push(r, s[a + 1], e[o + 1]);
                    break;
                  }
              }
              o += 2;
            } else o += 2;
          else o += 4;
        }
        return i;
      }
      function nC(t, n, e, i) {
        return [t, !0, !1, n, null, 0, i, e, null, null, null];
      }
      function iC(t, n) {
        const e = t.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const r = e[i + 1];
            if (-1 !== r) {
              const s = t.data[r];
              mh(e[i]), s.contentQueries(2, n[r], r);
            }
          }
      }
      function gc(t, n) {
        return t[ys] ? (t[uy][Dn] = n) : (t[ys] = n), (t[uy] = n), n;
      }
      function Ff(t, n, e) {
        mh(0);
        const i = un(null);
        try {
          n(t, e);
        } finally {
          un(i);
        }
      }
      function oC(t) {
        return t[Yo] || (t[Yo] = []);
      }
      function rC(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function aC(t, n) {
        const e = t[Ii],
          i = e ? e.get(li, null) : null;
        i && i.handleError(n);
      }
      function Nf(t, n, e, i, o) {
        for (let r = 0; r < e.length; ) {
          const s = e[r++],
            a = e[r++];
          tC(t.data[s], n[s], i, a, o);
        }
      }
      function di(t, n, e) {
        const i = Tl(n, t);
        !(function Lv(t, n, e) {
          t.setValue(n, e);
        })(t[Q], i, e);
      }
      function XP(t, n) {
        const e = Zt(n, t),
          i = e[P];
        !(function JP(t, n) {
          for (let e = n.length; e < t.blueprint.length; e++)
            n.push(t.blueprint[e]);
        })(i, e);
        const o = e[Ge];
        null !== o && null === e[ii] && (e[ii] = mf(o, e[Ii])), Lf(i, e, e[Ze]);
      }
      function Lf(t, n, e) {
        gh(n);
        try {
          const i = t.viewQuery;
          null !== i && Ff(1, i, e);
          const o = t.template;
          null !== o && Yb(t, n, o, 1, e),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && iC(t, n),
            t.staticViewQueries && Ff(2, t.viewQuery, e);
          const r = t.components;
          null !== r &&
            (function ek(t, n) {
              for (let e = 0; e < n.length; e++) XP(t, n[e]);
            })(n, r);
        } catch (i) {
          throw (
            (t.firstCreatePass &&
              ((t.incompleteFirstPass = !0), (t.firstCreatePass = !1)),
            i)
          );
        } finally {
          (n[ee] &= -5), _h();
        }
      }
      let lC = (() => {
        class t {
          constructor() {
            (this.all = new Set()), (this.queue = new Map());
          }
          create(e, i, o) {
            const r = typeof Zone > "u" ? null : Zone.current,
              s = (function fO(t, n, e) {
                const i = Object.create(pO);
                e && (i.consumerAllowSignalWrites = !0),
                  (i.fn = t),
                  (i.schedule = n);
                const o = (s) => {
                  i.cleanupFn = s;
                };
                return (
                  (i.ref = {
                    notify: () => by(i),
                    run: () => {
                      if (((i.dirty = !1), i.hasRun && !Cy(i))) return;
                      i.hasRun = !0;
                      const s = rh(i);
                      try {
                        i.cleanupFn(), (i.cleanupFn = Iy), i.fn(o);
                      } finally {
                        sh(i, s);
                      }
                    },
                    cleanup: () => i.cleanupFn(),
                  }),
                  i.ref
                );
              })(
                e,
                (c) => {
                  this.all.has(c) && this.queue.set(c, r);
                },
                o
              );
            let a;
            this.all.add(s), s.notify();
            const l = () => {
              s.cleanup(), a?.(), this.all.delete(s), this.queue.delete(s);
            };
            return (a = i?.onDestroy(l)), { destroy: l };
          }
          flush() {
            if (0 !== this.queue.size)
              for (const [e, i] of this.queue)
                this.queue.delete(e), i ? i.run(() => e.run()) : e.run();
          }
          get isQueueEmpty() {
            return 0 === this.queue.size;
          }
          static #e = (this.ɵprov = I({
            token: t,
            providedIn: "root",
            factory: () => new t(),
          }));
        }
        return t;
      })();
      function _c(t, n, e) {
        let i = e ? t.styles : null,
          o = e ? t.classes : null,
          r = 0;
        if (null !== n)
          for (let s = 0; s < n.length; s++) {
            const a = n[s];
            "number" == typeof a
              ? (r = a)
              : 1 == r
              ? (o = ju(o, a))
              : 2 == r && (i = ju(i, a + ": " + n[++s] + ";"));
          }
        e ? (t.styles = i) : (t.stylesWithoutHost = i),
          e ? (t.classes = o) : (t.classesWithoutHost = o);
      }
      function Gs(t, n, e, i, o = !1) {
        for (; null !== e; ) {
          const r = n[e.index];
          null !== r && i.push(Oe(r)), St(r) && cC(r, i);
          const s = e.type;
          if (8 & s) Gs(t, n, e.child, i);
          else if (32 & s) {
            const a = Nh(e, n);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & s) {
            const a = Gv(n, e);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = ks(n[Qe]);
              Gs(l[P], l, a, i, !0);
            }
          }
          e = o ? e.projectionNext : e.next;
        }
        return i;
      }
      function cC(t, n) {
        for (let e = pt; e < t.length; e++) {
          const i = t[e],
            o = i[P].firstChild;
          null !== o && Gs(i[P], i, o, n);
        }
        t[Ln] !== t[Ge] && n.push(t[Ln]);
      }
      function yc(t, n, e, i = !0) {
        const o = n[Ko],
          r = o.rendererFactory,
          s = o.afterRenderEventManager;
        r.begin?.(), s?.begin();
        try {
          dC(t, n, t.template, e);
        } catch (l) {
          throw (i && aC(n, l), l);
        } finally {
          r.end?.(), o.effectManager?.flush(), s?.end();
        }
      }
      function dC(t, n, e, i) {
        const o = n[ee];
        if (256 != (256 & o)) {
          n[Ko].effectManager?.flush(), gh(n);
          try {
            Ny(n),
              (function zy(t) {
                return (q.lFrame.bindingIndex = t);
              })(t.bindingStartIndex),
              null !== e && Yb(t, n, e, 2, i);
            const s = 3 == (3 & o);
            if (s) {
              const c = t.preOrderCheckHooks;
              null !== c && Ol(n, c, null);
            } else {
              const c = t.preOrderHooks;
              null !== c && Rl(n, c, 0, null), vh(n, 0);
            }
            if (
              ((function ik(t) {
                for (let n = kv(t); null !== n; n = Fv(n)) {
                  if (!n[fy]) continue;
                  const e = n[Xo];
                  for (let i = 0; i < e.length; i++) {
                    xO(e[i]);
                  }
                }
              })(n),
              uC(n, 2),
              null !== t.contentQueries && iC(t, n),
              s)
            ) {
              const c = t.contentCheckHooks;
              null !== c && Ol(n, c);
            } else {
              const c = t.contentHooks;
              null !== c && Rl(n, c, 1), vh(n, 1);
            }
            !(function TP(t, n) {
              const e = t.hostBindingOpCodes;
              if (null === e) return;
              const i = $b(n, ws);
              try {
                for (let o = 0; o < e.length; o++) {
                  const r = e[o];
                  if (r < 0) uo(~r);
                  else {
                    const s = r,
                      a = e[++o],
                      l = e[++o];
                    NO(a, s), (i.dirty = !1);
                    const c = rh(i);
                    try {
                      l(2, n[s]);
                    } finally {
                      sh(i, c);
                    }
                  }
                }
              } finally {
                null === n[ws] && zb(n, ws), uo(-1);
              }
            })(t, n);
            const a = t.components;
            null !== a && fC(n, a, 0);
            const l = t.viewQuery;
            if ((null !== l && Ff(2, l, i), s)) {
              const c = t.viewCheckHooks;
              null !== c && Ol(n, c);
            } else {
              const c = t.viewHooks;
              null !== c && Rl(n, c, 2), vh(n, 2);
            }
            !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
              (n[ee] &= -73),
              Ly(n);
          } finally {
            _h();
          }
        }
      }
      function uC(t, n) {
        for (let e = kv(t); null !== e; e = Fv(e))
          for (let i = pt; i < e.length; i++) hC(e[i], n);
      }
      function ok(t, n, e) {
        hC(Zt(n, t), e);
      }
      function hC(t, n) {
        if (
          !(function wO(t) {
            return 128 == (128 & t[ee]);
          })(t)
        )
          return;
        const e = t[P],
          i = t[ee];
        if ((80 & i && 0 === n) || 1024 & i || 2 === n)
          dC(e, t, e.template, t[Ze]);
        else if (t[_s] > 0) {
          uC(t, 1);
          const o = e.components;
          null !== o && fC(t, o, 1);
        }
      }
      function fC(t, n, e) {
        for (let i = 0; i < n.length; i++) ok(t, n[i], e);
      }
      class Ws {
        get rootNodes() {
          const n = this._lView,
            e = n[P];
          return Gs(e, n, e.firstChild, []);
        }
        constructor(n, e) {
          (this._lView = n),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[Ze];
        }
        set context(n) {
          this._lView[Ze] = n;
        }
        get destroyed() {
          return 256 == (256 & this._lView[ee]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const n = this._lView[Ve];
            if (St(n)) {
              const e = n[8],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (Zl(n, i), Vl(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          Vh(this._lView[P], this._lView);
        }
        onDestroy(n) {
          !(function By(t, n) {
            if (256 == (256 & t[ee])) throw new x(911, !1);
            null === t[Ai] && (t[Ai] = []), t[Ai].push(n);
          })(this._lView, n);
        }
        markForCheck() {
          zs(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[ee] &= -129;
        }
        reattach() {
          this._lView[ee] |= 128;
        }
        detectChanges() {
          yc(this._lView[P], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new x(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function Z1(t, n) {
              Ns(t, n, n[Q], 2, null, null);
            })(this._lView[P], this._lView);
        }
        attachToAppRef(n) {
          if (this._attachedToViewContainer) throw new x(902, !1);
          this._appRef = n;
        }
      }
      class rk extends Ws {
        constructor(n) {
          super(n), (this._view = n);
        }
        detectChanges() {
          const n = this._view;
          yc(n[P], n, n[Ze], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class pC extends mo {
        constructor(n) {
          super(), (this.ngModule = n);
        }
        resolveComponentFactory(n) {
          const e = de(n);
          return new Ys(e, this.ngModule);
        }
      }
      function mC(t) {
        const n = [];
        for (let e in t)
          t.hasOwnProperty(e) && n.push({ propName: t[e], templateName: e });
        return n;
      }
      class ak {
        constructor(n, e) {
          (this.injector = n), (this.parentInjector = e);
        }
        get(n, e, i) {
          i = bl(i);
          const o = this.injector.get(n, yf, i);
          return o !== yf || e === yf ? o : this.parentInjector.get(n, e, i);
        }
      }
      class Ys extends wb {
        get inputs() {
          const n = this.componentDef,
            e = n.inputTransforms,
            i = mC(n.inputs);
          if (null !== e)
            for (const o of i)
              e.hasOwnProperty(o.propName) && (o.transform = e[o.propName]);
          return i;
        }
        get outputs() {
          return mC(this.componentDef.outputs);
        }
        constructor(n, e) {
          super(),
            (this.componentDef = n),
            (this.ngModule = e),
            (this.componentType = n.type),
            (this.selector = (function YA(t) {
              return t.map(WA).join(",");
            })(n.selectors)),
            (this.ngContentSelectors = n.ngContentSelectors
              ? n.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        create(n, e, i, o) {
          let r = (o = o || this.ngModule) instanceof Xt ? o : o?.injector;
          r &&
            null !== this.componentDef.getStandaloneInjector &&
            (r = this.componentDef.getStandaloneInjector(r) || r);
          const s = r ? new ak(n, r) : n,
            a = s.get(wr, null);
          if (null === a) throw new x(407, !1);
          const u = {
              rendererFactory: a,
              sanitizer: s.get(oP, null),
              effectManager: s.get(lC, null),
              afterRenderEventManager: s.get(Ef, null),
            },
            h = a.createRenderer(null, this.componentDef),
            f = this.componentDef.selectors[0][0] || "div",
            p = i
              ? (function AP(t, n, e, i) {
                  const r = i.get(Bb, !1) || e === dn.ShadowDom,
                    s = t.selectRootElement(n, r);
                  return (
                    (function OP(t) {
                      Zb(t);
                    })(s),
                    s
                  );
                })(h, i, this.componentDef.encapsulation, s)
              : Kl(
                  h,
                  f,
                  (function sk(t) {
                    const n = t.toLowerCase();
                    return "svg" === n ? Py : "math" === n ? "math" : null;
                  })(f)
                ),
            D = this.componentDef.signals
              ? 4608
              : this.componentDef.onPush
              ? 576
              : 528;
          let b = null;
          null !== p && (b = mf(p, s, !0));
          const O = Of(0, null, null, 1, 0, null, null, null, null, null, null),
            k = mc(null, O, null, D, null, null, u, h, s, null, b);
          let Y, xe;
          gh(k);
          try {
            const ke = this.componentDef;
            let yt,
              an = null;
            ke.findHostDirectiveDefs
              ? ((yt = []),
                (an = new Map()),
                ke.findHostDirectiveDefs(ke, yt, an),
                yt.push(ke))
              : (yt = [ke]);
            const Pn = (function ck(t, n) {
                const e = t[P],
                  i = oe;
                return (t[i] = n), Er(e, i, 2, "#host", null);
              })(k, p),
              Eu = (function dk(t, n, e, i, o, r, s) {
                const a = o[P];
                !(function uk(t, n, e, i) {
                  for (const o of t)
                    n.mergedAttrs = gs(n.mergedAttrs, o.hostAttrs);
                  null !== n.mergedAttrs &&
                    (_c(n, n.mergedAttrs, !0), null !== e && Zv(i, e, n));
                })(i, t, n, s);
                let l = null;
                null !== n && (l = mf(n, o[Ii]));
                const c = r.rendererFactory.createRenderer(n, e);
                let d = 16;
                e.signals ? (d = 4096) : e.onPush && (d = 64);
                const u = mc(
                  o,
                  Kb(e),
                  null,
                  d,
                  o[t.index],
                  t,
                  r,
                  c,
                  null,
                  null,
                  l
                );
                return (
                  a.firstCreatePass && Pf(a, t, i.length - 1),
                  gc(o, u),
                  (o[t.index] = u)
                );
              })(Pn, p, ke, yt, k, u, h);
            (xe = Fy(O, oe)),
              p &&
                (function fk(t, n, e, i) {
                  if (i) eh(t, e, ["ng-version", rP.full]);
                  else {
                    const { attrs: o, classes: r } = (function KA(t) {
                      const n = [],
                        e = [];
                      let i = 1,
                        o = 2;
                      for (; i < t.length; ) {
                        let r = t[i];
                        if ("string" == typeof r)
                          2 === o
                            ? "" !== r && n.push(r, t[++i])
                            : 8 === o && e.push(r);
                        else {
                          if (!wn(o)) break;
                          o = r;
                        }
                        i++;
                      }
                      return { attrs: n, classes: e };
                    })(n.selectors[0]);
                    o && eh(t, e, o),
                      r && r.length > 0 && Kv(t, e, r.join(" "));
                  }
                })(h, ke, p, i),
              void 0 !== e &&
                (function pk(t, n, e) {
                  const i = (t.projection = []);
                  for (let o = 0; o < n.length; o++) {
                    const r = e[o];
                    i.push(null != r ? Array.from(r) : null);
                  }
                })(xe, this.ngContentSelectors, e),
              (Y = (function hk(t, n, e, i, o, r) {
                const s = gt(),
                  a = o[P],
                  l = Ht(s, o);
                Jb(a, o, s, e, null, i);
                for (let d = 0; d < e.length; d++)
                  Ct(ho(o, a, s.directiveStart + d, s), o);
                eC(a, o, s), l && Ct(l, o);
                const c = ho(o, a, s.directiveStart + s.componentOffset, s);
                if (((t[Ze] = o[Ze] = c), null !== r))
                  for (const d of r) d(c, n);
                return Tf(a, s, t), c;
              })(Eu, ke, yt, an, k, [mk])),
              Lf(O, k, null);
          } finally {
            _h();
          }
          return new lk(this.componentType, Y, Cr(xe, k), k, xe);
        }
      }
      class lk extends XR {
        constructor(n, e, i, o, r) {
          super(),
            (this.location = i),
            (this._rootLView = o),
            (this._tNode = r),
            (this.previousInputValues = null),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new rk(o)),
            (this.componentType = n);
        }
        setInput(n, e) {
          const i = this._tNode.inputs;
          let o;
          if (null !== i && (o = i[n])) {
            if (
              ((this.previousInputValues ??= new Map()),
              this.previousInputValues.has(n) &&
                Object.is(this.previousInputValues.get(n), e))
            )
              return;
            const r = this._rootLView;
            Nf(r[P], r, o, n, e),
              this.previousInputValues.set(n, e),
              zs(Zt(this._tNode.index, r));
          }
        }
        get injector() {
          return new Ot(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(n) {
          this.hostView.onDestroy(n);
        }
      }
      function mk() {
        const t = gt();
        Al(E()[P], t);
      }
      function le(t) {
        let n = (function gC(t) {
            return Object.getPrototypeOf(t.prototype).constructor;
          })(t.type),
          e = !0;
        const i = [t];
        for (; n; ) {
          let o;
          if (xn(t)) o = n.ɵcmp || n.ɵdir;
          else {
            if (n.ɵcmp) throw new x(903, !1);
            o = n.ɵdir;
          }
          if (o) {
            if (e) {
              i.push(o);
              const s = t;
              (s.inputs = vc(t.inputs)),
                (s.inputTransforms = vc(t.inputTransforms)),
                (s.declaredInputs = vc(t.declaredInputs)),
                (s.outputs = vc(t.outputs));
              const a = o.hostBindings;
              a && vk(t, a);
              const l = o.viewQuery,
                c = o.contentQueries;
              if (
                (l && _k(t, l),
                c && yk(t, c),
                pl(t.inputs, o.inputs),
                pl(t.declaredInputs, o.declaredInputs),
                pl(t.outputs, o.outputs),
                null !== o.inputTransforms &&
                  (null === s.inputTransforms && (s.inputTransforms = {}),
                  pl(s.inputTransforms, o.inputTransforms)),
                xn(o) && o.data.animation)
              ) {
                const d = t.data;
                d.animation = (d.animation || []).concat(o.data.animation);
              }
            }
            const r = o.features;
            if (r)
              for (let s = 0; s < r.length; s++) {
                const a = r[s];
                a && a.ngInherit && a(t), a === le && (e = !1);
              }
          }
          n = Object.getPrototypeOf(n);
        }
        !(function gk(t) {
          let n = 0,
            e = null;
          for (let i = t.length - 1; i >= 0; i--) {
            const o = t[i];
            (o.hostVars = n += o.hostVars),
              (o.hostAttrs = gs(o.hostAttrs, (e = gs(e, o.hostAttrs))));
          }
        })(i);
      }
      function vc(t) {
        return t === Fn ? {} : t === pe ? [] : t;
      }
      function _k(t, n) {
        const e = t.viewQuery;
        t.viewQuery = e
          ? (i, o) => {
              n(i, o), e(i, o);
            }
          : n;
      }
      function yk(t, n) {
        const e = t.contentQueries;
        t.contentQueries = e
          ? (i, o, r) => {
              n(i, o, r), e(i, o, r);
            }
          : n;
      }
      function vk(t, n) {
        const e = t.hostBindings;
        t.hostBindings = e
          ? (i, o) => {
              n(i, o), e(i, o);
            }
          : n;
      }
      function bc(t) {
        return (
          !!Vf(t) &&
          (Array.isArray(t) || (!(t instanceof Map) && Symbol.iterator in t))
        );
      }
      function Vf(t) {
        return null !== t && ("function" == typeof t || "object" == typeof t);
      }
      function Un(t, n, e) {
        return (t[n] = e);
      }
      function wt(t, n, e) {
        return !Object.is(t[n], e) && ((t[n] = e), !0);
      }
      function _o(t, n, e, i) {
        const o = wt(t, n, e);
        return wt(t, n + 1, i) || o;
      }
      function Cc(t, n, e, i, o) {
        const r = _o(t, n, e, i);
        return wt(t, n + 2, o) || r;
      }
      function We(t, n, e, i) {
        const o = E();
        return wt(o, nr(), n) && (ue(), Hn(je(), o, t, n, e, i)), We;
      }
      function Sr(t, n, e, i) {
        return wt(t, nr(), e) ? n + K(e) + i : J;
      }
      function B(t, n, e, i, o, r, s, a) {
        const l = E(),
          c = ue(),
          d = t + oe,
          u = c.firstCreatePass
            ? (function zk(t, n, e, i, o, r, s, a, l) {
                const c = n.consts,
                  d = Er(n, t, 4, s || null, Ri(c, a));
                Rf(n, e, d, Ri(c, l)), Al(n, d);
                const u = (d.tView = Of(
                  2,
                  d,
                  i,
                  o,
                  r,
                  n.directiveRegistry,
                  n.pipeRegistry,
                  null,
                  n.schemas,
                  c,
                  null
                ));
                return (
                  null !== n.queries &&
                    (n.queries.template(n, d),
                    (u.queries = n.queries.embeddedTView(d))),
                  d
                );
              })(d, c, l, n, e, i, o, r, s)
            : c.data[d];
        Bn(u, !1);
        const h = PC(c, l, u, t);
        Il() && Xl(c, l, h, u),
          Ct(h, l),
          gc(l, (l[d] = nC(h, l, h, u))),
          El(u) && If(c, l, u),
          null != s && Af(l, u, a);
      }
      let PC = function kC(t, n, e, i) {
        return Pi(!0), n[Q].createComment("");
      };
      function T(t, n, e) {
        const i = E();
        return wt(i, nr(), n) && Jt(ue(), je(), i, t, n, i[Q], e, !1), T;
      }
      function zf(t, n, e, i, o) {
        const s = o ? "class" : "style";
        Nf(t, e, n.inputs[s], s, i);
      }
      function _(t, n, e, i) {
        const o = E(),
          r = ue(),
          s = oe + t,
          a = o[Q],
          l = r.firstCreatePass
            ? (function Kk(t, n, e, i, o, r) {
                const s = n.consts,
                  l = Er(n, t, 2, i, Ri(s, o));
                return (
                  Rf(n, e, l, Ri(s, r)),
                  null !== l.attrs && _c(l, l.attrs, !1),
                  null !== l.mergedAttrs && _c(l, l.mergedAttrs, !0),
                  null !== n.queries && n.queries.elementStart(n, l),
                  l
                );
              })(s, r, o, n, e, i)
            : r.data[s],
          c = FC(r, o, l, a, n, t);
        o[s] = c;
        const d = El(l);
        return (
          Bn(l, !0),
          Zv(a, c, l),
          32 != (32 & l.flags) && Il() && Xl(r, o, c, l),
          0 ===
            (function MO() {
              return q.lFrame.elementDepthCount;
            })() && Ct(c, o),
          (function SO() {
            q.lFrame.elementDepthCount++;
          })(),
          d && (If(r, o, l), Tf(r, l, o)),
          null !== i && Af(o, l),
          _
        );
      }
      function g() {
        let t = gt();
        uh() ? hh() : ((t = t.parent), Bn(t, !1));
        const n = t;
        (function IO(t) {
          return q.skipHydrationRootTNode === t;
        })(n) &&
          (function PO() {
            q.skipHydrationRootTNode = null;
          })(),
          (function TO() {
            q.lFrame.elementDepthCount--;
          })();
        const e = ue();
        return (
          e.firstCreatePass && (Al(e, t), nh(t) && e.queries.elementEnd(t)),
          null != n.classesWithoutHost &&
            (function WO(t) {
              return 0 != (8 & t.flags);
            })(n) &&
            zf(e, n, E(), n.classesWithoutHost, !0),
          null != n.stylesWithoutHost &&
            (function YO(t) {
              return 0 != (16 & t.flags);
            })(n) &&
            zf(e, n, E(), n.stylesWithoutHost, !1),
          g
        );
      }
      function ge(t, n, e, i) {
        return _(t, n, e, i), g(), ge;
      }
      let FC = (t, n, e, i, o, r) => (
        Pi(!0),
        Kl(
          i,
          o,
          (function Xy() {
            return q.lFrame.currentNamespace;
          })()
        )
      );
      function Rt() {
        return E();
      }
      function Js(t) {
        return !!t && "function" == typeof t.then;
      }
      function VC(t) {
        return !!t && "function" == typeof t.subscribe;
      }
      function F(t, n, e, i) {
        const o = E(),
          r = ue(),
          s = gt();
        return (
          (function jC(t, n, e, i, o, r, s) {
            const a = El(i),
              c = t.firstCreatePass && rC(t),
              d = n[Ze],
              u = oC(n);
            let h = !0;
            if (3 & i.type || s) {
              const m = Ht(i, n),
                v = s ? s(m) : m,
                D = u.length,
                b = s ? (k) => s(Oe(k[i.index])) : i.index;
              let O = null;
              if (
                (!s &&
                  a &&
                  (O = (function tF(t, n, e, i) {
                    const o = t.cleanup;
                    if (null != o)
                      for (let r = 0; r < o.length - 1; r += 2) {
                        const s = o[r];
                        if (s === e && o[r + 1] === i) {
                          const a = n[Yo],
                            l = o[r + 2];
                          return a.length > l ? a[l] : null;
                        }
                        "string" == typeof s && (r += 2);
                      }
                    return null;
                  })(t, n, o, i.index)),
                null !== O)
              )
                ((O.__ngLastListenerFn__ || O).__ngNextListenerFn__ = r),
                  (O.__ngLastListenerFn__ = r),
                  (h = !1);
              else {
                r = UC(i, n, d, r, !1);
                const k = e.listen(v, o, r);
                u.push(r, k), c && c.push(o, b, D, D + 1);
              }
            } else r = UC(i, n, d, r, !1);
            const f = i.outputs;
            let p;
            if (h && null !== f && (p = f[o])) {
              const m = p.length;
              if (m)
                for (let v = 0; v < m; v += 2) {
                  const Y = n[p[v]][p[v + 1]].subscribe(r),
                    xe = u.length;
                  u.push(r, Y), c && c.push(o, i.index, xe, -(xe + 1));
                }
            }
          })(r, o, o[Q], s, t, n, i),
          F
        );
      }
      function HC(t, n, e, i) {
        try {
          return Vn(6, n, e), !1 !== e(i);
        } catch (o) {
          return aC(t, o), !1;
        } finally {
          Vn(7, n, e);
        }
      }
      function UC(t, n, e, i, o) {
        return function r(s) {
          if (s === Function) return i;
          zs(t.componentOffset > -1 ? Zt(t.index, n) : n);
          let l = HC(n, e, i, s),
            c = r.__ngNextListenerFn__;
          for (; c; ) (l = HC(n, e, c, s) && l), (c = c.__ngNextListenerFn__);
          return o && !1 === l && s.preventDefault(), l;
        };
      }
      function L(t = 1) {
        return (function BO(t) {
          return (q.lFrame.contextLView = (function jO(t, n) {
            for (; t > 0; ) (n = n[Zo]), t--;
            return n;
          })(t, q.lFrame.contextLView))[Ze];
        })(t);
      }
      function nF(t, n) {
        let e = null;
        const i = (function $A(t) {
          const n = t.attrs;
          if (null != n) {
            const e = n.indexOf(5);
            if (!(1 & e)) return n[e + 1];
          }
          return null;
        })(t);
        for (let o = 0; o < n.length; o++) {
          const r = n[o];
          if ("*" !== r) {
            if (null === i ? sy(t, r, !0) : GA(i, r)) return o;
          } else e = o;
        }
        return e;
      }
      function Fr(t) {
        const n = E()[Qe][bt];
        if (!n.projection) {
          const i = (n.projection = Os(t ? t.length : 1, null)),
            o = i.slice();
          let r = n.child;
          for (; null !== r; ) {
            const s = t ? nF(r, t) : 0;
            null !== s &&
              (o[s] ? (o[s].projectionNext = r) : (i[s] = r), (o[s] = r)),
              (r = r.next);
          }
        }
      }
      function yo(t, n = 0, e) {
        const i = E(),
          o = ue(),
          r = Er(o, oe + t, 16, null, e || null);
        null === r.projection && (r.projection = n),
          hh(),
          (!i[ii] || tr()) &&
            32 != (32 & r.flags) &&
            (function oR(t, n, e) {
              Yv(n[Q], 0, n, e, jh(t, e, n), Uv(e.parent || n[bt], e, n));
            })(o, i, r);
      }
      function Ec(t, n, e) {
        return Ni(t, "", n, "", e), Ec;
      }
      function Ni(t, n, e, i, o) {
        const r = E(),
          s = Sr(r, n, e, i);
        return s !== J && Jt(ue(), je(), r, t, s, r[Q], o, !1), Ni;
      }
      function Mc(t, n) {
        return (t << 17) | (n << 2);
      }
      function Li(t) {
        return (t >> 17) & 32767;
      }
      function Wf(t) {
        return 2 | t;
      }
      function vo(t) {
        return (131068 & t) >> 2;
      }
      function Yf(t, n) {
        return (-131069 & t) | (n << 2);
      }
      function Kf(t) {
        return 1 | t;
      }
      function QC(t, n, e, i, o) {
        const r = t[e + 1],
          s = null === n;
        let a = i ? Li(r) : vo(r),
          l = !1;
        for (; 0 !== a && (!1 === l || s); ) {
          const d = t[a + 1];
          lF(t[a], n) && ((l = !0), (t[a + 1] = i ? Kf(d) : Wf(d))),
            (a = i ? Li(d) : vo(d));
        }
        l && (t[e + 1] = i ? Wf(r) : Kf(r));
      }
      function lF(t, n) {
        return (
          null === t ||
          null == n ||
          (Array.isArray(t) ? t[1] : t) === n ||
          (!(!Array.isArray(t) || "string" != typeof n) && dr(t, n) >= 0)
        );
      }
      const st = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function XC(t) {
        return t.substring(st.key, st.keyEnd);
      }
      function JC(t, n) {
        const e = st.textEnd;
        return e === n
          ? -1
          : ((n = st.keyEnd =
              (function hF(t, n, e) {
                for (; n < e && t.charCodeAt(n) > 32; ) n++;
                return n;
              })(t, (st.key = n), e)),
            Nr(t, n, e));
      }
      function Nr(t, n, e) {
        for (; n < e && t.charCodeAt(n) <= 32; ) n++;
        return n;
      }
      function Zf(t, n, e) {
        return Mn(t, n, e, !1), Zf;
      }
      function En(t, n) {
        return Mn(t, n, null, !0), En;
      }
      function zn(t, n) {
        for (
          let e = (function dF(t) {
            return (
              (function tw(t) {
                (st.key = 0),
                  (st.keyEnd = 0),
                  (st.value = 0),
                  (st.valueEnd = 0),
                  (st.textEnd = t.length);
              })(t),
              JC(t, Nr(t, 0, st.textEnd))
            );
          })(n);
          e >= 0;
          e = JC(n, e)
        )
          Qt(t, XC(n), !0);
      }
      function Mn(t, n, e, i) {
        const o = E(),
          r = ue(),
          s = ri(2);
        r.firstUpdatePass && rw(r, t, s, i),
          n !== J &&
            wt(o, s, n) &&
            aw(
              r,
              r.data[At()],
              o,
              o[Q],
              t,
              (o[s + 1] = (function xF(t, n) {
                return (
                  null == t ||
                    "" === t ||
                    ("string" == typeof n
                      ? (t += n)
                      : "object" == typeof t && (t = ot(Fi(t)))),
                  t
                );
              })(n, e)),
              i,
              s
            );
      }
      function ow(t, n) {
        return n >= t.expandoStartIndex;
      }
      function rw(t, n, e, i) {
        const o = t.data;
        if (null === o[e + 1]) {
          const r = o[At()],
            s = ow(t, e);
          cw(r, i) && null === n && !s && (n = !1),
            (n = (function _F(t, n, e, i) {
              const o = (function ph(t) {
                const n = q.lFrame.currentDirectiveIndex;
                return -1 === n ? null : t[n];
              })(t);
              let r = i ? n.residualClasses : n.residualStyles;
              if (null === o)
                0 === (i ? n.classBindings : n.styleBindings) &&
                  ((e = ea((e = Qf(null, t, n, e, i)), n.attrs, i)),
                  (r = null));
              else {
                const s = n.directiveStylingLast;
                if (-1 === s || t[s] !== o)
                  if (((e = Qf(o, t, n, e, i)), null === r)) {
                    let l = (function yF(t, n, e) {
                      const i = e ? n.classBindings : n.styleBindings;
                      if (0 !== vo(i)) return t[Li(i)];
                    })(t, n, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = Qf(null, t, n, l[1], i)),
                      (l = ea(l, n.attrs, i)),
                      (function vF(t, n, e, i) {
                        t[Li(e ? n.classBindings : n.styleBindings)] = i;
                      })(t, n, i, l));
                  } else
                    r = (function bF(t, n, e) {
                      let i;
                      const o = n.directiveEnd;
                      for (let r = 1 + n.directiveStylingLast; r < o; r++)
                        i = ea(i, t[r].hostAttrs, e);
                      return ea(i, n.attrs, e);
                    })(t, n, i);
              }
              return (
                void 0 !== r &&
                  (i ? (n.residualClasses = r) : (n.residualStyles = r)),
                e
              );
            })(o, r, n, i)),
            (function sF(t, n, e, i, o, r) {
              let s = r ? n.classBindings : n.styleBindings,
                a = Li(s),
                l = vo(s);
              t[i] = e;
              let d,
                c = !1;
              if (
                (Array.isArray(e)
                  ? ((d = e[1]), (null === d || dr(e, d) > 0) && (c = !0))
                  : (d = e),
                o)
              )
                if (0 !== l) {
                  const h = Li(t[a + 1]);
                  (t[i + 1] = Mc(h, a)),
                    0 !== h && (t[h + 1] = Yf(t[h + 1], i)),
                    (t[a + 1] = (function oF(t, n) {
                      return (131071 & t) | (n << 17);
                    })(t[a + 1], i));
                } else
                  (t[i + 1] = Mc(a, 0)),
                    0 !== a && (t[a + 1] = Yf(t[a + 1], i)),
                    (a = i);
              else
                (t[i + 1] = Mc(l, 0)),
                  0 === a ? (a = i) : (t[l + 1] = Yf(t[l + 1], i)),
                  (l = i);
              c && (t[i + 1] = Wf(t[i + 1])),
                QC(t, d, i, !0),
                QC(t, d, i, !1),
                (function aF(t, n, e, i, o) {
                  const r = o ? t.residualClasses : t.residualStyles;
                  null != r &&
                    "string" == typeof n &&
                    dr(r, n) >= 0 &&
                    (e[i + 1] = Kf(e[i + 1]));
                })(n, d, t, i, r),
                (s = Mc(a, l)),
                r ? (n.classBindings = s) : (n.styleBindings = s);
            })(o, r, n, e, s, i);
        }
      }
      function Qf(t, n, e, i, o) {
        let r = null;
        const s = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < s && ((r = n[a]), (i = ea(i, r.hostAttrs, o)), r !== t);

        )
          a++;
        return null !== t && (e.directiveStylingLast = a), i;
      }
      function ea(t, n, e) {
        const i = e ? 1 : 2;
        let o = -1;
        if (null !== n)
          for (let r = 0; r < n.length; r++) {
            const s = n[r];
            "number" == typeof s
              ? (o = s)
              : o === i &&
                (Array.isArray(t) || (t = void 0 === t ? [] : ["", t]),
                Qt(t, s, !!e || n[++r]));
          }
        return void 0 === t ? null : t;
      }
      function aw(t, n, e, i, o, r, s, a) {
        if (!(3 & n.type)) return;
        const l = t.data,
          c = l[a + 1],
          d = (function rF(t) {
            return 1 == (1 & t);
          })(c)
            ? lw(l, n, e, o, vo(c), s)
            : void 0;
        Sc(d) ||
          (Sc(r) ||
            ((function iF(t) {
              return 2 == (2 & t);
            })(c) &&
              (r = lw(l, null, e, o, a, s))),
          (function sR(t, n, e, i, o) {
            if (n) o ? t.addClass(e, i) : t.removeClass(e, i);
            else {
              let r = -1 === i.indexOf("-") ? void 0 : ki.DashCase;
              null == o
                ? t.removeStyle(e, i, r)
                : ("string" == typeof o &&
                    o.endsWith("!important") &&
                    ((o = o.slice(0, -10)), (r |= ki.Important)),
                  t.setStyle(e, i, o, r));
            }
          })(i, s, Tl(At(), e), o, r));
      }
      function lw(t, n, e, i, o, r) {
        const s = null === n;
        let a;
        for (; o > 0; ) {
          const l = t[o],
            c = Array.isArray(l),
            d = c ? l[1] : l,
            u = null === d;
          let h = e[o + 1];
          h === J && (h = u ? pe : void 0);
          let f = u ? Sh(h, i) : d === i ? h : void 0;
          if ((c && !Sc(f) && (f = Sh(l, i)), Sc(f) && ((a = f), s))) return a;
          const p = t[o + 1];
          o = s ? Li(p) : vo(p);
        }
        if (null !== n) {
          let l = r ? n.residualClasses : n.residualStyles;
          null != l && (a = Sh(l, i));
        }
        return a;
      }
      function Sc(t) {
        return void 0 !== t;
      }
      function cw(t, n) {
        return 0 != (t.flags & (n ? 8 : 16));
      }
      function w(t, n = "") {
        const e = E(),
          i = ue(),
          o = t + oe,
          r = i.firstCreatePass ? Er(i, o, 1, n, null) : i.data[o],
          s = dw(i, e, r, n, t);
        (e[o] = s), Il() && Xl(i, e, s, r), Bn(r, !1);
      }
      let dw = (t, n, e, i, o) => (
        Pi(!0),
        (function Yl(t, n) {
          return t.createText(n);
        })(n[Q], i)
      );
      function qn(t) {
        return Ne("", t, ""), qn;
      }
      function Ne(t, n, e) {
        const i = E(),
          o = Sr(i, t, n, e);
        return o !== J && di(i, At(), o), Ne;
      }
      function Xf(t, n, e, i, o) {
        const r = E(),
          s = (function Tr(t, n, e, i, o, r) {
            const a = _o(t, oi(), e, o);
            return ri(2), a ? n + K(e) + i + K(o) + r : J;
          })(r, t, n, e, i, o);
        return s !== J && di(r, At(), s), Xf;
      }
      function Jf(t, n, e, i, o, r, s) {
        const a = E(),
          l = (function Ir(t, n, e, i, o, r, s, a) {
            const c = Cc(t, oi(), e, o, s);
            return ri(3), c ? n + K(e) + i + K(o) + r + K(s) + a : J;
          })(a, t, n, e, i, o, r, s);
        return l !== J && di(a, At(), l), Jf;
      }
      function _w(t, n, e) {
        !(function Sn(t, n, e, i) {
          const o = ue(),
            r = ri(2);
          o.firstUpdatePass && rw(o, null, r, i);
          const s = E();
          if (e !== J && wt(s, r, e)) {
            const a = o.data[At()];
            if (cw(a, i) && !ow(o, r)) {
              let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
              null !== l && (e = ju(l, e || "")), zf(o, a, s, e, i);
            } else
              !(function DF(t, n, e, i, o, r, s, a) {
                o === J && (o = pe);
                let l = 0,
                  c = 0,
                  d = 0 < o.length ? o[0] : null,
                  u = 0 < r.length ? r[0] : null;
                for (; null !== d || null !== u; ) {
                  const h = l < o.length ? o[l + 1] : void 0,
                    f = c < r.length ? r[c + 1] : void 0;
                  let m,
                    p = null;
                  d === u
                    ? ((l += 2), (c += 2), h !== f && ((p = u), (m = f)))
                    : null === u || (null !== d && d < u)
                    ? ((l += 2), (p = d))
                    : ((c += 2), (p = u), (m = f)),
                    null !== p && aw(t, n, e, i, p, m, s, a),
                    (d = l < o.length ? o[l] : null),
                    (u = c < r.length ? r[c] : null);
                }
              })(
                o,
                a,
                s,
                s[Q],
                s[r + 1],
                (s[r + 1] = (function CF(t, n, e) {
                  if (null == e || "" === e) return pe;
                  const i = [],
                    o = Fi(e);
                  if (Array.isArray(o))
                    for (let r = 0; r < o.length; r++) t(i, o[r], !0);
                  else if ("object" == typeof o)
                    for (const r in o) o.hasOwnProperty(r) && t(i, r, o[r]);
                  else "string" == typeof o && n(i, o);
                  return i;
                })(t, n, e)),
                i,
                r
              );
          }
        })(Qt, zn, Sr(E(), t, n, e), !0);
      }
      function Tc(t, n, e) {
        const i = E();
        return wt(i, nr(), n) && Jt(ue(), je(), i, t, n, i[Q], e, !0), Tc;
      }
      const bo = void 0;
      var qF = [
        "en",
        [["a", "p"], ["AM", "PM"], bo],
        [["AM", "PM"], bo, bo],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        bo,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        bo,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", bo, "{1} 'at' {0}", bo],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function zF(t) {
          const e = Math.floor(Math.abs(t)),
            i = t.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === e && 0 === i ? 1 : 5;
        },
      ];
      let Lr = {};
      function Pt(t) {
        const n = (function GF(t) {
          return t.toLowerCase().replace(/_/g, "-");
        })(t);
        let e = Iw(n);
        if (e) return e;
        const i = n.split("-")[0];
        if (((e = Iw(i)), e)) return e;
        if ("en" === i) return qF;
        throw new x(701, !1);
      }
      function Iw(t) {
        return (
          t in Lr ||
            (Lr[t] =
              Ie.ng &&
              Ie.ng.common &&
              Ie.ng.common.locales &&
              Ie.ng.common.locales[t]),
          Lr[t]
        );
      }
      var Re = (function (t) {
        return (
          (t[(t.LocaleId = 0)] = "LocaleId"),
          (t[(t.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
          (t[(t.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
          (t[(t.DaysFormat = 3)] = "DaysFormat"),
          (t[(t.DaysStandalone = 4)] = "DaysStandalone"),
          (t[(t.MonthsFormat = 5)] = "MonthsFormat"),
          (t[(t.MonthsStandalone = 6)] = "MonthsStandalone"),
          (t[(t.Eras = 7)] = "Eras"),
          (t[(t.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
          (t[(t.WeekendRange = 9)] = "WeekendRange"),
          (t[(t.DateFormat = 10)] = "DateFormat"),
          (t[(t.TimeFormat = 11)] = "TimeFormat"),
          (t[(t.DateTimeFormat = 12)] = "DateTimeFormat"),
          (t[(t.NumberSymbols = 13)] = "NumberSymbols"),
          (t[(t.NumberFormats = 14)] = "NumberFormats"),
          (t[(t.CurrencyCode = 15)] = "CurrencyCode"),
          (t[(t.CurrencySymbol = 16)] = "CurrencySymbol"),
          (t[(t.CurrencyName = 17)] = "CurrencyName"),
          (t[(t.Currencies = 18)] = "Currencies"),
          (t[(t.Directionality = 19)] = "Directionality"),
          (t[(t.PluralCase = 20)] = "PluralCase"),
          (t[(t.ExtraData = 21)] = "ExtraData"),
          t
        );
      })(Re || {});
      const Vr = "en-US";
      let Aw = Vr;
      function np(t, n, e, i, o) {
        if (((t = G(t)), Array.isArray(t)))
          for (let r = 0; r < t.length; r++) np(t[r], n, e, i, o);
        else {
          const r = ue(),
            s = E(),
            a = gt();
          let l = po(t) ? t : G(t.provide);
          const c = _b(t),
            d = 1048575 & a.providerIndexes,
            u = a.directiveStart,
            h = a.providerIndexes >> 20;
          if (po(t) || !t.multi) {
            const f = new Ms(c, o, y),
              p = op(l, n, o ? d : d + h, u);
            -1 === p
              ? (xh(kl(a, s), r, l),
                ip(r, t, n.length),
                n.push(l),
                a.directiveStart++,
                a.directiveEnd++,
                o && (a.providerIndexes += 1048576),
                e.push(f),
                s.push(f))
              : ((e[p] = f), (s[p] = f));
          } else {
            const f = op(l, n, d + h, u),
              p = op(l, n, d, d + h),
              v = p >= 0 && e[p];
            if ((o && !v) || (!o && !(f >= 0 && e[f]))) {
              xh(kl(a, s), r, l);
              const D = (function zN(t, n, e, i, o) {
                const r = new Ms(t, e, y);
                return (
                  (r.multi = []),
                  (r.index = n),
                  (r.componentProviders = 0),
                  t0(r, o, i && !e),
                  r
                );
              })(o ? $N : UN, e.length, o, i, c);
              !o && v && (e[p].providerFactory = D),
                ip(r, t, n.length, 0),
                n.push(l),
                a.directiveStart++,
                a.directiveEnd++,
                o && (a.providerIndexes += 1048576),
                e.push(D),
                s.push(D);
            } else ip(r, t, f > -1 ? f : p, t0(e[o ? p : f], c, !o && i));
            !o && i && v && e[p].componentProviders++;
          }
        }
      }
      function ip(t, n, e, i) {
        const o = po(n),
          r = (function FR(t) {
            return !!t.useClass;
          })(n);
        if (o || r) {
          const l = (r ? G(n.useClass) : n).prototype.ngOnDestroy;
          if (l) {
            const c = t.destroyHooks || (t.destroyHooks = []);
            if (!o && n.multi) {
              const d = c.indexOf(e);
              -1 === d ? c.push(e, [i, l]) : c[d + 1].push(i, l);
            } else c.push(e, l);
          }
        }
      }
      function t0(t, n, e) {
        return e && t.componentProviders++, t.multi.push(n) - 1;
      }
      function op(t, n, e, i) {
        for (let o = e; o < i; o++) if (n[o] === t) return o;
        return -1;
      }
      function UN(t, n, e, i) {
        return rp(this.multi, []);
      }
      function $N(t, n, e, i) {
        const o = this.multi;
        let r;
        if (this.providerFactory) {
          const s = this.providerFactory.componentProviders,
            a = ho(e, e[P], this.providerFactory.index, i);
          (r = a.slice(0, s)), rp(o, r);
          for (let l = s; l < a.length; l++) r.push(a[l]);
        } else (r = []), rp(o, r);
        return r;
      }
      function rp(t, n) {
        for (let e = 0; e < t.length; e++) n.push((0, t[e])());
        return n;
      }
      function Se(t, n = []) {
        return (e) => {
          e.providersResolver = (i, o) =>
            (function HN(t, n, e) {
              const i = ue();
              if (i.firstCreatePass) {
                const o = xn(t);
                np(e, i.data, i.blueprint, o, !0),
                  np(n, i.data, i.blueprint, o, !1);
              }
            })(i, o ? o(t) : t, n);
        };
      }
      class Co {}
      class n0 {}
      class sp extends Co {
        constructor(n, e, i) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new pC(this));
          const o = Kt(n);
          (this._bootstrapComponents = ci(o.bootstrap)),
            (this._r3Injector = Tb(
              n,
              e,
              [
                { provide: Co, useValue: this },
                { provide: mo, useValue: this.componentFactoryResolver },
                ...i,
              ],
              ot(n),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(n));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const n = this._r3Injector;
          !n.destroyed && n.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(n) {
          this.destroyCbs.push(n);
        }
      }
      class ap extends n0 {
        constructor(n) {
          super(), (this.moduleType = n);
        }
        create(n) {
          return new sp(this.moduleType, n, []);
        }
      }
      class o0 extends Co {
        constructor(n) {
          super(),
            (this.componentFactoryResolver = new pC(this)),
            (this.instance = null);
          const e = new _r(
            [
              ...n.providers,
              { provide: Co, useValue: this },
              { provide: mo, useValue: this.componentFactoryResolver },
            ],
            n.parent || rc(),
            n.debugName,
            new Set(["environment"])
          );
          (this.injector = e),
            n.runEnvironmentInitializers && e.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(n) {
          this.injector.onDestroy(n);
        }
      }
      function lp(t, n, e = null) {
        return new o0({
          providers: t,
          parent: n,
          debugName: e,
          runEnvironmentInitializers: !0,
        }).injector;
      }
      let WN = (() => {
        class t {
          constructor(e) {
            (this._injector = e), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(e) {
            if (!e.standalone) return null;
            if (!this.cachedInjectors.has(e)) {
              const i = fb(0, e.type),
                o =
                  i.length > 0
                    ? lp([i], this._injector, `Standalone[${e.type.name}]`)
                    : null;
              this.cachedInjectors.set(e, o);
            }
            return this.cachedInjectors.get(e);
          }
          ngOnDestroy() {
            try {
              for (const e of this.cachedInjectors.values())
                null !== e && e.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
          static #e = (this.ɵprov = I({
            token: t,
            providedIn: "environment",
            factory: () => new t(C(Xt)),
          }));
        }
        return t;
      })();
      function r0(t) {
        t.getStandaloneInjector = (n) =>
          n.get(WN).getOrCreateStandaloneInjector(t);
      }
      function p0(t, n, e, i, o, r) {
        return (function _0(t, n, e, i, o, r, s, a) {
          const l = n + e;
          return Cc(t, l, o, r, s)
            ? Un(t, l + 3, a ? i.call(a, o, r, s) : i(o, r, s))
            : sa(t, l + 3);
        })(E(), It(), t, n, e, i, o, r);
      }
      function sa(t, n) {
        const e = t[n];
        return e === J ? void 0 : e;
      }
      function m0(t, n, e, i, o, r) {
        const s = n + e;
        return wt(t, s, o)
          ? Un(t, s + 1, r ? i.call(r, o) : i(o))
          : sa(t, s + 1);
      }
      function g0(t, n, e, i, o, r, s) {
        const a = n + e;
        return _o(t, a, o, r)
          ? Un(t, a + 2, s ? i.call(s, o, r) : i(o, r))
          : sa(t, a + 2);
      }
      function Pc(t, n) {
        const e = ue();
        let i;
        const o = t + oe;
        e.firstCreatePass
          ? ((i = (function cL(t, n) {
              if (n)
                for (let e = n.length - 1; e >= 0; e--) {
                  const i = n[e];
                  if (t === i.name) return i;
                }
            })(n, e.pipeRegistry)),
            (e.data[o] = i),
            i.onDestroy && (e.destroyHooks ??= []).push(o, i.onDestroy))
          : (i = e.data[o]);
        const r = i.factory || (i.factory = co(i.type)),
          a = Bt(y);
        try {
          const l = Pl(!1),
            c = r();
          return (
            Pl(l),
            (function Wk(t, n, e, i) {
              e >= t.data.length &&
                ((t.data[e] = null), (t.blueprint[e] = null)),
                (n[e] = i);
            })(e, E(), o, c),
            c
          );
        } finally {
          Bt(a);
        }
      }
      function dp(t, n, e, i) {
        const o = t + oe,
          r = E(),
          s = er(r, o);
        return aa(r, o)
          ? g0(r, It(), n, s.transform, e, i, s)
          : s.transform(e, i);
      }
      function aa(t, n) {
        return t[P].data[n].pure;
      }
      function fL() {
        return this._results[Symbol.iterator]();
      }
      class up {
        static #e = Symbol.iterator;
        get changes() {
          return this._changes || (this._changes = new V());
        }
        constructor(n = !1) {
          (this._emitDistinctChangesOnly = n),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = up.prototype;
          e[Symbol.iterator] || (e[Symbol.iterator] = fL);
        }
        get(n) {
          return this._results[n];
        }
        map(n) {
          return this._results.map(n);
        }
        filter(n) {
          return this._results.filter(n);
        }
        find(n) {
          return this._results.find(n);
        }
        reduce(n, e) {
          return this._results.reduce(n, e);
        }
        forEach(n) {
          this._results.forEach(n);
        }
        some(n) {
          return this._results.some(n);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(n, e) {
          const i = this;
          i.dirty = !1;
          const o = (function hn(t) {
            return t.flat(Number.POSITIVE_INFINITY);
          })(n);
          (this._changesDetected = !(function c1(t, n, e) {
            if (t.length !== n.length) return !1;
            for (let i = 0; i < t.length; i++) {
              let o = t[i],
                r = n[i];
              if ((e && ((o = e(o)), (r = e(r))), r !== o)) return !1;
            }
            return !0;
          })(i._results, o, e)) &&
            ((i._results = o),
            (i.length = o.length),
            (i.last = o[this.length - 1]),
            (i.first = o[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      function mL(t, n, e, i = !0) {
        const o = n[P];
        if (
          ((function X1(t, n, e, i) {
            const o = pt + i,
              r = e.length;
            i > 0 && (e[o - 1][Dn] = n),
              i < r - pt
                ? ((n[Dn] = e[o]), fv(e, pt + i, n))
                : (e.push(n), (n[Dn] = null)),
              (n[Ve] = e);
            const s = n[vs];
            null !== s &&
              e !== s &&
              (function J1(t, n) {
                const e = t[Xo];
                n[Qe] !== n[Ve][Ve][Qe] && (t[fy] = !0),
                  null === e ? (t[Xo] = [n]) : e.push(n);
              })(s, n);
            const a = n[Nn];
            null !== a && a.insertView(t), (n[ee] |= 128);
          })(o, n, t, e),
          i)
        ) {
          const r = Uh(e, t),
            s = n[Q],
            a = Ql(s, t[Ln]);
          null !== a &&
            (function K1(t, n, e, i, o, r) {
              (i[Ge] = o), (i[bt] = n), Ns(t, i, e, 1, o, r);
            })(o, t[bt], s, n, a, r);
        }
      }
      let en = (() => {
        class t {
          static #e = (this.__NG_ELEMENT_ID__ = yL);
        }
        return t;
      })();
      const gL = en,
        _L = class extends gL {
          constructor(n, e, i) {
            super(),
              (this._declarationLView = n),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          get ssrId() {
            return this._declarationTContainer.tView?.ssrId || null;
          }
          createEmbeddedView(n, e) {
            return this.createEmbeddedViewImpl(n, e);
          }
          createEmbeddedViewImpl(n, e, i) {
            const o = (function pL(t, n, e, i) {
              const o = n.tView,
                a = mc(
                  t,
                  o,
                  e,
                  4096 & t[ee] ? 4096 : 16,
                  null,
                  n,
                  null,
                  null,
                  null,
                  i?.injector ?? null,
                  i?.hydrationInfo ?? null
                );
              a[vs] = t[n.index];
              const c = t[Nn];
              return (
                null !== c && (a[Nn] = c.createEmbeddedView(o)), Lf(o, a, e), a
              );
            })(this._declarationLView, this._declarationTContainer, n, {
              injector: e,
              hydrationInfo: i,
            });
            return new Ws(o);
          }
        };
      function yL() {
        return kc(gt(), E());
      }
      function kc(t, n) {
        return 4 & t.type ? new _L(n, t, Cr(t, n)) : null;
      }
      let tn = (() => {
        class t {
          static #e = (this.__NG_ELEMENT_ID__ = xL);
        }
        return t;
      })();
      function xL() {
        return S0(gt(), E());
      }
      const EL = tn,
        E0 = class extends EL {
          constructor(n, e, i) {
            super(),
              (this._lContainer = n),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return Cr(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Ot(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const n = Fl(this._hostTNode, this._hostLView);
            if (Ch(n)) {
              const e = Ts(n, this._hostLView),
                i = Ss(n);
              return new Ot(e[P].data[i + 8], e);
            }
            return new Ot(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(n) {
            const e = M0(this._lContainer);
            return (null !== e && e[n]) || null;
          }
          get length() {
            return this._lContainer.length - pt;
          }
          createEmbeddedView(n, e, i) {
            let o, r;
            "number" == typeof i
              ? (o = i)
              : null != i && ((o = i.index), (r = i.injector));
            const a = n.createEmbeddedViewImpl(e || {}, r, null);
            return this.insertImpl(a, o, false), a;
          }
          createComponent(n, e, i, o, r) {
            const s =
              n &&
              !(function As(t) {
                return "function" == typeof t;
              })(n);
            let a;
            if (s) a = e;
            else {
              const m = e || {};
              (a = m.index),
                (i = m.injector),
                (o = m.projectableNodes),
                (r = m.environmentInjector || m.ngModuleRef);
            }
            const l = s ? n : new Ys(de(n)),
              c = i || this.parentInjector;
            if (!r && null == l.ngModule) {
              const v = (s ? c : this.parentInjector).get(Xt, null);
              v && (r = v);
            }
            de(l.componentType ?? {});
            const f = l.create(c, o, null, r);
            return this.insertImpl(f.hostView, a, false), f;
          }
          insert(n, e) {
            return this.insertImpl(n, e, !1);
          }
          insertImpl(n, e, i) {
            const o = n._lView;
            if (
              (function DO(t) {
                return St(t[Ve]);
              })(o)
            ) {
              const l = this.indexOf(n);
              if (-1 !== l) this.detach(l);
              else {
                const c = o[Ve],
                  d = new E0(c, c[bt], c[Ve]);
                d.detach(d.indexOf(n));
              }
            }
            const s = this._adjustIndex(e),
              a = this._lContainer;
            return (
              mL(a, o, s, !i), n.attachToViewContainerRef(), fv(hp(a), s, n), n
            );
          }
          move(n, e) {
            return this.insert(n, e);
          }
          indexOf(n) {
            const e = M0(this._lContainer);
            return null !== e ? e.indexOf(n) : -1;
          }
          remove(n) {
            const e = this._adjustIndex(n, -1),
              i = Zl(this._lContainer, e);
            i && (Vl(hp(this._lContainer), e), Vh(i[P], i));
          }
          detach(n) {
            const e = this._adjustIndex(n, -1),
              i = Zl(this._lContainer, e);
            return i && null != Vl(hp(this._lContainer), e) ? new Ws(i) : null;
          }
          _adjustIndex(n, e = 0) {
            return n ?? this.length + e;
          }
        };
      function M0(t) {
        return t[8];
      }
      function hp(t) {
        return t[8] || (t[8] = []);
      }
      function S0(t, n) {
        let e;
        const i = n[t.index];
        return (
          St(i)
            ? (e = i)
            : ((e = nC(i, n, null, t)), (n[t.index] = e), gc(n, e)),
          T0(e, n, t, i),
          new E0(e, t, n)
        );
      }
      let T0 = function I0(t, n, e, i) {
        if (t[Ln]) return;
        let o;
        (o =
          8 & e.type
            ? Oe(i)
            : (function ML(t, n) {
                const e = t[Q],
                  i = e.createComment(""),
                  o = Ht(n, t);
                return (
                  fo(
                    e,
                    Ql(e, o),
                    i,
                    (function iR(t, n) {
                      return t.nextSibling(n);
                    })(e, o),
                    !1
                  ),
                  i
                );
              })(n, e)),
          (t[Ln] = o);
      };
      class fp {
        constructor(n) {
          (this.queryList = n), (this.matches = null);
        }
        clone() {
          return new fp(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class pp {
        constructor(n = []) {
          this.queries = n;
        }
        createEmbeddedView(n) {
          const e = n.queries;
          if (null !== e) {
            const i =
                null !== n.contentQueries ? n.contentQueries[0] : e.length,
              o = [];
            for (let r = 0; r < i; r++) {
              const s = e.getByIndex(r);
              o.push(this.queries[s.indexInDeclarationView].clone());
            }
            return new pp(o);
          }
          return null;
        }
        insertView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        detachView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        dirtyQueriesWithMatches(n) {
          for (let e = 0; e < this.queries.length; e++)
            null !== k0(n, e).matches && this.queries[e].setDirty();
        }
      }
      class A0 {
        constructor(n, e, i = null) {
          (this.predicate = n), (this.flags = e), (this.read = i);
        }
      }
      class mp {
        constructor(n = []) {
          this.queries = n;
        }
        elementStart(n, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(n, e);
        }
        elementEnd(n) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(n);
        }
        embeddedTView(n) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const o = null !== e ? e.length : 0,
              r = this.getByIndex(i).embeddedTView(n, o);
            r &&
              ((r.indexInDeclarationView = i),
              null !== e ? e.push(r) : (e = [r]));
          }
          return null !== e ? new mp(e) : null;
        }
        template(n, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(n, e);
        }
        getByIndex(n) {
          return this.queries[n];
        }
        get length() {
          return this.queries.length;
        }
        track(n) {
          this.queries.push(n);
        }
      }
      class gp {
        constructor(n, e = -1) {
          (this.metadata = n),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(n, e) {
          this.isApplyingToNode(e) && this.matchTNode(n, e);
        }
        elementEnd(n) {
          this._declarationNodeIndex === n.index &&
            (this._appliesToNextNode = !1);
        }
        template(n, e) {
          this.elementStart(n, e);
        }
        embeddedTView(n, e) {
          return this.isApplyingToNode(n)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-n.index, e),
              new gp(this.metadata))
            : null;
        }
        isApplyingToNode(n) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = n.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(n, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let o = 0; o < i.length; o++) {
              const r = i[o];
              this.matchTNodeWithReadOption(n, e, IL(e, r)),
                this.matchTNodeWithReadOption(n, e, Nl(e, n, r, !1, !1));
            }
          else
            i === en
              ? 4 & e.type && this.matchTNodeWithReadOption(n, e, -1)
              : this.matchTNodeWithReadOption(n, e, Nl(e, n, i, !1, !1));
        }
        matchTNodeWithReadOption(n, e, i) {
          if (null !== i) {
            const o = this.metadata.read;
            if (null !== o)
              if (o === Me || o === tn || (o === en && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const r = Nl(e, n, o, !1, !1);
                null !== r && this.addMatch(e.index, r);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(n, e) {
          null === this.matches
            ? (this.matches = [n, e])
            : this.matches.push(n, e);
        }
      }
      function IL(t, n) {
        const e = t.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === n) return e[i + 1];
        return null;
      }
      function OL(t, n, e, i) {
        return -1 === e
          ? (function AL(t, n) {
              return 11 & t.type ? Cr(t, n) : 4 & t.type ? kc(t, n) : null;
            })(n, t)
          : -2 === e
          ? (function RL(t, n, e) {
              return e === Me
                ? Cr(n, t)
                : e === en
                ? kc(n, t)
                : e === tn
                ? S0(n, t)
                : void 0;
            })(t, n, i)
          : ho(t, t[P], e, n);
      }
      function O0(t, n, e, i) {
        const o = n[Nn].queries[i];
        if (null === o.matches) {
          const r = t.data,
            s = e.matches,
            a = [];
          for (let l = 0; l < s.length; l += 2) {
            const c = s[l];
            a.push(c < 0 ? null : OL(n, r[c], s[l + 1], e.metadata.read));
          }
          o.matches = a;
        }
        return o.matches;
      }
      function _p(t, n, e, i) {
        const o = t.queries.getByIndex(e),
          r = o.matches;
        if (null !== r) {
          const s = O0(t, n, o, e);
          for (let a = 0; a < r.length; a += 2) {
            const l = r[a];
            if (l > 0) i.push(s[a / 2]);
            else {
              const c = r[a + 1],
                d = n[-l];
              for (let u = pt; u < d.length; u++) {
                const h = d[u];
                h[vs] === h[Ve] && _p(h[P], h, c, i);
              }
              if (null !== d[Xo]) {
                const u = d[Xo];
                for (let h = 0; h < u.length; h++) {
                  const f = u[h];
                  _p(f[P], f, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function zt(t) {
        const n = E(),
          e = ue(),
          i = Gy();
        mh(i + 1);
        const o = k0(e, i);
        if (
          t.dirty &&
          (function CO(t) {
            return 4 == (4 & t[ee]);
          })(n) ===
            (2 == (2 & o.metadata.flags))
        ) {
          if (null === o.matches) t.reset([]);
          else {
            const r = o.crossesNgTemplate ? _p(e, n, i, []) : O0(e, n, o, i);
            t.reset(r, nP), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function wo(t, n, e) {
        const i = ue();
        i.firstCreatePass &&
          (P0(i, new A0(t, n, e), -1),
          2 == (2 & n) && (i.staticViewQueries = !0)),
          R0(i, E(), n);
      }
      function Vi(t, n, e, i) {
        const o = ue();
        if (o.firstCreatePass) {
          const r = gt();
          P0(o, new A0(n, e, i), r.index),
            (function kL(t, n) {
              const e = t.contentQueries || (t.contentQueries = []);
              n !== (e.length ? e[e.length - 1] : -1) &&
                e.push(t.queries.length - 1, n);
            })(o, t),
            2 == (2 & e) && (o.staticContentQueries = !0);
        }
        R0(o, E(), e);
      }
      function qt() {
        return (function PL(t, n) {
          return t[Nn].queries[n].queryList;
        })(E(), Gy());
      }
      function R0(t, n, e) {
        const i = new up(4 == (4 & e));
        (function kP(t, n, e, i) {
          const o = oC(n);
          o.push(e), t.firstCreatePass && rC(t).push(i, o.length - 1);
        })(t, n, i, i.destroy),
          null === n[Nn] && (n[Nn] = new pp()),
          n[Nn].queries.push(new fp(i));
      }
      function P0(t, n, e) {
        null === t.queries && (t.queries = new mp()),
          t.queries.track(new gp(n, e));
      }
      function k0(t, n) {
        return t.queries.getByIndex(n);
      }
      const Dp = new S("Application Initializer");
      let xp = (() => {
          class t {
            constructor() {
              (this.initialized = !1),
                (this.done = !1),
                (this.donePromise = new Promise((e, i) => {
                  (this.resolve = e), (this.reject = i);
                })),
                (this.appInits = R(Dp, { optional: !0 }) ?? []);
            }
            runInitializers() {
              if (this.initialized) return;
              const e = [];
              for (const o of this.appInits) {
                const r = o();
                if (Js(r)) e.push(r);
                else if (VC(r)) {
                  const s = new Promise((a, l) => {
                    r.subscribe({ complete: a, error: l });
                  });
                  e.push(s);
                }
              }
              const i = () => {
                (this.done = !0), this.resolve();
              };
              Promise.all(e)
                .then(() => {
                  i();
                })
                .catch((o) => {
                  this.reject(o);
                }),
                0 === e.length && i(),
                (this.initialized = !0);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        Q0 = (() => {
          class t {
            log(e) {
              console.log(e);
            }
            warn(e) {
              console.warn(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "platform",
            }));
          }
          return t;
        })();
      const Gn = new S("LocaleId", {
        providedIn: "root",
        factory: () =>
          R(Gn, ie.Optional | ie.SkipSelf) ||
          (function n2() {
            return (typeof $localize < "u" && $localize.locale) || Vr;
          })(),
      });
      let Lc = (() => {
        class t {
          constructor() {
            (this.taskId = 0),
              (this.pendingTasks = new Set()),
              (this.hasPendingTasks = new Wt(!1));
          }
          add() {
            this.hasPendingTasks.next(!0);
            const e = this.taskId++;
            return this.pendingTasks.add(e), e;
          }
          remove(e) {
            this.pendingTasks.delete(e),
              0 === this.pendingTasks.size && this.hasPendingTasks.next(!1);
          }
          ngOnDestroy() {
            this.pendingTasks.clear(), this.hasPendingTasks.next(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      class s2 {
        constructor(n, e) {
          (this.ngModuleFactory = n), (this.componentFactories = e);
        }
      }
      let X0 = (() => {
        class t {
          compileModuleSync(e) {
            return new ap(e);
          }
          compileModuleAsync(e) {
            return Promise.resolve(this.compileModuleSync(e));
          }
          compileModuleAndAllComponentsSync(e) {
            const i = this.compileModuleSync(e),
              r = ci(Kt(e).declarations).reduce((s, a) => {
                const l = de(a);
                return l && s.push(new Ys(l)), s;
              }, []);
            return new s2(i, r);
          }
          compileModuleAndAllComponentsAsync(e) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(e));
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const nD = new S(""),
        Bc = new S("");
      let Ip,
        Sp = (() => {
          class t {
            constructor(e, i, o) {
              (this._ngZone = e),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Ip ||
                  ((function T2(t) {
                    Ip = t;
                  })(o),
                  o.addToWindow(i)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      X.assertNotInAngularZone(),
                        queueMicrotask(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                queueMicrotask(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, o) {
              let r = -1;
              i &&
                i > 0 &&
                (r = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (s) => s.timeoutId !== r
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: r, updateCb: o });
            }
            whenStable(e, i, o) {
              if (o && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, o), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, i, o) {
              return [];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(X), C(Tp), C(Bc));
            });
            static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        Tp = (() => {
          class t {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return Ip?.findTestabilityInTree(this, e, i) ?? null;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "platform",
            }));
          }
          return t;
        })(),
        Bi = null;
      const iD = new S("AllowMultipleToken"),
        Ap = new S("PlatformDestroyListeners"),
        Op = new S("appBootstrapListener");
      class rD {
        constructor(n, e) {
          (this.name = n), (this.token = e);
        }
      }
      function aD(t, n, e = []) {
        const i = `Platform: ${n}`,
          o = new S(i);
        return (r = []) => {
          let s = Rp();
          if (!s || s.injector.get(iD, !1)) {
            const a = [...e, ...r, { provide: o, useValue: !0 }];
            t
              ? t(a)
              : (function O2(t) {
                  if (Bi && !Bi.get(iD, !1)) throw new x(400, !1);
                  (function oD() {
                    !(function lO(t) {
                      Ey = t;
                    })(() => {
                      throw new x(600, !1);
                    });
                  })(),
                    (Bi = t);
                  const n = t.get(cD);
                  (function sD(t) {
                    t.get(yb, null)?.forEach((e) => e());
                  })(t);
                })(
                  (function lD(t = [], n) {
                    return He.create({
                      name: n,
                      providers: [
                        { provide: tf, useValue: "platform" },
                        { provide: Ap, useValue: new Set([() => (Bi = null)]) },
                        ...t,
                      ],
                    });
                  })(a, i)
                );
          }
          return (function P2(t) {
            const n = Rp();
            if (!n) throw new x(401, !1);
            return n;
          })();
        };
      }
      function Rp() {
        return Bi?.get(cD) ?? null;
      }
      let cD = (() => {
        class t {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const o = (function k2(t = "zone.js", n) {
              return "noop" === t ? new _P() : "zone.js" === t ? new X(n) : t;
            })(
              i?.ngZone,
              (function dD(t) {
                return {
                  enableLongStackTrace: !1,
                  shouldCoalesceEventChangeDetection: t?.eventCoalescing ?? !1,
                  shouldCoalesceRunChangeDetection: t?.runCoalescing ?? !1,
                };
              })({
                eventCoalescing: i?.ngZoneEventCoalescing,
                runCoalescing: i?.ngZoneRunCoalescing,
              })
            );
            return o.run(() => {
              const r = (function GN(t, n, e) {
                  return new sp(t, n, e);
                })(
                  e.moduleType,
                  this.injector,
                  (function mD(t) {
                    return [
                      { provide: X, useFactory: t },
                      {
                        provide: js,
                        multi: !0,
                        useFactory: () => {
                          const n = R(N2, { optional: !0 });
                          return () => n.initialize();
                        },
                      },
                      { provide: pD, useFactory: F2 },
                      { provide: Pb, useFactory: kb },
                    ];
                  })(() => o)
                ),
                s = r.injector.get(li, null);
              return (
                o.runOutsideAngular(() => {
                  const a = o.onError.subscribe({
                    next: (l) => {
                      s.handleError(l);
                    },
                  });
                  r.onDestroy(() => {
                    jc(this._modules, r), a.unsubscribe();
                  });
                }),
                (function uD(t, n, e) {
                  try {
                    const i = e();
                    return Js(i)
                      ? i.catch((o) => {
                          throw (
                            (n.runOutsideAngular(() => t.handleError(o)), o)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (n.runOutsideAngular(() => t.handleError(i)), i);
                  }
                })(s, o, () => {
                  const a = r.injector.get(xp);
                  return (
                    a.runInitializers(),
                    a.donePromise.then(
                      () => (
                        (function Ow(t) {
                          cn(t, "Expected localeId to be defined"),
                            "string" == typeof t &&
                              (Aw = t.toLowerCase().replace(/_/g, "-"));
                        })(r.injector.get(Gn, Vr) || Vr),
                        this._moduleDoBootstrap(r),
                        r
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const o = hD({}, i);
            return (function I2(t, n, e) {
              const i = new ap(e);
              return Promise.resolve(i);
            })(0, 0, e).then((r) => this.bootstrapModuleFactory(r, o));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(ui);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((o) => i.bootstrap(o));
            else {
              if (!e.instance.ngDoBootstrap) throw new x(-403, !1);
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new x(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const e = this._injector.get(Ap, null);
            e && (e.forEach((i) => i()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(He));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "platform",
          }));
        }
        return t;
      })();
      function hD(t, n) {
        return Array.isArray(n) ? n.reduce(hD, t) : { ...t, ...n };
      }
      let ui = (() => {
        class t {
          constructor() {
            (this._bootstrapListeners = []),
              (this._runningTick = !1),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this._views = []),
              (this.internalErrorHandler = R(pD)),
              (this.zoneIsStable = R(Pb)),
              (this.componentTypes = []),
              (this.components = []),
              (this.isStable = R(Lc).hasPendingTasks.pipe(
                Vt((e) => (e ? H(!1) : this.zoneIsStable)),
                Bu(),
                $_()
              )),
              (this._injector = R(Xt));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(e, i) {
            const o = e instanceof wb;
            if (!this._injector.get(xp).done)
              throw (
                (!o &&
                  (function Wo(t) {
                    const n = de(t) || ft(t) || Mt(t);
                    return null !== n && n.standalone;
                  })(e),
                new x(405, !1))
              );
            let s;
            (s = o ? e : this._injector.get(mo).resolveComponentFactory(e)),
              this.componentTypes.push(s.componentType);
            const a = (function A2(t) {
                return t.isBoundToModule;
              })(s)
                ? void 0
                : this._injector.get(Co),
              c = s.create(He.NULL, [], i || s.selector, a),
              d = c.location.nativeElement,
              u = c.injector.get(nD, null);
            return (
              u?.registerApplication(d),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  jc(this.components, c),
                  u?.unregisterApplication(d);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new x(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this.internalErrorHandler(e);
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            jc(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView), this.tick(), this.components.push(e);
            const i = this._injector.get(Op, []);
            i.push(...this._bootstrapListeners), i.forEach((o) => o(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy());
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => jc(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new x(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function jc(t, n) {
        const e = t.indexOf(n);
        e > -1 && t.splice(e, 1);
      }
      const pD = new S("", {
        providedIn: "root",
        factory: () => R(li).handleError.bind(void 0),
      });
      function F2() {
        const t = R(X),
          n = R(li);
        return (e) => t.runOutsideAngular(() => n.handleError(e));
      }
      let N2 = (() => {
        class t {
          constructor() {
            (this.zone = R(X)), (this.applicationRef = R(ui));
          }
          initialize() {
            this._onMicrotaskEmptySubscription ||
              (this._onMicrotaskEmptySubscription =
                this.zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this.zone.run(() => {
                      this.applicationRef.tick();
                    });
                  },
                }));
          }
          ngOnDestroy() {
            this._onMicrotaskEmptySubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      let Hr = (() => {
        class t {
          static #e = (this.__NG_ELEMENT_ID__ = V2);
        }
        return t;
      })();
      function V2(t) {
        return (function B2(t, n, e) {
          if (lo(t) && !e) {
            const i = Zt(t.index, n);
            return new Ws(i, i);
          }
          return 47 & t.type ? new Ws(n[Qe], n) : null;
        })(gt(), E(), 16 == (16 & t));
      }
      class vD {
        constructor() {}
        supports(n) {
          return bc(n);
        }
        create(n) {
          return new q2(n);
        }
      }
      const z2 = (t, n) => n;
      class q2 {
        constructor(n) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = n || z2);
        }
        forEachItem(n) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) n(e);
        }
        forEachOperation(n) {
          let e = this._itHead,
            i = this._removalsHead,
            o = 0,
            r = null;
          for (; e || i; ) {
            const s = !i || (e && e.currentIndex < CD(i, o, r)) ? e : i,
              a = CD(s, o, r),
              l = s.currentIndex;
            if (s === i) o--, (i = i._nextRemoved);
            else if (((e = e._next), null == s.previousIndex)) o++;
            else {
              r || (r = []);
              const c = a - o,
                d = l - o;
              if (c != d) {
                for (let h = 0; h < c; h++) {
                  const f = h < r.length ? r[h] : (r[h] = 0),
                    p = f + h;
                  d <= p && p < c && (r[h] = f + 1);
                }
                r[s.previousIndex] = d - c;
              }
            }
            a !== l && n(s, a, l);
          }
        }
        forEachPreviousItem(n) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) n(e);
        }
        forEachAddedItem(n) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e);
        }
        forEachMovedItem(n) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) n(e);
        }
        forEachRemovedItem(n) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e);
        }
        forEachIdentityChange(n) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            n(e);
        }
        diff(n) {
          if ((null == n && (n = []), !bc(n))) throw new x(900, !1);
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let o,
            r,
            s,
            e = this._itHead,
            i = !1;
          if (Array.isArray(n)) {
            this.length = n.length;
            for (let a = 0; a < this.length; a++)
              (r = n[a]),
                (s = this._trackByFn(a, r)),
                null !== e && Object.is(e.trackById, s)
                  ? (i && (e = this._verifyReinsertion(e, r, s, a)),
                    Object.is(e.item, r) || this._addIdentityChange(e, r))
                  : ((e = this._mismatch(e, r, s, a)), (i = !0)),
                (e = e._next);
          } else
            (o = 0),
              (function Mk(t, n) {
                if (Array.isArray(t))
                  for (let e = 0; e < t.length; e++) n(t[e]);
                else {
                  const e = t[Symbol.iterator]();
                  let i;
                  for (; !(i = e.next()).done; ) n(i.value);
                }
              })(n, (a) => {
                (s = this._trackByFn(o, a)),
                  null !== e && Object.is(e.trackById, s)
                    ? (i && (e = this._verifyReinsertion(e, a, s, o)),
                      Object.is(e.item, a) || this._addIdentityChange(e, a))
                    : ((e = this._mismatch(e, a, s, o)), (i = !0)),
                  (e = e._next),
                  o++;
              }),
              (this.length = o);
          return this._truncate(e), (this.collection = n), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              n = this._previousItHead = this._itHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._additionsHead; null !== n; n = n._nextAdded)
              n.previousIndex = n.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                n = this._movesHead;
              null !== n;
              n = n._nextMoved
            )
              n.previousIndex = n.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(n, e, i, o) {
          let r;
          return (
            null === n ? (r = this._itTail) : ((r = n._prev), this._remove(n)),
            null !==
            (n =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(n.item, e) || this._addIdentityChange(n, e),
                this._reinsertAfter(n, r, o))
              : null !==
                (n =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, o))
              ? (Object.is(n.item, e) || this._addIdentityChange(n, e),
                this._moveAfter(n, r, o))
              : (n = this._addAfter(new G2(e, i), r, o)),
            n
          );
        }
        _verifyReinsertion(n, e, i, o) {
          let r =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== r
              ? (n = this._reinsertAfter(r, n._prev, o))
              : n.currentIndex != o &&
                ((n.currentIndex = o), this._addToMoves(n, o)),
            n
          );
        }
        _truncate(n) {
          for (; null !== n; ) {
            const e = n._next;
            this._addToRemovals(this._unlink(n)), (n = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(n, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(n);
          const o = n._prevRemoved,
            r = n._nextRemoved;
          return (
            null === o ? (this._removalsHead = r) : (o._nextRemoved = r),
            null === r ? (this._removalsTail = o) : (r._prevRemoved = o),
            this._insertAfter(n, e, i),
            this._addToMoves(n, i),
            n
          );
        }
        _moveAfter(n, e, i) {
          return (
            this._unlink(n),
            this._insertAfter(n, e, i),
            this._addToMoves(n, i),
            n
          );
        }
        _addAfter(n, e, i) {
          return (
            this._insertAfter(n, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = n)
                : (this._additionsTail._nextAdded = n)),
            n
          );
        }
        _insertAfter(n, e, i) {
          const o = null === e ? this._itHead : e._next;
          return (
            (n._next = o),
            (n._prev = e),
            null === o ? (this._itTail = n) : (o._prev = n),
            null === e ? (this._itHead = n) : (e._next = n),
            null === this._linkedRecords && (this._linkedRecords = new bD()),
            this._linkedRecords.put(n),
            (n.currentIndex = i),
            n
          );
        }
        _remove(n) {
          return this._addToRemovals(this._unlink(n));
        }
        _unlink(n) {
          null !== this._linkedRecords && this._linkedRecords.remove(n);
          const e = n._prev,
            i = n._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            n
          );
        }
        _addToMoves(n, e) {
          return (
            n.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = n)
                  : (this._movesTail._nextMoved = n)),
            n
          );
        }
        _addToRemovals(n) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new bD()),
            this._unlinkedRecords.put(n),
            (n.currentIndex = null),
            (n._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = n),
                (n._prevRemoved = null))
              : ((n._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = n)),
            n
          );
        }
        _addIdentityChange(n, e) {
          return (
            (n.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = n)
                : (this._identityChangesTail._nextIdentityChange = n)),
            n
          );
        }
      }
      class G2 {
        constructor(n, e) {
          (this.item = n),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class W2 {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(n) {
          null === this._head
            ? ((this._head = this._tail = n),
              (n._nextDup = null),
              (n._prevDup = null))
            : ((this._tail._nextDup = n),
              (n._prevDup = this._tail),
              (n._nextDup = null),
              (this._tail = n));
        }
        get(n, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, n)
            )
              return i;
          return null;
        }
        remove(n) {
          const e = n._prevDup,
            i = n._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class bD {
        constructor() {
          this.map = new Map();
        }
        put(n) {
          const e = n.trackById;
          let i = this.map.get(e);
          i || ((i = new W2()), this.map.set(e, i)), i.add(n);
        }
        get(n, e) {
          const o = this.map.get(n);
          return o ? o.get(n, e) : null;
        }
        remove(n) {
          const e = n.trackById;
          return this.map.get(e).remove(n) && this.map.delete(e), n;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function CD(t, n, e) {
        const i = t.previousIndex;
        if (null === i) return i;
        let o = 0;
        return e && i < e.length && (o = e[i]), i + n + o;
      }
      class wD {
        constructor() {}
        supports(n) {
          return n instanceof Map || Vf(n);
        }
        create() {
          return new Y2();
        }
      }
      class Y2 {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(n) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) n(e);
        }
        forEachPreviousItem(n) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) n(e);
        }
        forEachChangedItem(n) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) n(e);
        }
        forEachAddedItem(n) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e);
        }
        forEachRemovedItem(n) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e);
        }
        diff(n) {
          if (n) {
            if (!(n instanceof Map || Vf(n))) throw new x(900, !1);
          } else n = new Map();
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(n, (i, o) => {
              if (e && e.key === o)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const r = this._getOrCreateRecordForKey(o, i);
                e = this._insertBeforeOrAppend(e, r);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(n, e) {
          if (n) {
            const i = n._prev;
            return (
              (e._next = n),
              (e._prev = i),
              (n._prev = e),
              i && (i._next = e),
              n === this._mapHead && (this._mapHead = e),
              (this._appendAfter = n),
              n
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(n, e) {
          if (this._records.has(n)) {
            const o = this._records.get(n);
            this._maybeAddToChanges(o, e);
            const r = o._prev,
              s = o._next;
            return (
              r && (r._next = s),
              s && (s._prev = r),
              (o._next = null),
              (o._prev = null),
              o
            );
          }
          const i = new K2(n);
          return (
            this._records.set(n, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              this._previousMapHead = this._mapHead, n = this._previousMapHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._changesHead; null !== n; n = n._nextChanged)
              n.previousValue = n.currentValue;
            for (n = this._additionsHead; null != n; n = n._nextAdded)
              n.previousValue = n.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(n, e) {
          Object.is(e, n.currentValue) ||
            ((n.previousValue = n.currentValue),
            (n.currentValue = e),
            this._addToChanges(n));
        }
        _addToAdditions(n) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = n)
            : ((this._additionsTail._nextAdded = n), (this._additionsTail = n));
        }
        _addToChanges(n) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = n)
            : ((this._changesTail._nextChanged = n), (this._changesTail = n));
        }
        _forEach(n, e) {
          n instanceof Map
            ? n.forEach(e)
            : Object.keys(n).forEach((i) => e(n[i], i));
        }
      }
      class K2 {
        constructor(n) {
          (this.key = n),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function DD() {
        return new $c([new vD()]);
      }
      let $c = (() => {
        class t {
          static #e = (this.ɵprov = I({
            token: t,
            providedIn: "root",
            factory: DD,
          }));
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const o = i.factories.slice();
              e = e.concat(o);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (i) => t.create(e, i || DD()),
              deps: [[t, new Hl(), new jl()]],
            };
          }
          find(e) {
            const i = this.factories.find((o) => o.supports(e));
            if (null != i) return i;
            throw new x(901, !1);
          }
        }
        return t;
      })();
      function xD() {
        return new da([new wD()]);
      }
      let da = (() => {
        class t {
          static #e = (this.ɵprov = I({
            token: t,
            providedIn: "root",
            factory: xD,
          }));
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const o = i.factories.slice();
              e = e.concat(o);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (i) => t.create(e, i || xD()),
              deps: [[t, new Hl(), new jl()]],
            };
          }
          find(e) {
            const i = this.factories.find((o) => o.supports(e));
            if (i) return i;
            throw new x(901, !1);
          }
        }
        return t;
      })();
      const X2 = aD(null, "core", []);
      let J2 = (() => {
        class t {
          constructor(e) {}
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(ui));
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({}));
        }
        return t;
      })();
      function Ur(t) {
        return "boolean" == typeof t ? t : null != t && "false" !== t;
      }
      let Vp = null;
      function ji() {
        return Vp;
      }
      class fV {}
      const re = new S("DocumentToken");
      let Bp = (() => {
        class t {
          historyGo(e) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: function () {
              return R(mV);
            },
            providedIn: "platform",
          }));
        }
        return t;
      })();
      const pV = new S("Location Initialized");
      let mV = (() => {
        class t extends Bp {
          constructor() {
            super(),
              (this._doc = R(re)),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return ji().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = ji().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", e, !1),
              () => i.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const i = ji().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", e, !1),
              () => i.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(e) {
            this._location.pathname = e;
          }
          pushState(e, i, o) {
            this._history.pushState(e, i, o);
          }
          replaceState(e, i, o) {
            this._history.replaceState(e, i, o);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: function () {
              return new t();
            },
            providedIn: "platform",
          }));
        }
        return t;
      })();
      function jp(t, n) {
        if (0 == t.length) return n;
        if (0 == n.length) return t;
        let e = 0;
        return (
          t.endsWith("/") && e++,
          n.startsWith("/") && e++,
          2 == e ? t + n.substring(1) : 1 == e ? t + n : t + "/" + n
        );
      }
      function PD(t) {
        const n = t.match(/#|\?|$/),
          e = (n && n.index) || t.length;
        return t.slice(0, e - ("/" === t[e - 1] ? 1 : 0)) + t.slice(e);
      }
      function hi(t) {
        return t && "?" !== t[0] ? "?" + t : t;
      }
      let xo = (() => {
        class t {
          historyGo(e) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: function () {
              return R(FD);
            },
            providedIn: "root",
          }));
        }
        return t;
      })();
      const kD = new S("appBaseHref");
      let FD = (() => {
          class t extends xo {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                (this._baseHref =
                  i ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  R(re).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return jp(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  hi(this._platformLocation.search),
                o = this._platformLocation.hash;
              return o && e ? `${i}${o}` : i;
            }
            pushState(e, i, o, r) {
              const s = this.prepareExternalUrl(o + hi(r));
              this._platformLocation.pushState(e, i, s);
            }
            replaceState(e, i, o, r) {
              const s = this.prepareExternalUrl(o + hi(r));
              this._platformLocation.replaceState(e, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(Bp), C(kD, 8));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        gV = (() => {
          class t extends xo {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = jp(this._baseHref, e);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(e, i, o, r) {
              let s = this.prepareExternalUrl(o + hi(r));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, s);
            }
            replaceState(e, i, o, r) {
              let s = this.prepareExternalUrl(o + hi(r));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(Bp), C(kD, 8));
            });
            static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        ua = (() => {
          class t {
            constructor(e) {
              (this._subject = new V()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const i = this._locationStrategy.getBaseHref();
              (this._basePath = (function vV(t) {
                if (new RegExp("^(https?:)?//").test(t)) {
                  const [, e] = t.split(/\/\/[^\/]+/);
                  return e;
                }
                return t;
              })(PD(ND(i)))),
                this._locationStrategy.onPopState((o) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: o.state,
                    type: o.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + hi(i));
            }
            normalize(e) {
              return t.stripTrailingSlash(
                (function yV(t, n) {
                  if (!t || !n.startsWith(t)) return n;
                  const e = n.substring(t.length);
                  return "" === e || ["/", ";", "?", "#"].includes(e[0])
                    ? e
                    : n;
                })(this._basePath, ND(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", o = null) {
              this._locationStrategy.pushState(o, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + hi(i)),
                  o
                );
            }
            replaceState(e, i = "", o = null) {
              this._locationStrategy.replaceState(o, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + hi(i)),
                  o
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((o) => o(e, i));
            }
            subscribe(e, i, o) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: o,
              });
            }
            static #e = (this.normalizeQueryParams = hi);
            static #t = (this.joinWithSlash = jp);
            static #n = (this.stripTrailingSlash = PD);
            static #i = (this.ɵfac = function (i) {
              return new (i || t)(C(xo));
            });
            static #o = (this.ɵprov = I({
              token: t,
              factory: function () {
                return (function _V() {
                  return new ua(C(xo));
                })();
              },
              providedIn: "root",
            }));
          }
          return t;
        })();
      function ND(t) {
        return t.replace(/\/index.html$/, "");
      }
      var Ft = (function (t) {
          return (
            (t[(t.Format = 0)] = "Format"),
            (t[(t.Standalone = 1)] = "Standalone"),
            t
          );
        })(Ft || {}),
        Te = (function (t) {
          return (
            (t[(t.Narrow = 0)] = "Narrow"),
            (t[(t.Abbreviated = 1)] = "Abbreviated"),
            (t[(t.Wide = 2)] = "Wide"),
            (t[(t.Short = 3)] = "Short"),
            t
          );
        })(Te || {}),
        nn = (function (t) {
          return (
            (t[(t.Short = 0)] = "Short"),
            (t[(t.Medium = 1)] = "Medium"),
            (t[(t.Long = 2)] = "Long"),
            (t[(t.Full = 3)] = "Full"),
            t
          );
        })(nn || {}),
        Xe = (function (t) {
          return (
            (t[(t.Decimal = 0)] = "Decimal"),
            (t[(t.Group = 1)] = "Group"),
            (t[(t.List = 2)] = "List"),
            (t[(t.PercentSign = 3)] = "PercentSign"),
            (t[(t.PlusSign = 4)] = "PlusSign"),
            (t[(t.MinusSign = 5)] = "MinusSign"),
            (t[(t.Exponential = 6)] = "Exponential"),
            (t[(t.SuperscriptingExponent = 7)] = "SuperscriptingExponent"),
            (t[(t.PerMille = 8)] = "PerMille"),
            (t[(t.Infinity = 9)] = "Infinity"),
            (t[(t.NaN = 10)] = "NaN"),
            (t[(t.TimeSeparator = 11)] = "TimeSeparator"),
            (t[(t.CurrencyDecimal = 12)] = "CurrencyDecimal"),
            (t[(t.CurrencyGroup = 13)] = "CurrencyGroup"),
            t
          );
        })(Xe || {});
      function Gc(t, n) {
        return gn(Pt(t)[Re.DateFormat], n);
      }
      function Wc(t, n) {
        return gn(Pt(t)[Re.TimeFormat], n);
      }
      function Yc(t, n) {
        return gn(Pt(t)[Re.DateTimeFormat], n);
      }
      function mn(t, n) {
        const e = Pt(t),
          i = e[Re.NumberSymbols][n];
        if (typeof i > "u") {
          if (n === Xe.CurrencyDecimal) return e[Re.NumberSymbols][Xe.Decimal];
          if (n === Xe.CurrencyGroup) return e[Re.NumberSymbols][Xe.Group];
        }
        return i;
      }
      function VD(t) {
        if (!t[Re.ExtraData])
          throw new Error(
            `Missing extra locale data for the locale "${
              t[Re.LocaleId]
            }". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`
          );
      }
      function gn(t, n) {
        for (let e = n; e > -1; e--) if (typeof t[e] < "u") return t[e];
        throw new Error("Locale data API: locale data undefined");
      }
      function Up(t) {
        const [n, e] = t.split(":");
        return { hours: +n, minutes: +e };
      }
      const PV =
          /^(\d{4,})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
        ha = {},
        kV =
          /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
      var fi = (function (t) {
          return (
            (t[(t.Short = 0)] = "Short"),
            (t[(t.ShortGMT = 1)] = "ShortGMT"),
            (t[(t.Long = 2)] = "Long"),
            (t[(t.Extended = 3)] = "Extended"),
            t
          );
        })(fi || {}),
        _e = (function (t) {
          return (
            (t[(t.FullYear = 0)] = "FullYear"),
            (t[(t.Month = 1)] = "Month"),
            (t[(t.Date = 2)] = "Date"),
            (t[(t.Hours = 3)] = "Hours"),
            (t[(t.Minutes = 4)] = "Minutes"),
            (t[(t.Seconds = 5)] = "Seconds"),
            (t[(t.FractionalSeconds = 6)] = "FractionalSeconds"),
            (t[(t.Day = 7)] = "Day"),
            t
          );
        })(_e || {}),
        ye = (function (t) {
          return (
            (t[(t.DayPeriods = 0)] = "DayPeriods"),
            (t[(t.Days = 1)] = "Days"),
            (t[(t.Months = 2)] = "Months"),
            (t[(t.Eras = 3)] = "Eras"),
            t
          );
        })(ye || {});
      function FV(t, n, e, i) {
        let o = (function zV(t) {
          if (HD(t)) return t;
          if ("number" == typeof t && !isNaN(t)) return new Date(t);
          if ("string" == typeof t) {
            if (((t = t.trim()), /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t))) {
              const [o, r = 1, s = 1] = t.split("-").map((a) => +a);
              return Kc(o, r - 1, s);
            }
            const e = parseFloat(t);
            if (!isNaN(t - e)) return new Date(e);
            let i;
            if ((i = t.match(PV)))
              return (function qV(t) {
                const n = new Date(0);
                let e = 0,
                  i = 0;
                const o = t[8] ? n.setUTCFullYear : n.setFullYear,
                  r = t[8] ? n.setUTCHours : n.setHours;
                t[9] &&
                  ((e = Number(t[9] + t[10])), (i = Number(t[9] + t[11]))),
                  o.call(n, Number(t[1]), Number(t[2]) - 1, Number(t[3]));
                const s = Number(t[4] || 0) - e,
                  a = Number(t[5] || 0) - i,
                  l = Number(t[6] || 0),
                  c = Math.floor(1e3 * parseFloat("0." + (t[7] || 0)));
                return r.call(n, s, a, l, c), n;
              })(i);
          }
          const n = new Date(t);
          if (!HD(n)) throw new Error(`Unable to convert "${t}" into a date`);
          return n;
        })(t);
        n = pi(e, n) || n;
        let a,
          s = [];
        for (; n; ) {
          if (((a = kV.exec(n)), !a)) {
            s.push(n);
            break;
          }
          {
            s = s.concat(a.slice(1));
            const d = s.pop();
            if (!d) break;
            n = d;
          }
        }
        let l = o.getTimezoneOffset();
        i &&
          ((l = jD(i, l)),
          (o = (function $V(t, n, e) {
            const i = e ? -1 : 1,
              o = t.getTimezoneOffset();
            return (function UV(t, n) {
              return (
                (t = new Date(t.getTime())).setMinutes(t.getMinutes() + n), t
              );
            })(t, i * (jD(n, o) - o));
          })(o, i, !0)));
        let c = "";
        return (
          s.forEach((d) => {
            const u = (function HV(t) {
              if (zp[t]) return zp[t];
              let n;
              switch (t) {
                case "G":
                case "GG":
                case "GGG":
                  n = Pe(ye.Eras, Te.Abbreviated);
                  break;
                case "GGGG":
                  n = Pe(ye.Eras, Te.Wide);
                  break;
                case "GGGGG":
                  n = Pe(ye.Eras, Te.Narrow);
                  break;
                case "y":
                  n = Je(_e.FullYear, 1, 0, !1, !0);
                  break;
                case "yy":
                  n = Je(_e.FullYear, 2, 0, !0, !0);
                  break;
                case "yyy":
                  n = Je(_e.FullYear, 3, 0, !1, !0);
                  break;
                case "yyyy":
                  n = Je(_e.FullYear, 4, 0, !1, !0);
                  break;
                case "Y":
                  n = Jc(1);
                  break;
                case "YY":
                  n = Jc(2, !0);
                  break;
                case "YYY":
                  n = Jc(3);
                  break;
                case "YYYY":
                  n = Jc(4);
                  break;
                case "M":
                case "L":
                  n = Je(_e.Month, 1, 1);
                  break;
                case "MM":
                case "LL":
                  n = Je(_e.Month, 2, 1);
                  break;
                case "MMM":
                  n = Pe(ye.Months, Te.Abbreviated);
                  break;
                case "MMMM":
                  n = Pe(ye.Months, Te.Wide);
                  break;
                case "MMMMM":
                  n = Pe(ye.Months, Te.Narrow);
                  break;
                case "LLL":
                  n = Pe(ye.Months, Te.Abbreviated, Ft.Standalone);
                  break;
                case "LLLL":
                  n = Pe(ye.Months, Te.Wide, Ft.Standalone);
                  break;
                case "LLLLL":
                  n = Pe(ye.Months, Te.Narrow, Ft.Standalone);
                  break;
                case "w":
                  n = $p(1);
                  break;
                case "ww":
                  n = $p(2);
                  break;
                case "W":
                  n = $p(1, !0);
                  break;
                case "d":
                  n = Je(_e.Date, 1);
                  break;
                case "dd":
                  n = Je(_e.Date, 2);
                  break;
                case "c":
                case "cc":
                  n = Je(_e.Day, 1);
                  break;
                case "ccc":
                  n = Pe(ye.Days, Te.Abbreviated, Ft.Standalone);
                  break;
                case "cccc":
                  n = Pe(ye.Days, Te.Wide, Ft.Standalone);
                  break;
                case "ccccc":
                  n = Pe(ye.Days, Te.Narrow, Ft.Standalone);
                  break;
                case "cccccc":
                  n = Pe(ye.Days, Te.Short, Ft.Standalone);
                  break;
                case "E":
                case "EE":
                case "EEE":
                  n = Pe(ye.Days, Te.Abbreviated);
                  break;
                case "EEEE":
                  n = Pe(ye.Days, Te.Wide);
                  break;
                case "EEEEE":
                  n = Pe(ye.Days, Te.Narrow);
                  break;
                case "EEEEEE":
                  n = Pe(ye.Days, Te.Short);
                  break;
                case "a":
                case "aa":
                case "aaa":
                  n = Pe(ye.DayPeriods, Te.Abbreviated);
                  break;
                case "aaaa":
                  n = Pe(ye.DayPeriods, Te.Wide);
                  break;
                case "aaaaa":
                  n = Pe(ye.DayPeriods, Te.Narrow);
                  break;
                case "b":
                case "bb":
                case "bbb":
                  n = Pe(ye.DayPeriods, Te.Abbreviated, Ft.Standalone, !0);
                  break;
                case "bbbb":
                  n = Pe(ye.DayPeriods, Te.Wide, Ft.Standalone, !0);
                  break;
                case "bbbbb":
                  n = Pe(ye.DayPeriods, Te.Narrow, Ft.Standalone, !0);
                  break;
                case "B":
                case "BB":
                case "BBB":
                  n = Pe(ye.DayPeriods, Te.Abbreviated, Ft.Format, !0);
                  break;
                case "BBBB":
                  n = Pe(ye.DayPeriods, Te.Wide, Ft.Format, !0);
                  break;
                case "BBBBB":
                  n = Pe(ye.DayPeriods, Te.Narrow, Ft.Format, !0);
                  break;
                case "h":
                  n = Je(_e.Hours, 1, -12);
                  break;
                case "hh":
                  n = Je(_e.Hours, 2, -12);
                  break;
                case "H":
                  n = Je(_e.Hours, 1);
                  break;
                case "HH":
                  n = Je(_e.Hours, 2);
                  break;
                case "m":
                  n = Je(_e.Minutes, 1);
                  break;
                case "mm":
                  n = Je(_e.Minutes, 2);
                  break;
                case "s":
                  n = Je(_e.Seconds, 1);
                  break;
                case "ss":
                  n = Je(_e.Seconds, 2);
                  break;
                case "S":
                  n = Je(_e.FractionalSeconds, 1);
                  break;
                case "SS":
                  n = Je(_e.FractionalSeconds, 2);
                  break;
                case "SSS":
                  n = Je(_e.FractionalSeconds, 3);
                  break;
                case "Z":
                case "ZZ":
                case "ZZZ":
                  n = Qc(fi.Short);
                  break;
                case "ZZZZZ":
                  n = Qc(fi.Extended);
                  break;
                case "O":
                case "OO":
                case "OOO":
                case "z":
                case "zz":
                case "zzz":
                  n = Qc(fi.ShortGMT);
                  break;
                case "OOOO":
                case "ZZZZ":
                case "zzzz":
                  n = Qc(fi.Long);
                  break;
                default:
                  return null;
              }
              return (zp[t] = n), n;
            })(d);
            c += u
              ? u(o, e, l)
              : "''" === d
              ? "'"
              : d.replace(/(^'|'$)/g, "").replace(/''/g, "'");
          }),
          c
        );
      }
      function Kc(t, n, e) {
        const i = new Date(0);
        return i.setFullYear(t, n, e), i.setHours(0, 0, 0), i;
      }
      function pi(t, n) {
        const e = (function CV(t) {
          return Pt(t)[Re.LocaleId];
        })(t);
        if (((ha[e] = ha[e] || {}), ha[e][n])) return ha[e][n];
        let i = "";
        switch (n) {
          case "shortDate":
            i = Gc(t, nn.Short);
            break;
          case "mediumDate":
            i = Gc(t, nn.Medium);
            break;
          case "longDate":
            i = Gc(t, nn.Long);
            break;
          case "fullDate":
            i = Gc(t, nn.Full);
            break;
          case "shortTime":
            i = Wc(t, nn.Short);
            break;
          case "mediumTime":
            i = Wc(t, nn.Medium);
            break;
          case "longTime":
            i = Wc(t, nn.Long);
            break;
          case "fullTime":
            i = Wc(t, nn.Full);
            break;
          case "short":
            const o = pi(t, "shortTime"),
              r = pi(t, "shortDate");
            i = Zc(Yc(t, nn.Short), [o, r]);
            break;
          case "medium":
            const s = pi(t, "mediumTime"),
              a = pi(t, "mediumDate");
            i = Zc(Yc(t, nn.Medium), [s, a]);
            break;
          case "long":
            const l = pi(t, "longTime"),
              c = pi(t, "longDate");
            i = Zc(Yc(t, nn.Long), [l, c]);
            break;
          case "full":
            const d = pi(t, "fullTime"),
              u = pi(t, "fullDate");
            i = Zc(Yc(t, nn.Full), [d, u]);
        }
        return i && (ha[e][n] = i), i;
      }
      function Zc(t, n) {
        return (
          n &&
            (t = t.replace(/\{([^}]+)}/g, function (e, i) {
              return null != n && i in n ? n[i] : e;
            })),
          t
        );
      }
      function Tn(t, n, e = "-", i, o) {
        let r = "";
        (t < 0 || (o && t <= 0)) && (o ? (t = 1 - t) : ((t = -t), (r = e)));
        let s = String(t);
        for (; s.length < n; ) s = "0" + s;
        return i && (s = s.slice(s.length - n)), r + s;
      }
      function Je(t, n, e = 0, i = !1, o = !1) {
        return function (r, s) {
          let a = (function LV(t, n) {
            switch (t) {
              case _e.FullYear:
                return n.getFullYear();
              case _e.Month:
                return n.getMonth();
              case _e.Date:
                return n.getDate();
              case _e.Hours:
                return n.getHours();
              case _e.Minutes:
                return n.getMinutes();
              case _e.Seconds:
                return n.getSeconds();
              case _e.FractionalSeconds:
                return n.getMilliseconds();
              case _e.Day:
                return n.getDay();
              default:
                throw new Error(`Unknown DateType value "${t}".`);
            }
          })(t, r);
          if (((e > 0 || a > -e) && (a += e), t === _e.Hours))
            0 === a && -12 === e && (a = 12);
          else if (t === _e.FractionalSeconds)
            return (function NV(t, n) {
              return Tn(t, 3).substring(0, n);
            })(a, n);
          const l = mn(s, Xe.MinusSign);
          return Tn(a, n, l, i, o);
        };
      }
      function Pe(t, n, e = Ft.Format, i = !1) {
        return function (o, r) {
          return (function VV(t, n, e, i, o, r) {
            switch (e) {
              case ye.Months:
                return (function xV(t, n, e) {
                  const i = Pt(t),
                    r = gn([i[Re.MonthsFormat], i[Re.MonthsStandalone]], n);
                  return gn(r, e);
                })(n, o, i)[t.getMonth()];
              case ye.Days:
                return (function DV(t, n, e) {
                  const i = Pt(t),
                    r = gn([i[Re.DaysFormat], i[Re.DaysStandalone]], n);
                  return gn(r, e);
                })(n, o, i)[t.getDay()];
              case ye.DayPeriods:
                const s = t.getHours(),
                  a = t.getMinutes();
                if (r) {
                  const c = (function TV(t) {
                      const n = Pt(t);
                      return (
                        VD(n),
                        (n[Re.ExtraData][2] || []).map((i) =>
                          "string" == typeof i ? Up(i) : [Up(i[0]), Up(i[1])]
                        )
                      );
                    })(n),
                    d = (function IV(t, n, e) {
                      const i = Pt(t);
                      VD(i);
                      const r =
                        gn([i[Re.ExtraData][0], i[Re.ExtraData][1]], n) || [];
                      return gn(r, e) || [];
                    })(n, o, i),
                    u = c.findIndex((h) => {
                      if (Array.isArray(h)) {
                        const [f, p] = h,
                          m = s >= f.hours && a >= f.minutes,
                          v = s < p.hours || (s === p.hours && a < p.minutes);
                        if (f.hours < p.hours) {
                          if (m && v) return !0;
                        } else if (m || v) return !0;
                      } else if (h.hours === s && h.minutes === a) return !0;
                      return !1;
                    });
                  if (-1 !== u) return d[u];
                }
                return (function wV(t, n, e) {
                  const i = Pt(t),
                    r = gn(
                      [i[Re.DayPeriodsFormat], i[Re.DayPeriodsStandalone]],
                      n
                    );
                  return gn(r, e);
                })(n, o, i)[s < 12 ? 0 : 1];
              case ye.Eras:
                return (function EV(t, n) {
                  return gn(Pt(t)[Re.Eras], n);
                })(n, i)[t.getFullYear() <= 0 ? 0 : 1];
              default:
                throw new Error(`unexpected translation type ${e}`);
            }
          })(o, r, t, n, e, i);
        };
      }
      function Qc(t) {
        return function (n, e, i) {
          const o = -1 * i,
            r = mn(e, Xe.MinusSign),
            s = o > 0 ? Math.floor(o / 60) : Math.ceil(o / 60);
          switch (t) {
            case fi.Short:
              return (
                (o >= 0 ? "+" : "") + Tn(s, 2, r) + Tn(Math.abs(o % 60), 2, r)
              );
            case fi.ShortGMT:
              return "GMT" + (o >= 0 ? "+" : "") + Tn(s, 1, r);
            case fi.Long:
              return (
                "GMT" +
                (o >= 0 ? "+" : "") +
                Tn(s, 2, r) +
                ":" +
                Tn(Math.abs(o % 60), 2, r)
              );
            case fi.Extended:
              return 0 === i
                ? "Z"
                : (o >= 0 ? "+" : "") +
                    Tn(s, 2, r) +
                    ":" +
                    Tn(Math.abs(o % 60), 2, r);
            default:
              throw new Error(`Unknown zone width "${t}"`);
          }
        };
      }
      const BV = 0,
        Xc = 4;
      function BD(t) {
        return Kc(
          t.getFullYear(),
          t.getMonth(),
          t.getDate() + (Xc - t.getDay())
        );
      }
      function $p(t, n = !1) {
        return function (e, i) {
          let o;
          if (n) {
            const r = new Date(e.getFullYear(), e.getMonth(), 1).getDay() - 1,
              s = e.getDate();
            o = 1 + Math.floor((s + r) / 7);
          } else {
            const r = BD(e),
              s = (function jV(t) {
                const n = Kc(t, BV, 1).getDay();
                return Kc(t, 0, 1 + (n <= Xc ? Xc : Xc + 7) - n);
              })(r.getFullYear()),
              a = r.getTime() - s.getTime();
            o = 1 + Math.round(a / 6048e5);
          }
          return Tn(o, t, mn(i, Xe.MinusSign));
        };
      }
      function Jc(t, n = !1) {
        return function (e, i) {
          return Tn(BD(e).getFullYear(), t, mn(i, Xe.MinusSign), n);
        };
      }
      const zp = {};
      function jD(t, n) {
        t = t.replace(/:/g, "");
        const e = Date.parse("Jan 01, 1970 00:00:00 " + t) / 6e4;
        return isNaN(e) ? n : e;
      }
      function HD(t) {
        return t instanceof Date && !isNaN(t.valueOf());
      }
      function qD(t, n) {
        n = encodeURIComponent(n);
        for (const e of t.split(";")) {
          const i = e.indexOf("="),
            [o, r] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
          if (o.trim() === n) return decodeURIComponent(r);
        }
        return null;
      }
      const Zp = /\s+/,
        GD = [];
      let td = (() => {
        class t {
          constructor(e, i, o, r) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = o),
              (this._renderer = r),
              (this.initialClasses = GD),
              (this.stateMap = new Map());
          }
          set klass(e) {
            this.initialClasses = null != e ? e.trim().split(Zp) : GD;
          }
          set ngClass(e) {
            this.rawClass = "string" == typeof e ? e.trim().split(Zp) : e;
          }
          ngDoCheck() {
            for (const i of this.initialClasses) this._updateState(i, !0);
            const e = this.rawClass;
            if (Array.isArray(e) || e instanceof Set)
              for (const i of e) this._updateState(i, !0);
            else if (null != e)
              for (const i of Object.keys(e)) this._updateState(i, !!e[i]);
            this._applyStateDiff();
          }
          _updateState(e, i) {
            const o = this.stateMap.get(e);
            void 0 !== o
              ? (o.enabled !== i && ((o.changed = !0), (o.enabled = i)),
                (o.touched = !0))
              : this.stateMap.set(e, { enabled: i, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const e of this.stateMap) {
              const i = e[0],
                o = e[1];
              o.changed
                ? (this._toggleClass(i, o.enabled), (o.changed = !1))
                : o.touched ||
                  (o.enabled && this._toggleClass(i, !1),
                  this.stateMap.delete(i)),
                (o.touched = !1);
            }
          }
          _toggleClass(e, i) {
            (e = e.trim()).length > 0 &&
              e.split(Zp).forEach((o) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, o)
                  : this._renderer.removeClass(this._ngEl.nativeElement, o);
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y($c), y(da), y(Me), y(fn));
          });
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          }));
        }
        return t;
      })();
      class oB {
        constructor(n, e, i, o) {
          (this.$implicit = n),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = o);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Hi = (() => {
        class t {
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(e, i, o) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = o),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              !this._differ &&
                e &&
                (this._differ = this._differs
                  .find(e)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = this._viewContainer;
            e.forEachOperation((o, r, s) => {
              if (null == o.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new oB(o.item, this._ngForOf, -1, -1),
                  null === s ? void 0 : s
                );
              else if (null == s) i.remove(null === r ? void 0 : r);
              else if (null !== r) {
                const a = i.get(r);
                i.move(a, s), YD(a, o);
              }
            });
            for (let o = 0, r = i.length; o < r; o++) {
              const a = i.get(o).context;
              (a.index = o), (a.count = r), (a.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((o) => {
              YD(i.get(o.currentIndex), o);
            });
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(tn), y(en), y($c));
          });
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          }));
        }
        return t;
      })();
      function YD(t, n) {
        t.context.$implicit = n.item;
      }
      let _n = (() => {
        class t {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new rB()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            KD("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            KD("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(tn), y(en));
          });
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          }));
        }
        return t;
      })();
      class rB {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function KD(t, n) {
        if (n && !n.createEmbeddedView)
          throw new Error(
            `${t} must be a TemplateRef, but received '${ot(n)}'.`
          );
      }
      class Qp {
        constructor(n, e) {
          (this._viewContainerRef = n),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(n) {
          n && !this._created
            ? this.create()
            : !n && this._created && this.destroy();
        }
      }
      let pa = (() => {
          class t {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews.length > 0 && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (const i of this._defaultViews) i.enforceState(e);
              }
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
              standalone: !0,
            }));
          }
          return t;
        })(),
        Xp = (() => {
          class t {
            constructor(e, i, o) {
              (this.ngSwitch = o), o._addCase(), (this._view = new Qp(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(tn), y(en), y(pa, 9));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
              standalone: !0,
            }));
          }
          return t;
        })(),
        ZD = (() => {
          class t {
            constructor(e, i, o) {
              o._addDefault(new Qp(e, i));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(tn), y(en), y(pa, 9));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [["", "ngSwitchDefault", ""]],
              standalone: !0,
            }));
          }
          return t;
        })(),
        Jp = (() => {
          class t {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(e) {
              if (e.ngTemplateOutlet || e.ngTemplateOutletInjector) {
                const i = this._viewContainerRef;
                if (
                  (this._viewRef && i.remove(i.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: o,
                    ngTemplateOutletContext: r,
                    ngTemplateOutletInjector: s,
                  } = this;
                  this._viewRef = i.createEmbeddedView(
                    o,
                    r,
                    s ? { injector: s } : void 0
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  e.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(tn));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
                ngTemplateOutletInjector: "ngTemplateOutletInjector",
              },
              standalone: !0,
              features: [Tt],
            }));
          }
          return t;
        })();
      function In(t, n) {
        return new x(2100, !1);
      }
      class lB {
        createSubscription(n, e) {
          return Ty(() =>
            n.subscribe({
              next: e,
              error: (i) => {
                throw i;
              },
            })
          );
        }
        dispose(n) {
          Ty(() => n.unsubscribe());
        }
      }
      class cB {
        createSubscription(n, e) {
          return n.then(e, (i) => {
            throw i;
          });
        }
        dispose(n) {}
      }
      const dB = new cB(),
        uB = new lB();
      let XD = (() => {
        class t {
          constructor(e) {
            (this._latestValue = null),
              (this._subscription = null),
              (this._obj = null),
              (this._strategy = null),
              (this._ref = e);
          }
          ngOnDestroy() {
            this._subscription && this._dispose(), (this._ref = null);
          }
          transform(e) {
            return this._obj
              ? e !== this._obj
                ? (this._dispose(), this.transform(e))
                : this._latestValue
              : (e && this._subscribe(e), this._latestValue);
          }
          _subscribe(e) {
            (this._obj = e),
              (this._strategy = this._selectStrategy(e)),
              (this._subscription = this._strategy.createSubscription(e, (i) =>
                this._updateLatestValue(e, i)
              ));
          }
          _selectStrategy(e) {
            if (Js(e)) return dB;
            if (VC(e)) return uB;
            throw In();
          }
          _dispose() {
            this._strategy.dispose(this._subscription),
              (this._latestValue = null),
              (this._subscription = null),
              (this._obj = null);
          }
          _updateLatestValue(e, i) {
            e === this._obj &&
              ((this._latestValue = i), this._ref.markForCheck());
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(Hr, 16));
          });
          static #t = (this.ɵpipe = Et({
            name: "async",
            type: t,
            pure: !1,
            standalone: !0,
          }));
        }
        return t;
      })();
      const _B = new S("DATE_PIPE_DEFAULT_TIMEZONE"),
        yB = new S("DATE_PIPE_DEFAULT_OPTIONS");
      let JD = (() => {
          class t {
            constructor(e, i, o) {
              (this.locale = e),
                (this.defaultTimezone = i),
                (this.defaultOptions = o);
            }
            transform(e, i, o, r) {
              if (null == e || "" === e || e != e) return null;
              try {
                return FV(
                  e,
                  i ?? this.defaultOptions?.dateFormat ?? "mediumDate",
                  r || this.locale,
                  o ??
                    this.defaultOptions?.timezone ??
                    this.defaultTimezone ??
                    void 0
                );
              } catch (s) {
                throw In();
              }
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(Gn, 16), y(_B, 24), y(yB, 24));
            });
            static #t = (this.ɵpipe = Et({
              name: "date",
              type: t,
              pure: !0,
              standalone: !0,
            }));
          }
          return t;
        })(),
        Eo = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({}));
          }
          return t;
        })();
      const tx = "browser";
      function nx(t) {
        return t === tx;
      }
      function ix(t) {
        return "server" === t;
      }
      let OB = (() => {
        class t {
          static #e = (this.ɵprov = I({
            token: t,
            providedIn: "root",
            factory: () => new RB(C(re), window),
          }));
        }
        return t;
      })();
      class RB {
        constructor(n, e) {
          (this.document = n), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(n) {
          this.offset = Array.isArray(n) ? () => n : n;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(n) {
          this.supportsScrolling() && this.window.scrollTo(n[0], n[1]);
        }
        scrollToAnchor(n) {
          if (!this.supportsScrolling()) return;
          const e = (function PB(t, n) {
            const e = t.getElementById(n) || t.getElementsByName(n)[0];
            if (e) return e;
            if (
              "function" == typeof t.createTreeWalker &&
              t.body &&
              "function" == typeof t.body.attachShadow
            ) {
              const i = t.createTreeWalker(t.body, NodeFilter.SHOW_ELEMENT);
              let o = i.currentNode;
              for (; o; ) {
                const r = o.shadowRoot;
                if (r) {
                  const s =
                    r.getElementById(n) || r.querySelector(`[name="${n}"]`);
                  if (s) return s;
                }
                o = i.nextNode();
              }
            }
            return null;
          })(this.document, n);
          e && (this.scrollToElement(e), e.focus());
        }
        setHistoryScrollRestoration(n) {
          this.supportsScrolling() &&
            (this.window.history.scrollRestoration = n);
        }
        scrollToElement(n) {
          const e = n.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            o = e.top + this.window.pageYOffset,
            r = this.offset();
          this.window.scrollTo(i - r[0], o - r[1]);
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      class ox {}
      class nj extends fV {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class om extends nj {
        static makeCurrent() {
          !(function hV(t) {
            Vp || (Vp = t);
          })(new om());
        }
        onAndCancel(n, e, i) {
          return (
            n.addEventListener(e, i),
            () => {
              n.removeEventListener(e, i);
            }
          );
        }
        dispatchEvent(n, e) {
          n.dispatchEvent(e);
        }
        remove(n) {
          n.parentNode && n.parentNode.removeChild(n);
        }
        createElement(n, e) {
          return (e = e || this.getDefaultDocument()).createElement(n);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(n) {
          return n.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(n) {
          return n instanceof DocumentFragment;
        }
        getGlobalEventTarget(n, e) {
          return "window" === e
            ? window
            : "document" === e
            ? n
            : "body" === e
            ? n.body
            : null;
        }
        getBaseHref(n) {
          const e = (function ij() {
            return (
              (ga = ga || document.querySelector("base")),
              ga ? ga.getAttribute("href") : null
            );
          })();
          return null == e
            ? null
            : (function oj(t) {
                (od = od || document.createElement("a")),
                  od.setAttribute("href", t);
                const n = od.pathname;
                return "/" === n.charAt(0) ? n : `/${n}`;
              })(e);
        }
        resetBaseElement() {
          ga = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(n) {
          return qD(document.cookie, n);
        }
      }
      let od,
        ga = null,
        sj = (() => {
          class t {
            build() {
              return new XMLHttpRequest();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
          }
          return t;
        })();
      const rm = new S("EventManagerPlugins");
      let cx = (() => {
        class t {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((o) => {
                o.manager = this;
              }),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, o) {
            return this._findPluginFor(i).addEventListener(e, i, o);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            let i = this._eventNameToPlugin.get(e);
            if (i) return i;
            if (((i = this._plugins.find((r) => r.supports(e))), !i))
              throw new x(5101, !1);
            return this._eventNameToPlugin.set(e, i), i;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(rm), C(X));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class dx {
        constructor(n) {
          this._doc = n;
        }
      }
      const sm = "ng-app-id";
      let ux = (() => {
        class t {
          constructor(e, i, o, r = {}) {
            (this.doc = e),
              (this.appId = i),
              (this.nonce = o),
              (this.platformId = r),
              (this.styleRef = new Map()),
              (this.hostNodes = new Set()),
              (this.styleNodesInDOM = this.collectServerRenderedStyles()),
              (this.platformIsServer = ix(r)),
              this.resetHostNodes();
          }
          addStyles(e) {
            for (const i of e)
              1 === this.changeUsageCount(i, 1) && this.onStyleAdded(i);
          }
          removeStyles(e) {
            for (const i of e)
              this.changeUsageCount(i, -1) <= 0 && this.onStyleRemoved(i);
          }
          ngOnDestroy() {
            const e = this.styleNodesInDOM;
            e && (e.forEach((i) => i.remove()), e.clear());
            for (const i of this.getAllStyles()) this.onStyleRemoved(i);
            this.resetHostNodes();
          }
          addHost(e) {
            this.hostNodes.add(e);
            for (const i of this.getAllStyles()) this.addStyleToHost(e, i);
          }
          removeHost(e) {
            this.hostNodes.delete(e);
          }
          getAllStyles() {
            return this.styleRef.keys();
          }
          onStyleAdded(e) {
            for (const i of this.hostNodes) this.addStyleToHost(i, e);
          }
          onStyleRemoved(e) {
            const i = this.styleRef;
            i.get(e)?.elements?.forEach((o) => o.remove()), i.delete(e);
          }
          collectServerRenderedStyles() {
            const e = this.doc.head?.querySelectorAll(
              `style[${sm}="${this.appId}"]`
            );
            if (e?.length) {
              const i = new Map();
              return (
                e.forEach((o) => {
                  null != o.textContent && i.set(o.textContent, o);
                }),
                i
              );
            }
            return null;
          }
          changeUsageCount(e, i) {
            const o = this.styleRef;
            if (o.has(e)) {
              const r = o.get(e);
              return (r.usage += i), r.usage;
            }
            return o.set(e, { usage: i, elements: [] }), i;
          }
          getStyleElement(e, i) {
            const o = this.styleNodesInDOM,
              r = o?.get(i);
            if (r?.parentNode === e)
              return o.delete(i), r.removeAttribute(sm), r;
            {
              const s = this.doc.createElement("style");
              return (
                this.nonce && s.setAttribute("nonce", this.nonce),
                (s.textContent = i),
                this.platformIsServer && s.setAttribute(sm, this.appId),
                s
              );
            }
          }
          addStyleToHost(e, i) {
            const o = this.getStyleElement(e, i);
            e.appendChild(o);
            const r = this.styleRef,
              s = r.get(i)?.elements;
            s ? s.push(o) : r.set(i, { elements: [o], usage: 1 });
          }
          resetHostNodes() {
            const e = this.hostNodes;
            e.clear(), e.add(this.doc.head);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(re), C(sc), C(af, 8), C(ai));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const am = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        lm = /%COMP%/g,
        dj = new S("RemoveStylesOnCompDestroy", {
          providedIn: "root",
          factory: () => !1,
        });
      function fx(t, n) {
        return n.map((e) => e.replace(lm, t));
      }
      let cm = (() => {
        class t {
          constructor(e, i, o, r, s, a, l, c = null) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = o),
              (this.removeStylesOnCompDestroy = r),
              (this.doc = s),
              (this.platformId = a),
              (this.ngZone = l),
              (this.nonce = c),
              (this.rendererByCompId = new Map()),
              (this.platformIsServer = ix(a)),
              (this.defaultRenderer = new dm(e, s, l, this.platformIsServer));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            this.platformIsServer &&
              i.encapsulation === dn.ShadowDom &&
              (i = { ...i, encapsulation: dn.Emulated });
            const o = this.getOrCreateRenderer(e, i);
            return (
              o instanceof mx
                ? o.applyToHost(e)
                : o instanceof um && o.applyStyles(),
              o
            );
          }
          getOrCreateRenderer(e, i) {
            const o = this.rendererByCompId;
            let r = o.get(i.id);
            if (!r) {
              const s = this.doc,
                a = this.ngZone,
                l = this.eventManager,
                c = this.sharedStylesHost,
                d = this.removeStylesOnCompDestroy,
                u = this.platformIsServer;
              switch (i.encapsulation) {
                case dn.Emulated:
                  r = new mx(l, c, i, this.appId, d, s, a, u);
                  break;
                case dn.ShadowDom:
                  return new pj(l, c, e, i, s, a, this.nonce, u);
                default:
                  r = new um(l, c, i, d, s, a, u);
              }
              o.set(i.id, r);
            }
            return r;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(
              C(cx),
              C(ux),
              C(sc),
              C(dj),
              C(re),
              C(ai),
              C(X),
              C(af)
            );
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class dm {
        constructor(n, e, i, o) {
          (this.eventManager = n),
            (this.doc = e),
            (this.ngZone = i),
            (this.platformIsServer = o),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(n, e) {
          return e
            ? this.doc.createElementNS(am[e] || e, n)
            : this.doc.createElement(n);
        }
        createComment(n) {
          return this.doc.createComment(n);
        }
        createText(n) {
          return this.doc.createTextNode(n);
        }
        appendChild(n, e) {
          (px(n) ? n.content : n).appendChild(e);
        }
        insertBefore(n, e, i) {
          n && (px(n) ? n.content : n).insertBefore(e, i);
        }
        removeChild(n, e) {
          n && n.removeChild(e);
        }
        selectRootElement(n, e) {
          let i = "string" == typeof n ? this.doc.querySelector(n) : n;
          if (!i) throw new x(-5104, !1);
          return e || (i.textContent = ""), i;
        }
        parentNode(n) {
          return n.parentNode;
        }
        nextSibling(n) {
          return n.nextSibling;
        }
        setAttribute(n, e, i, o) {
          if (o) {
            e = o + ":" + e;
            const r = am[o];
            r ? n.setAttributeNS(r, e, i) : n.setAttribute(e, i);
          } else n.setAttribute(e, i);
        }
        removeAttribute(n, e, i) {
          if (i) {
            const o = am[i];
            o ? n.removeAttributeNS(o, e) : n.removeAttribute(`${i}:${e}`);
          } else n.removeAttribute(e);
        }
        addClass(n, e) {
          n.classList.add(e);
        }
        removeClass(n, e) {
          n.classList.remove(e);
        }
        setStyle(n, e, i, o) {
          o & (ki.DashCase | ki.Important)
            ? n.style.setProperty(e, i, o & ki.Important ? "important" : "")
            : (n.style[e] = i);
        }
        removeStyle(n, e, i) {
          i & ki.DashCase ? n.style.removeProperty(e) : (n.style[e] = "");
        }
        setProperty(n, e, i) {
          n[e] = i;
        }
        setValue(n, e) {
          n.nodeValue = e;
        }
        listen(n, e, i) {
          if (
            "string" == typeof n &&
            !(n = ji().getGlobalEventTarget(this.doc, n))
          )
            throw new Error(`Unsupported event target ${n} for event ${e}`);
          return this.eventManager.addEventListener(
            n,
            e,
            this.decoratePreventDefault(i)
          );
        }
        decoratePreventDefault(n) {
          return (e) => {
            if ("__ngUnwrap__" === e) return n;
            !1 ===
              (this.platformIsServer
                ? this.ngZone.runGuarded(() => n(e))
                : n(e)) && e.preventDefault();
          };
        }
      }
      function px(t) {
        return "TEMPLATE" === t.tagName && void 0 !== t.content;
      }
      class pj extends dm {
        constructor(n, e, i, o, r, s, a, l) {
          super(n, r, s, l),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const c = fx(o.id, o.styles);
          for (const d of c) {
            const u = document.createElement("style");
            a && u.setAttribute("nonce", a),
              (u.textContent = d),
              this.shadowRoot.appendChild(u);
          }
        }
        nodeOrShadowRoot(n) {
          return n === this.hostEl ? this.shadowRoot : n;
        }
        appendChild(n, e) {
          return super.appendChild(this.nodeOrShadowRoot(n), e);
        }
        insertBefore(n, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(n), e, i);
        }
        removeChild(n, e) {
          return super.removeChild(this.nodeOrShadowRoot(n), e);
        }
        parentNode(n) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(n))
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class um extends dm {
        constructor(n, e, i, o, r, s, a, l) {
          super(n, r, s, a),
            (this.sharedStylesHost = e),
            (this.removeStylesOnCompDestroy = o),
            (this.styles = l ? fx(l, i.styles) : i.styles);
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles);
        }
        destroy() {
          this.removeStylesOnCompDestroy &&
            this.sharedStylesHost.removeStyles(this.styles);
        }
      }
      class mx extends um {
        constructor(n, e, i, o, r, s, a, l) {
          const c = o + "-" + i.id;
          super(n, e, i, r, s, a, l, c),
            (this.contentAttr = (function uj(t) {
              return "_ngcontent-%COMP%".replace(lm, t);
            })(c)),
            (this.hostAttr = (function hj(t) {
              return "_nghost-%COMP%".replace(lm, t);
            })(c));
        }
        applyToHost(n) {
          this.applyStyles(), this.setAttribute(n, this.hostAttr, "");
        }
        createElement(n, e) {
          const i = super.createElement(n, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      let mj = (() => {
        class t extends dx {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, o) {
            return (
              e.addEventListener(i, o, !1),
              () => this.removeEventListener(e, i, o)
            );
          }
          removeEventListener(e, i, o) {
            return e.removeEventListener(i, o);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(re));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const gx = ["alt", "control", "meta", "shift"],
        gj = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        _j = {
          alt: (t) => t.altKey,
          control: (t) => t.ctrlKey,
          meta: (t) => t.metaKey,
          shift: (t) => t.shiftKey,
        };
      let yj = (() => {
        class t extends dx {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != t.parseEventName(e);
          }
          addEventListener(e, i, o) {
            const r = t.parseEventName(i),
              s = t.eventCallback(r.fullKey, o, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => ji().onAndCancel(e, r.domEventName, s));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split("."),
              o = i.shift();
            if (0 === i.length || ("keydown" !== o && "keyup" !== o))
              return null;
            const r = t._normalizeKey(i.pop());
            let s = "",
              a = i.indexOf("code");
            if (
              (a > -1 && (i.splice(a, 1), (s = "code.")),
              gx.forEach((c) => {
                const d = i.indexOf(c);
                d > -1 && (i.splice(d, 1), (s += c + "."));
              }),
              (s += r),
              0 != i.length || 0 === r.length)
            )
              return null;
            const l = {};
            return (l.domEventName = o), (l.fullKey = s), l;
          }
          static matchEventFullKeyCode(e, i) {
            let o = gj[e.key] || e.key,
              r = "";
            return (
              i.indexOf("code.") > -1 && ((o = e.code), (r = "code.")),
              !(null == o || !o) &&
                ((o = o.toLowerCase()),
                " " === o ? (o = "space") : "." === o && (o = "dot"),
                gx.forEach((s) => {
                  s !== o && (0, _j[s])(e) && (r += s + ".");
                }),
                (r += o),
                r === i)
            );
          }
          static eventCallback(e, i, o) {
            return (r) => {
              t.matchEventFullKeyCode(r, e) && o.runGuarded(() => i(r));
            };
          }
          static _normalizeKey(e) {
            return "esc" === e ? "escape" : e;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(re));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const wj = aD(X2, "browser", [
          { provide: ai, useValue: tx },
          {
            provide: yb,
            useValue: function vj() {
              om.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: re,
            useFactory: function Cj() {
              return (
                (function uR(t) {
                  qh = t;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        Dj = new S(""),
        vx = [
          {
            provide: Bc,
            useClass: class rj {
              addToWindow(n) {
                (Ie.getAngularTestability = (i, o = !0) => {
                  const r = n.findTestabilityInTree(i, o);
                  if (null == r) throw new x(5103, !1);
                  return r;
                }),
                  (Ie.getAllAngularTestabilities = () =>
                    n.getAllTestabilities()),
                  (Ie.getAllAngularRootElements = () => n.getAllRootElements()),
                  Ie.frameworkStabilizers || (Ie.frameworkStabilizers = []),
                  Ie.frameworkStabilizers.push((i) => {
                    const o = Ie.getAllAngularTestabilities();
                    let r = o.length,
                      s = !1;
                    const a = function (l) {
                      (s = s || l), r--, 0 == r && i(s);
                    };
                    o.forEach((l) => {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(n, e, i) {
                return null == e
                  ? null
                  : n.getTestability(e) ??
                      (i
                        ? ji().isShadowRoot(e)
                          ? this.findTestabilityInTree(n, e.host, !0)
                          : this.findTestabilityInTree(n, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: nD, useClass: Sp, deps: [X, Tp, Bc] },
          { provide: Sp, useClass: Sp, deps: [X, Tp, Bc] },
        ],
        bx = [
          { provide: tf, useValue: "root" },
          {
            provide: li,
            useFactory: function bj() {
              return new li();
            },
            deps: [],
          },
          { provide: rm, useClass: mj, multi: !0, deps: [re, X, ai] },
          { provide: rm, useClass: yj, multi: !0, deps: [re] },
          cm,
          ux,
          cx,
          { provide: wr, useExisting: cm },
          { provide: ox, useClass: sj, deps: [] },
          [],
        ];
      let Cx = (() => {
          class t {
            constructor(e) {}
            static withServerTransition(e) {
              return {
                ngModule: t,
                providers: [{ provide: sc, useValue: e.appId }],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(Dj, 12));
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({
              providers: [...bx, ...vx],
              imports: [Eo, J2],
            }));
          }
          return t;
        })(),
        wx = (() => {
          class t {
            constructor(e) {
              this._doc = e;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(e) {
              this._doc.title = e || "";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(re));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: function (i) {
                let o = null;
                return (
                  (o = i
                    ? new i()
                    : (function Ej() {
                        return new wx(C(re));
                      })()),
                  o
                );
              },
              providedIn: "root",
            }));
          }
          return t;
        })();
      function zr(t, n) {
        return se(n) ? nt(t, n, 1) : nt(t, 1);
      }
      function Ue(t, n) {
        return qe((e, i) => {
          let o = 0;
          e.subscribe(Le(i, (r) => t.call(n, r, o++) && i.next(r)));
        });
      }
      function _a(t) {
        return qe((n, e) => {
          try {
            n.subscribe(e);
          } finally {
            e.add(t);
          }
        });
      }
      typeof window < "u" && window;
      class rd {}
      class sd {}
      class Wn {
        constructor(n) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            n
              ? "string" == typeof n
                ? (this.lazyInit = () => {
                    (this.headers = new Map()),
                      n.split("\n").forEach((e) => {
                        const i = e.indexOf(":");
                        if (i > 0) {
                          const o = e.slice(0, i),
                            r = o.toLowerCase(),
                            s = e.slice(i + 1).trim();
                          this.maybeSetNormalizedName(o, r),
                            this.headers.has(r)
                              ? this.headers.get(r).push(s)
                              : this.headers.set(r, [s]);
                        }
                      });
                  })
                : typeof Headers < "u" && n instanceof Headers
                ? ((this.headers = new Map()),
                  n.forEach((e, i) => {
                    this.setHeaderEntries(i, e);
                  }))
                : (this.lazyInit = () => {
                    (this.headers = new Map()),
                      Object.entries(n).forEach(([e, i]) => {
                        this.setHeaderEntries(e, i);
                      });
                  })
              : (this.headers = new Map());
        }
        has(n) {
          return this.init(), this.headers.has(n.toLowerCase());
        }
        get(n) {
          this.init();
          const e = this.headers.get(n.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(n) {
          return this.init(), this.headers.get(n.toLowerCase()) || null;
        }
        append(n, e) {
          return this.clone({ name: n, value: e, op: "a" });
        }
        set(n, e) {
          return this.clone({ name: n, value: e, op: "s" });
        }
        delete(n, e) {
          return this.clone({ name: n, value: e, op: "d" });
        }
        maybeSetNormalizedName(n, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, n);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof Wn
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((n) => this.applyUpdate(n)),
              (this.lazyUpdate = null)));
        }
        copyFrom(n) {
          n.init(),
            Array.from(n.headers.keys()).forEach((e) => {
              this.headers.set(e, n.headers.get(e)),
                this.normalizedNames.set(e, n.normalizedNames.get(e));
            });
        }
        clone(n) {
          const e = new Wn();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof Wn
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([n])),
            e
          );
        }
        applyUpdate(n) {
          const e = n.name.toLowerCase();
          switch (n.op) {
            case "a":
            case "s":
              let i = n.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(n.name, e);
              const o = ("a" === n.op ? this.headers.get(e) : void 0) || [];
              o.push(...i), this.headers.set(e, o);
              break;
            case "d":
              const r = n.value;
              if (r) {
                let s = this.headers.get(e);
                if (!s) return;
                (s = s.filter((a) => -1 === r.indexOf(a))),
                  0 === s.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, s);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        setHeaderEntries(n, e) {
          const i = (Array.isArray(e) ? e : [e]).map((r) => r.toString()),
            o = n.toLowerCase();
          this.headers.set(o, i), this.maybeSetNormalizedName(n, o);
        }
        forEach(n) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              n(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class Aj {
        encodeKey(n) {
          return Mx(n);
        }
        encodeValue(n) {
          return Mx(n);
        }
        decodeKey(n) {
          return decodeURIComponent(n);
        }
        decodeValue(n) {
          return decodeURIComponent(n);
        }
      }
      const Rj = /%(\d[a-f0-9])/gi,
        Pj = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function Mx(t) {
        return encodeURIComponent(t).replace(Rj, (n, e) => Pj[e] ?? n);
      }
      function ad(t) {
        return `${t}`;
      }
      class $i {
        constructor(n = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = n.encoder || new Aj()),
            n.fromString)
          ) {
            if (n.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function Oj(t, n) {
              const e = new Map();
              return (
                t.length > 0 &&
                  t
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((o) => {
                      const r = o.indexOf("="),
                        [s, a] =
                          -1 == r
                            ? [n.decodeKey(o), ""]
                            : [
                                n.decodeKey(o.slice(0, r)),
                                n.decodeValue(o.slice(r + 1)),
                              ],
                        l = e.get(s) || [];
                      l.push(a), e.set(s, l);
                    }),
                e
              );
            })(n.fromString, this.encoder);
          } else
            n.fromObject
              ? ((this.map = new Map()),
                Object.keys(n.fromObject).forEach((e) => {
                  const i = n.fromObject[e],
                    o = Array.isArray(i) ? i.map(ad) : [ad(i)];
                  this.map.set(e, o);
                }))
              : (this.map = null);
        }
        has(n) {
          return this.init(), this.map.has(n);
        }
        get(n) {
          this.init();
          const e = this.map.get(n);
          return e ? e[0] : null;
        }
        getAll(n) {
          return this.init(), this.map.get(n) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(n, e) {
          return this.clone({ param: n, value: e, op: "a" });
        }
        appendAll(n) {
          const e = [];
          return (
            Object.keys(n).forEach((i) => {
              const o = n[i];
              Array.isArray(o)
                ? o.forEach((r) => {
                    e.push({ param: i, value: r, op: "a" });
                  })
                : e.push({ param: i, value: o, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(n, e) {
          return this.clone({ param: n, value: e, op: "s" });
        }
        delete(n, e) {
          return this.clone({ param: n, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((n) => {
                const e = this.encoder.encodeKey(n);
                return this.map
                  .get(n)
                  .map((i) => e + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((n) => "" !== n)
              .join("&")
          );
        }
        clone(n) {
          const e = new $i({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(n)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((n) => this.map.set(n, this.cloneFrom.map.get(n))),
              this.updates.forEach((n) => {
                switch (n.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === n.op ? this.map.get(n.param) : void 0) || [];
                    e.push(ad(n.value)), this.map.set(n.param, e);
                    break;
                  case "d":
                    if (void 0 === n.value) {
                      this.map.delete(n.param);
                      break;
                    }
                    {
                      let i = this.map.get(n.param) || [];
                      const o = i.indexOf(ad(n.value));
                      -1 !== o && i.splice(o, 1),
                        i.length > 0
                          ? this.map.set(n.param, i)
                          : this.map.delete(n.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class kj {
        constructor() {
          this.map = new Map();
        }
        set(n, e) {
          return this.map.set(n, e), this;
        }
        get(n) {
          return (
            this.map.has(n) || this.map.set(n, n.defaultValue()),
            this.map.get(n)
          );
        }
        delete(n) {
          return this.map.delete(n), this;
        }
        has(n) {
          return this.map.has(n);
        }
        keys() {
          return this.map.keys();
        }
      }
      function Sx(t) {
        return typeof ArrayBuffer < "u" && t instanceof ArrayBuffer;
      }
      function Tx(t) {
        return typeof Blob < "u" && t instanceof Blob;
      }
      function Ix(t) {
        return typeof FormData < "u" && t instanceof FormData;
      }
      class ya {
        constructor(n, e, i, o) {
          let r;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = n.toUpperCase()),
            (function Fj(t) {
              switch (t) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || o
              ? ((this.body = void 0 !== i ? i : null), (r = o))
              : (r = i),
            r &&
              ((this.reportProgress = !!r.reportProgress),
              (this.withCredentials = !!r.withCredentials),
              r.responseType && (this.responseType = r.responseType),
              r.headers && (this.headers = r.headers),
              r.context && (this.context = r.context),
              r.params && (this.params = r.params)),
            this.headers || (this.headers = new Wn()),
            this.context || (this.context = new kj()),
            this.params)
          ) {
            const s = this.params.toString();
            if (0 === s.length) this.urlWithParams = e;
            else {
              const a = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + s;
            }
          } else (this.params = new $i()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : Sx(this.body) ||
              Tx(this.body) ||
              Ix(this.body) ||
              (function Nj(t) {
                return (
                  typeof URLSearchParams < "u" && t instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof $i
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || Ix(this.body)
            ? null
            : Tx(this.body)
            ? this.body.type || null
            : Sx(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof $i
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(n = {}) {
          const e = n.method || this.method,
            i = n.url || this.url,
            o = n.responseType || this.responseType,
            r = void 0 !== n.body ? n.body : this.body,
            s =
              void 0 !== n.withCredentials
                ? n.withCredentials
                : this.withCredentials,
            a =
              void 0 !== n.reportProgress
                ? n.reportProgress
                : this.reportProgress;
          let l = n.headers || this.headers,
            c = n.params || this.params;
          const d = n.context ?? this.context;
          return (
            void 0 !== n.setHeaders &&
              (l = Object.keys(n.setHeaders).reduce(
                (u, h) => u.set(h, n.setHeaders[h]),
                l
              )),
            n.setParams &&
              (c = Object.keys(n.setParams).reduce(
                (u, h) => u.set(h, n.setParams[h]),
                c
              )),
            new ya(e, i, r, {
              params: c,
              headers: l,
              context: d,
              reportProgress: a,
              responseType: o,
              withCredentials: s,
            })
          );
        }
      }
      var qr = (function (t) {
        return (
          (t[(t.Sent = 0)] = "Sent"),
          (t[(t.UploadProgress = 1)] = "UploadProgress"),
          (t[(t.ResponseHeader = 2)] = "ResponseHeader"),
          (t[(t.DownloadProgress = 3)] = "DownloadProgress"),
          (t[(t.Response = 4)] = "Response"),
          (t[(t.User = 5)] = "User"),
          t
        );
      })(qr || {});
      class fm {
        constructor(n, e = 200, i = "OK") {
          (this.headers = n.headers || new Wn()),
            (this.status = void 0 !== n.status ? n.status : e),
            (this.statusText = n.statusText || i),
            (this.url = n.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class pm extends fm {
        constructor(n = {}) {
          super(n), (this.type = qr.ResponseHeader);
        }
        clone(n = {}) {
          return new pm({
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class Gr extends fm {
        constructor(n = {}) {
          super(n),
            (this.type = qr.Response),
            (this.body = void 0 !== n.body ? n.body : null);
        }
        clone(n = {}) {
          return new Gr({
            body: void 0 !== n.body ? n.body : this.body,
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class Ax extends fm {
        constructor(n) {
          super(n, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${n.url || "(unknown url)"}`
                : `Http failure response for ${n.url || "(unknown url)"}: ${
                    n.status
                  } ${n.statusText}`),
            (this.error = n.error || null);
        }
      }
      function mm(t, n) {
        return {
          body: n,
          headers: t.headers,
          context: t.context,
          observe: t.observe,
          params: t.params,
          reportProgress: t.reportProgress,
          responseType: t.responseType,
          withCredentials: t.withCredentials,
        };
      }
      let mi = (() => {
        class t {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, o = {}) {
            let r;
            if (e instanceof ya) r = e;
            else {
              let l, c;
              (l = o.headers instanceof Wn ? o.headers : new Wn(o.headers)),
                o.params &&
                  (c =
                    o.params instanceof $i
                      ? o.params
                      : new $i({ fromObject: o.params })),
                (r = new ya(e, i, void 0 !== o.body ? o.body : null, {
                  headers: l,
                  context: o.context,
                  params: c,
                  reportProgress: o.reportProgress,
                  responseType: o.responseType || "json",
                  withCredentials: o.withCredentials,
                }));
            }
            const s = H(r).pipe(zr((l) => this.handler.handle(l)));
            if (e instanceof ya || "events" === o.observe) return s;
            const a = s.pipe(Ue((l) => l instanceof Gr));
            switch (o.observe || "body") {
              case "body":
                switch (r.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      ae((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      ae((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      ae((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  default:
                    return a.pipe(ae((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${o.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request("DELETE", e, i);
          }
          get(e, i = {}) {
            return this.request("GET", e, i);
          }
          head(e, i = {}) {
            return this.request("HEAD", e, i);
          }
          jsonp(e, i) {
            return this.request("JSONP", e, {
              params: new $i().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, i = {}) {
            return this.request("OPTIONS", e, i);
          }
          patch(e, i, o = {}) {
            return this.request("PATCH", e, mm(o, i));
          }
          post(e, i, o = {}) {
            return this.request("POST", e, mm(o, i));
          }
          put(e, i, o = {}) {
            return this.request("PUT", e, mm(o, i));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(rd));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function Px(t, n) {
        return n(t);
      }
      function Vj(t, n) {
        return (e, i) => n.intercept(e, { handle: (o) => t(o, i) });
      }
      const jj = new S(""),
        va = new S(""),
        kx = new S("");
      function Hj() {
        let t = null;
        return (n, e) => {
          null === t &&
            (t = (R(jj, { optional: !0 }) ?? []).reduceRight(Vj, Px));
          const i = R(Lc),
            o = i.add();
          return t(n, e).pipe(_a(() => i.remove(o)));
        };
      }
      let Fx = (() => {
        class t extends rd {
          constructor(e, i) {
            super(),
              (this.backend = e),
              (this.injector = i),
              (this.chain = null),
              (this.pendingTasks = R(Lc));
          }
          handle(e) {
            if (null === this.chain) {
              const o = Array.from(
                new Set([
                  ...this.injector.get(va),
                  ...this.injector.get(kx, []),
                ])
              );
              this.chain = o.reduceRight(
                (r, s) =>
                  (function Bj(t, n, e) {
                    return (i, o) => e.runInContext(() => n(i, (r) => t(r, o)));
                  })(r, s, this.injector),
                Px
              );
            }
            const i = this.pendingTasks.add();
            return this.chain(e, (o) => this.backend.handle(o)).pipe(
              _a(() => this.pendingTasks.remove(i))
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(sd), C(Xt));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const qj = /^\)\]\}',?\n/;
      let Lx = (() => {
        class t {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ("JSONP" === e.method) throw new x(-2800, !1);
            const i = this.xhrFactory;
            return (i.ɵloadImpl ? it(i.ɵloadImpl()) : H(null)).pipe(
              Vt(
                () =>
                  new Fe((r) => {
                    const s = i.build();
                    if (
                      (s.open(e.method, e.urlWithParams),
                      e.withCredentials && (s.withCredentials = !0),
                      e.headers.forEach((m, v) =>
                        s.setRequestHeader(m, v.join(","))
                      ),
                      e.headers.has("Accept") ||
                        s.setRequestHeader(
                          "Accept",
                          "application/json, text/plain, */*"
                        ),
                      !e.headers.has("Content-Type"))
                    ) {
                      const m = e.detectContentTypeHeader();
                      null !== m && s.setRequestHeader("Content-Type", m);
                    }
                    if (e.responseType) {
                      const m = e.responseType.toLowerCase();
                      s.responseType = "json" !== m ? m : "text";
                    }
                    const a = e.serializeBody();
                    let l = null;
                    const c = () => {
                        if (null !== l) return l;
                        const m = s.statusText || "OK",
                          v = new Wn(s.getAllResponseHeaders()),
                          D =
                            (function Gj(t) {
                              return "responseURL" in t && t.responseURL
                                ? t.responseURL
                                : /^X-Request-URL:/m.test(
                                    t.getAllResponseHeaders()
                                  )
                                ? t.getResponseHeader("X-Request-URL")
                                : null;
                            })(s) || e.url;
                        return (
                          (l = new pm({
                            headers: v,
                            status: s.status,
                            statusText: m,
                            url: D,
                          })),
                          l
                        );
                      },
                      d = () => {
                        let {
                            headers: m,
                            status: v,
                            statusText: D,
                            url: b,
                          } = c(),
                          O = null;
                        204 !== v &&
                          (O =
                            typeof s.response > "u"
                              ? s.responseText
                              : s.response),
                          0 === v && (v = O ? 200 : 0);
                        let k = v >= 200 && v < 300;
                        if ("json" === e.responseType && "string" == typeof O) {
                          const Y = O;
                          O = O.replace(qj, "");
                          try {
                            O = "" !== O ? JSON.parse(O) : null;
                          } catch (xe) {
                            (O = Y),
                              k && ((k = !1), (O = { error: xe, text: O }));
                          }
                        }
                        k
                          ? (r.next(
                              new Gr({
                                body: O,
                                headers: m,
                                status: v,
                                statusText: D,
                                url: b || void 0,
                              })
                            ),
                            r.complete())
                          : r.error(
                              new Ax({
                                error: O,
                                headers: m,
                                status: v,
                                statusText: D,
                                url: b || void 0,
                              })
                            );
                      },
                      u = (m) => {
                        const { url: v } = c(),
                          D = new Ax({
                            error: m,
                            status: s.status || 0,
                            statusText: s.statusText || "Unknown Error",
                            url: v || void 0,
                          });
                        r.error(D);
                      };
                    let h = !1;
                    const f = (m) => {
                        h || (r.next(c()), (h = !0));
                        let v = { type: qr.DownloadProgress, loaded: m.loaded };
                        m.lengthComputable && (v.total = m.total),
                          "text" === e.responseType &&
                            s.responseText &&
                            (v.partialText = s.responseText),
                          r.next(v);
                      },
                      p = (m) => {
                        let v = { type: qr.UploadProgress, loaded: m.loaded };
                        m.lengthComputable && (v.total = m.total), r.next(v);
                      };
                    return (
                      s.addEventListener("load", d),
                      s.addEventListener("error", u),
                      s.addEventListener("timeout", u),
                      s.addEventListener("abort", u),
                      e.reportProgress &&
                        (s.addEventListener("progress", f),
                        null !== a &&
                          s.upload &&
                          s.upload.addEventListener("progress", p)),
                      s.send(a),
                      r.next({ type: qr.Sent }),
                      () => {
                        s.removeEventListener("error", u),
                          s.removeEventListener("abort", u),
                          s.removeEventListener("load", d),
                          s.removeEventListener("timeout", u),
                          e.reportProgress &&
                            (s.removeEventListener("progress", f),
                            null !== a &&
                              s.upload &&
                              s.upload.removeEventListener("progress", p)),
                          s.readyState !== s.DONE && s.abort();
                      }
                    );
                  })
              )
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(ox));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const gm = new S("XSRF_ENABLED"),
        Vx = new S("XSRF_COOKIE_NAME", {
          providedIn: "root",
          factory: () => "XSRF-TOKEN",
        }),
        Bx = new S("XSRF_HEADER_NAME", {
          providedIn: "root",
          factory: () => "X-XSRF-TOKEN",
        });
      class jx {}
      let Kj = (() => {
        class t {
          constructor(e, i, o) {
            (this.doc = e),
              (this.platform = i),
              (this.cookieName = o),
              (this.lastCookieString = ""),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ("server" === this.platform) return null;
            const e = this.doc.cookie || "";
            return (
              e !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = qD(e, this.cookieName)),
                (this.lastCookieString = e)),
              this.lastToken
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(re), C(ai), C(Vx));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function Zj(t, n) {
        const e = t.url.toLowerCase();
        if (
          !R(gm) ||
          "GET" === t.method ||
          "HEAD" === t.method ||
          e.startsWith("http://") ||
          e.startsWith("https://")
        )
          return n(t);
        const i = R(jx).getToken(),
          o = R(Bx);
        return (
          null != i &&
            !t.headers.has(o) &&
            (t = t.clone({ headers: t.headers.set(o, i) })),
          n(t)
        );
      }
      var zi = (function (t) {
        return (
          (t[(t.Interceptors = 0)] = "Interceptors"),
          (t[(t.LegacyInterceptors = 1)] = "LegacyInterceptors"),
          (t[(t.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
          (t[(t.NoXsrfProtection = 3)] = "NoXsrfProtection"),
          (t[(t.JsonpSupport = 4)] = "JsonpSupport"),
          (t[(t.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
          (t[(t.Fetch = 6)] = "Fetch"),
          t
        );
      })(zi || {});
      function Qj(...t) {
        const n = [
          mi,
          Lx,
          Fx,
          { provide: rd, useExisting: Fx },
          { provide: sd, useExisting: Lx },
          { provide: va, useValue: Zj, multi: !0 },
          { provide: gm, useValue: !0 },
          { provide: jx, useClass: Kj },
        ];
        for (const e of t) n.push(...e.ɵproviders);
        return (function Xh(t) {
          return { ɵproviders: t };
        })(n);
      }
      const Hx = new S("LEGACY_INTERCEPTOR_FN");
      function Xj() {
        return (function Mo(t, n) {
          return { ɵkind: t, ɵproviders: n };
        })(zi.LegacyInterceptors, [
          { provide: Hx, useFactory: Hj },
          { provide: va, useExisting: Hx, multi: !0 },
        ]);
      }
      let Jj = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({ providers: [Qj(Xj())] }));
        }
        return t;
      })();
      const { isArray: a3 } = Array,
        { getPrototypeOf: l3, prototype: c3, keys: d3 } = Object;
      function Ux(t) {
        if (1 === t.length) {
          const n = t[0];
          if (a3(n)) return { args: n, keys: null };
          if (
            (function u3(t) {
              return t && "object" == typeof t && l3(t) === c3;
            })(n)
          ) {
            const e = d3(n);
            return { args: e.map((i) => n[i]), keys: e };
          }
        }
        return { args: t, keys: null };
      }
      const { isArray: h3 } = Array;
      function _m(t) {
        return ae((n) =>
          (function f3(t, n) {
            return h3(n) ? t(...n) : t(n);
          })(t, n)
        );
      }
      function $x(t, n) {
        return t.reduce((e, i, o) => ((e[i] = n[o]), e), {});
      }
      function cd(...t) {
        const n = hs(t),
          e = B_(t),
          { args: i, keys: o } = Ux(t);
        if (0 === i.length) return it([], n);
        const r = new Fe(
          (function p3(t, n, e = Ei) {
            return (i) => {
              zx(
                n,
                () => {
                  const { length: o } = t,
                    r = new Array(o);
                  let s = o,
                    a = o;
                  for (let l = 0; l < o; l++)
                    zx(
                      n,
                      () => {
                        const c = it(t[l], n);
                        let d = !1;
                        c.subscribe(
                          Le(
                            i,
                            (u) => {
                              (r[l] = u),
                                d || ((d = !0), a--),
                                a || i.next(e(r.slice()));
                            },
                            () => {
                              --s || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, n, o ? (s) => $x(o, s) : Ei)
        );
        return e ? r.pipe(_m(e)) : r;
      }
      function zx(t, n, e) {
        t ? ei(e, t, n) : n();
      }
      const dd = ds(
        (t) =>
          function () {
            t(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      function ba(...t) {
        return (function m3() {
          return qo(1);
        })()(it(t, hs(t)));
      }
      function Ca(t) {
        return new Fe((n) => {
          vt(t()).subscribe(n);
        });
      }
      function Wr(t, n) {
        const e = se(t) ? t : () => t,
          i = (o) => o.error(e());
        return new Fe(n ? (o) => n.schedule(i, 0, o) : i);
      }
      function ym() {
        return qe((t, n) => {
          let e = null;
          t._refCount++;
          const i = Le(n, void 0, void 0, void 0, () => {
            if (!t || t._refCount <= 0 || 0 < --t._refCount)
              return void (e = null);
            const o = t._connection,
              r = e;
            (e = null),
              o && (!r || o === r) && o.unsubscribe(),
              n.unsubscribe();
          });
          t.subscribe(i), i.closed || (e = t.connect());
        });
      }
      class qx extends Fe {
        constructor(n, e) {
          super(),
            (this.source = n),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            x_(n) && (this.lift = n.lift);
        }
        _subscribe(n) {
          return this.getSubject().subscribe(n);
        }
        getSubject() {
          const n = this._subject;
          return (
            (!n || n.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: n } = this;
          (this._subject = this._connection = null), n?.unsubscribe();
        }
        connect() {
          let n = this._connection;
          if (!n) {
            n = this._connection = new lt();
            const e = this.getSubject();
            n.add(
              this.source.subscribe(
                Le(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (i) => {
                    this._teardown(), e.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              n.closed && ((this._connection = null), (n = lt.EMPTY));
          }
          return n;
        }
        refCount() {
          return ym()(this);
        }
      }
      function dt(t) {
        return t <= 0
          ? () => kn
          : qe((n, e) => {
              let i = 0;
              n.subscribe(
                Le(e, (o) => {
                  ++i <= t && (e.next(o), t <= i && e.complete());
                })
              );
            });
      }
      function wa(...t) {
        const n = hs(t);
        return qe((e, i) => {
          (n ? ba(t, e, n) : ba(t, e)).subscribe(i);
        });
      }
      function ud(t) {
        return qe((n, e) => {
          let i = !1;
          n.subscribe(
            Le(
              e,
              (o) => {
                (i = !0), e.next(o);
              },
              () => {
                i || e.next(t), e.complete();
              }
            )
          );
        });
      }
      function Gx(t = g3) {
        return qe((n, e) => {
          let i = !1;
          n.subscribe(
            Le(
              e,
              (o) => {
                (i = !0), e.next(o);
              },
              () => (i ? e.complete() : e.error(t()))
            )
          );
        });
      }
      function g3() {
        return new dd();
      }
      function An(t, n) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            t ? Ue((o, r) => t(o, r, i)) : Ei,
            dt(1),
            e ? ud(n) : Gx(() => new dd())
          );
      }
      function $e(t, n, e) {
        const i = se(t) || n || e ? { next: t, error: n, complete: e } : t;
        return i
          ? qe((o, r) => {
              var s;
              null === (s = i.subscribe) || void 0 === s || s.call(i);
              let a = !0;
              o.subscribe(
                Le(
                  r,
                  (l) => {
                    var c;
                    null === (c = i.next) || void 0 === c || c.call(i, l),
                      r.next(l);
                  },
                  () => {
                    var l;
                    (a = !1),
                      null === (l = i.complete) || void 0 === l || l.call(i),
                      r.complete();
                  },
                  (l) => {
                    var c;
                    (a = !1),
                      null === (c = i.error) || void 0 === c || c.call(i, l),
                      r.error(l);
                  },
                  () => {
                    var l, c;
                    a &&
                      (null === (l = i.unsubscribe) ||
                        void 0 === l ||
                        l.call(i)),
                      null === (c = i.finalize) || void 0 === c || c.call(i);
                  }
                )
              );
            })
          : Ei;
      }
      function on(t) {
        return qe((n, e) => {
          let r,
            i = null,
            o = !1;
          (i = n.subscribe(
            Le(e, void 0, void 0, (s) => {
              (r = vt(t(s, on(t)(n)))),
                i ? (i.unsubscribe(), (i = null), r.subscribe(e)) : (o = !0);
            })
          )),
            o && (i.unsubscribe(), (i = null), r.subscribe(e));
        });
      }
      function vm(t) {
        return t <= 0
          ? () => kn
          : qe((n, e) => {
              let i = [];
              n.subscribe(
                Le(
                  e,
                  (o) => {
                    i.push(o), t < i.length && i.shift();
                  },
                  () => {
                    for (const o of i) e.next(o);
                    e.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function hd(t) {
        return qe((n, e) => {
          vt(t).subscribe(Le(e, () => e.complete(), ul)),
            !e.closed && n.subscribe(e);
        });
      }
      const ne = "primary",
        Da = Symbol("RouteTitle");
      class b3 {
        constructor(n) {
          this.params = n || {};
        }
        has(n) {
          return Object.prototype.hasOwnProperty.call(this.params, n);
        }
        get(n) {
          if (this.has(n)) {
            const e = this.params[n];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(n) {
          if (this.has(n)) {
            const e = this.params[n];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function Yr(t) {
        return new b3(t);
      }
      function C3(t, n, e) {
        const i = e.path.split("/");
        if (
          i.length > t.length ||
          ("full" === e.pathMatch && (n.hasChildren() || i.length < t.length))
        )
          return null;
        const o = {};
        for (let r = 0; r < i.length; r++) {
          const s = i[r],
            a = t[r];
          if (s.startsWith(":")) o[s.substring(1)] = a;
          else if (s !== a.path) return null;
        }
        return { consumed: t.slice(0, i.length), posParams: o };
      }
      function Yn(t, n) {
        const e = t ? Object.keys(t) : void 0,
          i = n ? Object.keys(n) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let o;
        for (let r = 0; r < e.length; r++)
          if (((o = e[r]), !Yx(t[o], n[o]))) return !1;
        return !0;
      }
      function Yx(t, n) {
        if (Array.isArray(t) && Array.isArray(n)) {
          if (t.length !== n.length) return !1;
          const e = [...t].sort(),
            i = [...n].sort();
          return e.every((o, r) => i[r] === o);
        }
        return t === n;
      }
      function Kx(t) {
        return t.length > 0 ? t[t.length - 1] : null;
      }
      function qi(t) {
        return (function s3(t) {
          return !!t && (t instanceof Fe || (se(t.lift) && se(t.subscribe)));
        })(t)
          ? t
          : Js(t)
          ? it(Promise.resolve(t))
          : H(t);
      }
      const D3 = {
          exact: function Xx(t, n, e) {
            if (
              !So(t.segments, n.segments) ||
              !fd(t.segments, n.segments, e) ||
              t.numberOfChildren !== n.numberOfChildren
            )
              return !1;
            for (const i in n.children)
              if (!t.children[i] || !Xx(t.children[i], n.children[i], e))
                return !1;
            return !0;
          },
          subset: Jx,
        },
        Zx = {
          exact: function x3(t, n) {
            return Yn(t, n);
          },
          subset: function E3(t, n) {
            return (
              Object.keys(n).length <= Object.keys(t).length &&
              Object.keys(n).every((e) => Yx(t[e], n[e]))
            );
          },
          ignored: () => !0,
        };
      function Qx(t, n, e) {
        return (
          D3[e.paths](t.root, n.root, e.matrixParams) &&
          Zx[e.queryParams](t.queryParams, n.queryParams) &&
          !("exact" === e.fragment && t.fragment !== n.fragment)
        );
      }
      function Jx(t, n, e) {
        return eE(t, n, n.segments, e);
      }
      function eE(t, n, e, i) {
        if (t.segments.length > e.length) {
          const o = t.segments.slice(0, e.length);
          return !(!So(o, e) || n.hasChildren() || !fd(o, e, i));
        }
        if (t.segments.length === e.length) {
          if (!So(t.segments, e) || !fd(t.segments, e, i)) return !1;
          for (const o in n.children)
            if (!t.children[o] || !Jx(t.children[o], n.children[o], i))
              return !1;
          return !0;
        }
        {
          const o = e.slice(0, t.segments.length),
            r = e.slice(t.segments.length);
          return (
            !!(So(t.segments, o) && fd(t.segments, o, i) && t.children[ne]) &&
            eE(t.children[ne], n, r, i)
          );
        }
      }
      function fd(t, n, e) {
        return n.every((i, o) => Zx[e](t[o].parameters, i.parameters));
      }
      class Kr {
        constructor(n = new De([], {}), e = {}, i = null) {
          (this.root = n), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Yr(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return T3.serialize(this);
        }
      }
      class De {
        constructor(n, e) {
          (this.segments = n),
            (this.children = e),
            (this.parent = null),
            Object.values(e).forEach((i) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return pd(this);
        }
      }
      class xa {
        constructor(n, e) {
          (this.path = n), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = Yr(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return iE(this);
        }
      }
      function So(t, n) {
        return t.length === n.length && t.every((e, i) => e.path === n[i].path);
      }
      let Ea = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: function () {
              return new bm();
            },
            providedIn: "root",
          }));
        }
        return t;
      })();
      class bm {
        parse(n) {
          const e = new B3(n);
          return new Kr(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(n) {
          const e = `/${Ma(n.root, !0)}`,
            i = (function O3(t) {
              const n = Object.keys(t)
                .map((e) => {
                  const i = t[e];
                  return Array.isArray(i)
                    ? i.map((o) => `${md(e)}=${md(o)}`).join("&")
                    : `${md(e)}=${md(i)}`;
                })
                .filter((e) => !!e);
              return n.length ? `?${n.join("&")}` : "";
            })(n.queryParams);
          return `${e}${i}${
            "string" == typeof n.fragment
              ? `#${(function I3(t) {
                  return encodeURI(t);
                })(n.fragment)}`
              : ""
          }`;
        }
      }
      const T3 = new bm();
      function pd(t) {
        return t.segments.map((n) => iE(n)).join("/");
      }
      function Ma(t, n) {
        if (!t.hasChildren()) return pd(t);
        if (n) {
          const e = t.children[ne] ? Ma(t.children[ne], !1) : "",
            i = [];
          return (
            Object.entries(t.children).forEach(([o, r]) => {
              o !== ne && i.push(`${o}:${Ma(r, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join("//")})` : e
          );
        }
        {
          const e = (function S3(t, n) {
            let e = [];
            return (
              Object.entries(t.children).forEach(([i, o]) => {
                i === ne && (e = e.concat(n(o, i)));
              }),
              Object.entries(t.children).forEach(([i, o]) => {
                i !== ne && (e = e.concat(n(o, i)));
              }),
              e
            );
          })(t, (i, o) =>
            o === ne ? [Ma(t.children[ne], !1)] : [`${o}:${Ma(i, !1)}`]
          );
          return 1 === Object.keys(t.children).length && null != t.children[ne]
            ? `${pd(t)}/${e[0]}`
            : `${pd(t)}/(${e.join("//")})`;
        }
      }
      function tE(t) {
        return encodeURIComponent(t)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function md(t) {
        return tE(t).replace(/%3B/gi, ";");
      }
      function Cm(t) {
        return tE(t)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function gd(t) {
        return decodeURIComponent(t);
      }
      function nE(t) {
        return gd(t.replace(/\+/g, "%20"));
      }
      function iE(t) {
        return `${Cm(t.path)}${(function A3(t) {
          return Object.keys(t)
            .map((n) => `;${Cm(n)}=${Cm(t[n])}`)
            .join("");
        })(t.parameters)}`;
      }
      const R3 = /^[^\/()?;#]+/;
      function wm(t) {
        const n = t.match(R3);
        return n ? n[0] : "";
      }
      const P3 = /^[^\/()?;=#]+/,
        F3 = /^[^=?&#]+/,
        L3 = /^[^&#]+/;
      class B3 {
        constructor(n) {
          (this.url = n), (this.remaining = n);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new De([], {})
              : new De([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const n = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(n);
            } while (this.consumeOptional("&"));
          return n;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const n = [];
          for (
            this.peekStartsWith("(") || n.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), n.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (n.length > 0 || Object.keys(e).length > 0) &&
              (i[ne] = new De(n, e)),
            i
          );
        }
        parseSegment() {
          const n = wm(this.remaining);
          if ("" === n && this.peekStartsWith(";")) throw new x(4009, !1);
          return this.capture(n), new xa(gd(n), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const n = {};
          for (; this.consumeOptional(";"); ) this.parseParam(n);
          return n;
        }
        parseParam(n) {
          const e = (function k3(t) {
            const n = t.match(P3);
            return n ? n[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const o = wm(this.remaining);
            o && ((i = o), this.capture(i));
          }
          n[gd(e)] = gd(i);
        }
        parseQueryParam(n) {
          const e = (function N3(t) {
            const n = t.match(F3);
            return n ? n[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const s = (function V3(t) {
              const n = t.match(L3);
              return n ? n[0] : "";
            })(this.remaining);
            s && ((i = s), this.capture(i));
          }
          const o = nE(e),
            r = nE(i);
          if (n.hasOwnProperty(o)) {
            let s = n[o];
            Array.isArray(s) || ((s = [s]), (n[o] = s)), s.push(r);
          } else n[o] = r;
        }
        parseParens(n) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = wm(this.remaining),
              o = this.remaining[i.length];
            if ("/" !== o && ")" !== o && ";" !== o) throw new x(4010, !1);
            let r;
            i.indexOf(":") > -1
              ? ((r = i.slice(0, i.indexOf(":"))),
                this.capture(r),
                this.capture(":"))
              : n && (r = ne);
            const s = this.parseChildren();
            (e[r] = 1 === Object.keys(s).length ? s[ne] : new De([], s)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(n) {
          return this.remaining.startsWith(n);
        }
        consumeOptional(n) {
          return (
            !!this.peekStartsWith(n) &&
            ((this.remaining = this.remaining.substring(n.length)), !0)
          );
        }
        capture(n) {
          if (!this.consumeOptional(n)) throw new x(4011, !1);
        }
      }
      function oE(t) {
        return t.segments.length > 0 ? new De([], { [ne]: t }) : t;
      }
      function rE(t) {
        const n = {};
        for (const i of Object.keys(t.children)) {
          const r = rE(t.children[i]);
          if (i === ne && 0 === r.segments.length && r.hasChildren())
            for (const [s, a] of Object.entries(r.children)) n[s] = a;
          else (r.segments.length > 0 || r.hasChildren()) && (n[i] = r);
        }
        return (function j3(t) {
          if (1 === t.numberOfChildren && t.children[ne]) {
            const n = t.children[ne];
            return new De(t.segments.concat(n.segments), n.children);
          }
          return t;
        })(new De(t.segments, n));
      }
      function To(t) {
        return t instanceof Kr;
      }
      function sE(t) {
        let n;
        const o = oE(
          (function e(r) {
            const s = {};
            for (const l of r.children) {
              const c = e(l);
              s[l.outlet] = c;
            }
            const a = new De(r.url, s);
            return r === t && (n = a), a;
          })(t.root)
        );
        return n ?? o;
      }
      function aE(t, n, e, i) {
        let o = t;
        for (; o.parent; ) o = o.parent;
        if (0 === n.length) return Dm(o, o, o, e, i);
        const r = (function U3(t) {
          if ("string" == typeof t[0] && 1 === t.length && "/" === t[0])
            return new cE(!0, 0, t);
          let n = 0,
            e = !1;
          const i = t.reduce((o, r, s) => {
            if ("object" == typeof r && null != r) {
              if (r.outlets) {
                const a = {};
                return (
                  Object.entries(r.outlets).forEach(([l, c]) => {
                    a[l] = "string" == typeof c ? c.split("/") : c;
                  }),
                  [...o, { outlets: a }]
                );
              }
              if (r.segmentPath) return [...o, r.segmentPath];
            }
            return "string" != typeof r
              ? [...o, r]
              : 0 === s
              ? (r.split("/").forEach((a, l) => {
                  (0 == l && "." === a) ||
                    (0 == l && "" === a
                      ? (e = !0)
                      : ".." === a
                      ? n++
                      : "" != a && o.push(a));
                }),
                o)
              : [...o, r];
          }, []);
          return new cE(e, n, i);
        })(n);
        if (r.toRoot()) return Dm(o, o, new De([], {}), e, i);
        const s = (function $3(t, n, e) {
            if (t.isAbsolute) return new yd(n, !0, 0);
            if (!e) return new yd(n, !1, NaN);
            if (null === e.parent) return new yd(e, !0, 0);
            const i = _d(t.commands[0]) ? 0 : 1;
            return (function z3(t, n, e) {
              let i = t,
                o = n,
                r = e;
              for (; r > o; ) {
                if (((r -= o), (i = i.parent), !i)) throw new x(4005, !1);
                o = i.segments.length;
              }
              return new yd(i, !1, o - r);
            })(e, e.segments.length - 1 + i, t.numberOfDoubleDots);
          })(r, o, t),
          a = s.processChildren
            ? Ta(s.segmentGroup, s.index, r.commands)
            : dE(s.segmentGroup, s.index, r.commands);
        return Dm(o, s.segmentGroup, a, e, i);
      }
      function _d(t) {
        return (
          "object" == typeof t && null != t && !t.outlets && !t.segmentPath
        );
      }
      function Sa(t) {
        return "object" == typeof t && null != t && t.outlets;
      }
      function Dm(t, n, e, i, o) {
        let s,
          r = {};
        i &&
          Object.entries(i).forEach(([l, c]) => {
            r[l] = Array.isArray(c) ? c.map((d) => `${d}`) : `${c}`;
          }),
          (s = t === n ? e : lE(t, n, e));
        const a = oE(rE(s));
        return new Kr(a, r, o);
      }
      function lE(t, n, e) {
        const i = {};
        return (
          Object.entries(t.children).forEach(([o, r]) => {
            i[o] = r === n ? e : lE(r, n, e);
          }),
          new De(t.segments, i)
        );
      }
      class cE {
        constructor(n, e, i) {
          if (
            ((this.isAbsolute = n),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            n && i.length > 0 && _d(i[0]))
          )
            throw new x(4003, !1);
          const o = i.find(Sa);
          if (o && o !== Kx(i)) throw new x(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class yd {
        constructor(n, e, i) {
          (this.segmentGroup = n), (this.processChildren = e), (this.index = i);
        }
      }
      function dE(t, n, e) {
        if (
          (t || (t = new De([], {})),
          0 === t.segments.length && t.hasChildren())
        )
          return Ta(t, n, e);
        const i = (function G3(t, n, e) {
            let i = 0,
              o = n;
            const r = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; o < t.segments.length; ) {
              if (i >= e.length) return r;
              const s = t.segments[o],
                a = e[i];
              if (Sa(a)) break;
              const l = `${a}`,
                c = i < e.length - 1 ? e[i + 1] : null;
              if (o > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!hE(l, c, s)) return r;
                i += 2;
              } else {
                if (!hE(l, {}, s)) return r;
                i++;
              }
              o++;
            }
            return { match: !0, pathIndex: o, commandIndex: i };
          })(t, n, e),
          o = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < t.segments.length) {
          const r = new De(t.segments.slice(0, i.pathIndex), {});
          return (
            (r.children[ne] = new De(
              t.segments.slice(i.pathIndex),
              t.children
            )),
            Ta(r, 0, o)
          );
        }
        return i.match && 0 === o.length
          ? new De(t.segments, {})
          : i.match && !t.hasChildren()
          ? xm(t, n, e)
          : i.match
          ? Ta(t, 0, o)
          : xm(t, n, e);
      }
      function Ta(t, n, e) {
        if (0 === e.length) return new De(t.segments, {});
        {
          const i = (function q3(t) {
              return Sa(t[0]) ? t[0].outlets : { [ne]: t };
            })(e),
            o = {};
          if (
            Object.keys(i).some((r) => r !== ne) &&
            t.children[ne] &&
            1 === t.numberOfChildren &&
            0 === t.children[ne].segments.length
          ) {
            const r = Ta(t.children[ne], n, e);
            return new De(t.segments, r.children);
          }
          return (
            Object.entries(i).forEach(([r, s]) => {
              "string" == typeof s && (s = [s]),
                null !== s && (o[r] = dE(t.children[r], n, s));
            }),
            Object.entries(t.children).forEach(([r, s]) => {
              void 0 === i[r] && (o[r] = s);
            }),
            new De(t.segments, o)
          );
        }
      }
      function xm(t, n, e) {
        const i = t.segments.slice(0, n);
        let o = 0;
        for (; o < e.length; ) {
          const r = e[o];
          if (Sa(r)) {
            const l = W3(r.outlets);
            return new De(i, l);
          }
          if (0 === o && _d(e[0])) {
            i.push(new xa(t.segments[n].path, uE(e[0]))), o++;
            continue;
          }
          const s = Sa(r) ? r.outlets[ne] : `${r}`,
            a = o < e.length - 1 ? e[o + 1] : null;
          s && a && _d(a)
            ? (i.push(new xa(s, uE(a))), (o += 2))
            : (i.push(new xa(s, {})), o++);
        }
        return new De(i, {});
      }
      function W3(t) {
        const n = {};
        return (
          Object.entries(t).forEach(([e, i]) => {
            "string" == typeof i && (i = [i]),
              null !== i && (n[e] = xm(new De([], {}), 0, i));
          }),
          n
        );
      }
      function uE(t) {
        const n = {};
        return Object.entries(t).forEach(([e, i]) => (n[e] = `${i}`)), n;
      }
      function hE(t, n, e) {
        return t == e.path && Yn(n, e.parameters);
      }
      const Ia = "imperative";
      class Kn {
        constructor(n, e) {
          (this.id = n), (this.url = e);
        }
      }
      class vd extends Kn {
        constructor(n, e, i = "imperative", o = null) {
          super(n, e),
            (this.type = 0),
            (this.navigationTrigger = i),
            (this.restoredState = o);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Gi extends Kn {
        constructor(n, e, i) {
          super(n, e), (this.urlAfterRedirects = i), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class Aa extends Kn {
        constructor(n, e, i, o) {
          super(n, e), (this.reason = i), (this.code = o), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Zr extends Kn {
        constructor(n, e, i, o) {
          super(n, e), (this.reason = i), (this.code = o), (this.type = 16);
        }
      }
      class bd extends Kn {
        constructor(n, e, i, o) {
          super(n, e), (this.error = i), (this.target = o), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class fE extends Kn {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Y3 extends Kn {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class K3 extends Kn {
        constructor(n, e, i, o, r) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.shouldActivate = r),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class Z3 extends Kn {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Q3 extends Kn {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class X3 {
        constructor(n) {
          (this.route = n), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class J3 {
        constructor(n) {
          (this.route = n), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class eH {
        constructor(n) {
          (this.snapshot = n), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class tH {
        constructor(n) {
          (this.snapshot = n), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class nH {
        constructor(n) {
          (this.snapshot = n), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class iH {
        constructor(n) {
          (this.snapshot = n), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class pE {
        constructor(n, e, i) {
          (this.routerEvent = n),
            (this.position = e),
            (this.anchor = i),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class Em {}
      class Mm {
        constructor(n) {
          this.url = n;
        }
      }
      class oH {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.injector = null),
            (this.children = new Oa()),
            (this.attachRef = null);
        }
      }
      let Oa = (() => {
        class t {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(e, i) {
            const o = this.getOrCreateContext(e);
            (o.outlet = i), this.contexts.set(e, o);
          }
          onChildOutletDestroyed(e) {
            const i = this.getContext(e);
            i && ((i.outlet = null), (i.attachRef = null));
          }
          onOutletDeactivated() {
            const e = this.contexts;
            return (this.contexts = new Map()), e;
          }
          onOutletReAttached(e) {
            this.contexts = e;
          }
          getOrCreateContext(e) {
            let i = this.getContext(e);
            return i || ((i = new oH()), this.contexts.set(e, i)), i;
          }
          getContext(e) {
            return this.contexts.get(e) || null;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      class mE {
        constructor(n) {
          this._root = n;
        }
        get root() {
          return this._root.value;
        }
        parent(n) {
          const e = this.pathFromRoot(n);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(n) {
          const e = Sm(n, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(n) {
          const e = Sm(n, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(n) {
          const e = Tm(n, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((o) => o.value)
                .filter((o) => o !== n);
        }
        pathFromRoot(n) {
          return Tm(n, this._root).map((e) => e.value);
        }
      }
      function Sm(t, n) {
        if (t === n.value) return n;
        for (const e of n.children) {
          const i = Sm(t, e);
          if (i) return i;
        }
        return null;
      }
      function Tm(t, n) {
        if (t === n.value) return [n];
        for (const e of n.children) {
          const i = Tm(t, e);
          if (i.length) return i.unshift(n), i;
        }
        return [];
      }
      class gi {
        constructor(n, e) {
          (this.value = n), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Qr(t) {
        const n = {};
        return t && t.children.forEach((e) => (n[e.value.outlet] = e)), n;
      }
      class gE extends mE {
        constructor(n, e) {
          super(n), (this.snapshot = e), Im(this, n);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function _E(t, n) {
        const e = (function rH(t, n) {
            const s = new Cd([], {}, {}, "", {}, ne, n, null, {});
            return new vE("", new gi(s, []));
          })(0, n),
          i = new Wt([new xa("", {})]),
          o = new Wt({}),
          r = new Wt({}),
          s = new Wt({}),
          a = new Wt(""),
          l = new _i(i, o, s, a, r, ne, n, e.root);
        return (l.snapshot = e.root), new gE(new gi(l, []), e);
      }
      class _i {
        constructor(n, e, i, o, r, s, a, l) {
          (this.urlSubject = n),
            (this.paramsSubject = e),
            (this.queryParamsSubject = i),
            (this.fragmentSubject = o),
            (this.dataSubject = r),
            (this.outlet = s),
            (this.component = a),
            (this._futureSnapshot = l),
            (this.title =
              this.dataSubject?.pipe(ae((c) => c[Da])) ?? H(void 0)),
            (this.url = n),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = o),
            (this.data = r);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(ae((n) => Yr(n)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(ae((n) => Yr(n)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function yE(t, n = "emptyOnly") {
        const e = t.pathFromRoot;
        let i = 0;
        if ("always" !== n)
          for (i = e.length - 1; i >= 1; ) {
            const o = e[i],
              r = e[i - 1];
            if (o.routeConfig && "" === o.routeConfig.path) i--;
            else {
              if (r.component) break;
              i--;
            }
          }
        return (function sH(t) {
          return t.reduce(
            (n, e) => ({
              params: { ...n.params, ...e.params },
              data: { ...n.data, ...e.data },
              resolve: {
                ...e.data,
                ...n.resolve,
                ...e.routeConfig?.data,
                ...e._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class Cd {
        get title() {
          return this.data?.[Da];
        }
        constructor(n, e, i, o, r, s, a, l, c) {
          (this.url = n),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = o),
            (this.data = r),
            (this.outlet = s),
            (this.component = a),
            (this.routeConfig = l),
            (this._resolve = c);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = Yr(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Yr(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class vE extends mE {
        constructor(n, e) {
          super(e), (this.url = n), Im(this, e);
        }
        toString() {
          return bE(this._root);
        }
      }
      function Im(t, n) {
        (n.value._routerState = t), n.children.forEach((e) => Im(t, e));
      }
      function bE(t) {
        const n =
          t.children.length > 0 ? ` { ${t.children.map(bE).join(", ")} } ` : "";
        return `${t.value}${n}`;
      }
      function Am(t) {
        if (t.snapshot) {
          const n = t.snapshot,
            e = t._futureSnapshot;
          (t.snapshot = e),
            Yn(n.queryParams, e.queryParams) ||
              t.queryParamsSubject.next(e.queryParams),
            n.fragment !== e.fragment && t.fragmentSubject.next(e.fragment),
            Yn(n.params, e.params) || t.paramsSubject.next(e.params),
            (function w3(t, n) {
              if (t.length !== n.length) return !1;
              for (let e = 0; e < t.length; ++e) if (!Yn(t[e], n[e])) return !1;
              return !0;
            })(n.url, e.url) || t.urlSubject.next(e.url),
            Yn(n.data, e.data) || t.dataSubject.next(e.data);
        } else
          (t.snapshot = t._futureSnapshot),
            t.dataSubject.next(t._futureSnapshot.data);
      }
      function Om(t, n) {
        const e =
          Yn(t.params, n.params) &&
          (function M3(t, n) {
            return (
              So(t, n) && t.every((e, i) => Yn(e.parameters, n[i].parameters))
            );
          })(t.url, n.url);
        return (
          e &&
          !(!t.parent != !n.parent) &&
          (!t.parent || Om(t.parent, n.parent))
        );
      }
      let Rm = (() => {
        class t {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = ne),
              (this.activateEvents = new V()),
              (this.deactivateEvents = new V()),
              (this.attachEvents = new V()),
              (this.detachEvents = new V()),
              (this.parentContexts = R(Oa)),
              (this.location = R(tn)),
              (this.changeDetector = R(Hr)),
              (this.environmentInjector = R(Xt)),
              (this.inputBinder = R(wd, { optional: !0 })),
              (this.supportsBindingToComponentInputs = !0);
          }
          get activatedComponentRef() {
            return this.activated;
          }
          ngOnChanges(e) {
            if (e.name) {
              const { firstChange: i, previousValue: o } = e.name;
              if (i) return;
              this.isTrackedInParentContexts(o) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(o)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name),
              this.inputBinder?.unsubscribeFromRouteData(this);
          }
          isTrackedInParentContexts(e) {
            return this.parentContexts.getContext(e)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const e = this.parentContexts.getContext(this.name);
            e?.route &&
              (e.attachRef
                ? this.attach(e.attachRef, e.route)
                : this.activateWith(e.route, e.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new x(4012, !1);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new x(4012, !1);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new x(4012, !1);
            this.location.detach();
            const e = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(e.instance),
              e
            );
          }
          attach(e, i) {
            (this.activated = e),
              (this._activatedRoute = i),
              this.location.insert(e.hostView),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.attachEvents.emit(e.instance);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, i) {
            if (this.isActivated) throw new x(4013, !1);
            this._activatedRoute = e;
            const o = this.location,
              s = e.snapshot.component,
              a = this.parentContexts.getOrCreateContext(this.name).children,
              l = new aH(e, a, o.injector);
            (this.activated = o.createComponent(s, {
              index: o.length,
              injector: l,
              environmentInjector: i ?? this.environmentInjector,
            })),
              this.changeDetector.markForCheck(),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.activateEvents.emit(this.activated.instance);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [["router-outlet"]],
            inputs: { name: "name" },
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
            standalone: !0,
            features: [Tt],
          }));
        }
        return t;
      })();
      class aH {
        constructor(n, e, i) {
          (this.route = n), (this.childContexts = e), (this.parent = i);
        }
        get(n, e) {
          return n === _i
            ? this.route
            : n === Oa
            ? this.childContexts
            : this.parent.get(n, e);
        }
      }
      const wd = new S("");
      let CE = (() => {
        class t {
          constructor() {
            this.outletDataSubscriptions = new Map();
          }
          bindActivatedRouteToOutletComponent(e) {
            this.unsubscribeFromRouteData(e), this.subscribeToRouteData(e);
          }
          unsubscribeFromRouteData(e) {
            this.outletDataSubscriptions.get(e)?.unsubscribe(),
              this.outletDataSubscriptions.delete(e);
          }
          subscribeToRouteData(e) {
            const { activatedRoute: i } = e,
              o = cd([i.queryParams, i.params, i.data])
                .pipe(
                  Vt(
                    ([r, s, a], l) => (
                      (a = { ...r, ...s, ...a }),
                      0 === l ? H(a) : Promise.resolve(a)
                    )
                  )
                )
                .subscribe((r) => {
                  if (
                    !e.isActivated ||
                    !e.activatedComponentRef ||
                    e.activatedRoute !== i ||
                    null === i.component
                  )
                    return void this.unsubscribeFromRouteData(e);
                  const s = (function uV(t) {
                    const n = de(t);
                    if (!n) return null;
                    const e = new Ys(n);
                    return {
                      get selector() {
                        return e.selector;
                      },
                      get type() {
                        return e.componentType;
                      },
                      get inputs() {
                        return e.inputs;
                      },
                      get outputs() {
                        return e.outputs;
                      },
                      get ngContentSelectors() {
                        return e.ngContentSelectors;
                      },
                      get isStandalone() {
                        return n.standalone;
                      },
                      get isSignal() {
                        return n.signals;
                      },
                    };
                  })(i.component);
                  if (s)
                    for (const { templateName: a } of s.inputs)
                      e.activatedComponentRef.setInput(a, r[a]);
                  else this.unsubscribeFromRouteData(e);
                });
            this.outletDataSubscriptions.set(e, o);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function Ra(t, n, e) {
        if (e && t.shouldReuseRoute(n.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = n.value;
          const o = (function cH(t, n, e) {
            return n.children.map((i) => {
              for (const o of e.children)
                if (t.shouldReuseRoute(i.value, o.value.snapshot))
                  return Ra(t, i, o);
              return Ra(t, i);
            });
          })(t, n, e);
          return new gi(i, o);
        }
        {
          if (t.shouldAttach(n.value)) {
            const r = t.retrieve(n.value);
            if (null !== r) {
              const s = r.route;
              return (
                (s.value._futureSnapshot = n.value),
                (s.children = n.children.map((a) => Ra(t, a))),
                s
              );
            }
          }
          const i = (function dH(t) {
              return new _i(
                new Wt(t.url),
                new Wt(t.params),
                new Wt(t.queryParams),
                new Wt(t.fragment),
                new Wt(t.data),
                t.outlet,
                t.component,
                t
              );
            })(n.value),
            o = n.children.map((r) => Ra(t, r));
          return new gi(i, o);
        }
      }
      const Pm = "ngNavigationCancelingError";
      function wE(t, n) {
        const { redirectTo: e, navigationBehaviorOptions: i } = To(n)
            ? { redirectTo: n, navigationBehaviorOptions: void 0 }
            : n,
          o = DE(!1, 0, n);
        return (o.url = e), (o.navigationBehaviorOptions = i), o;
      }
      function DE(t, n, e) {
        const i = new Error("NavigationCancelingError: " + (t || ""));
        return (i[Pm] = !0), (i.cancellationCode = n), e && (i.url = e), i;
      }
      function xE(t) {
        return t && t[Pm];
      }
      let EE = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["ng-component"]],
            standalone: !0,
            features: [r0],
            decls: 1,
            vars: 0,
            template: function (i, o) {
              1 & i && ge(0, "router-outlet");
            },
            dependencies: [Rm],
            encapsulation: 2,
          }));
        }
        return t;
      })();
      function km(t) {
        const n = t.children && t.children.map(km),
          e = n ? { ...t, children: n } : { ...t };
        return (
          !e.component &&
            !e.loadComponent &&
            (n || e.loadChildren) &&
            e.outlet &&
            e.outlet !== ne &&
            (e.component = EE),
          e
        );
      }
      function On(t) {
        return t.outlet || ne;
      }
      function Pa(t) {
        if (!t) return null;
        if (t.routeConfig?._injector) return t.routeConfig._injector;
        for (let n = t.parent; n; n = n.parent) {
          const e = n.routeConfig;
          if (e?._loadedInjector) return e._loadedInjector;
          if (e?._injector) return e._injector;
        }
        return null;
      }
      class yH {
        constructor(n, e, i, o, r) {
          (this.routeReuseStrategy = n),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = o),
            (this.inputBindingEnabled = r);
        }
        activate(n) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, n),
            Am(this.futureState.root),
            this.activateChildRoutes(e, i, n);
        }
        deactivateChildRoutes(n, e, i) {
          const o = Qr(e);
          n.children.forEach((r) => {
            const s = r.value.outlet;
            this.deactivateRoutes(r, o[s], i), delete o[s];
          }),
            Object.values(o).forEach((r) => {
              this.deactivateRouteAndItsChildren(r, i);
            });
        }
        deactivateRoutes(n, e, i) {
          const o = n.value,
            r = e ? e.value : null;
          if (o === r)
            if (o.component) {
              const s = i.getContext(o.outlet);
              s && this.deactivateChildRoutes(n, e, s.children);
            } else this.deactivateChildRoutes(n, e, i);
          else r && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(n, e) {
          n.value.component &&
          this.routeReuseStrategy.shouldDetach(n.value.snapshot)
            ? this.detachAndStoreRouteSubtree(n, e)
            : this.deactivateRouteAndOutlet(n, e);
        }
        detachAndStoreRouteSubtree(n, e) {
          const i = e.getContext(n.value.outlet),
            o = i && n.value.component ? i.children : e,
            r = Qr(n);
          for (const s of Object.keys(r))
            this.deactivateRouteAndItsChildren(r[s], o);
          if (i && i.outlet) {
            const s = i.outlet.detach(),
              a = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(n.value.snapshot, {
              componentRef: s,
              route: n,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(n, e) {
          const i = e.getContext(n.value.outlet),
            o = i && n.value.component ? i.children : e,
            r = Qr(n);
          for (const s of Object.keys(r))
            this.deactivateRouteAndItsChildren(r[s], o);
          i &&
            (i.outlet &&
              (i.outlet.deactivate(), i.children.onOutletDeactivated()),
            (i.attachRef = null),
            (i.route = null));
        }
        activateChildRoutes(n, e, i) {
          const o = Qr(e);
          n.children.forEach((r) => {
            this.activateRoutes(r, o[r.value.outlet], i),
              this.forwardEvent(new iH(r.value.snapshot));
          }),
            n.children.length && this.forwardEvent(new tH(n.value.snapshot));
        }
        activateRoutes(n, e, i) {
          const o = n.value,
            r = e ? e.value : null;
          if ((Am(o), o === r))
            if (o.component) {
              const s = i.getOrCreateContext(o.outlet);
              this.activateChildRoutes(n, e, s.children);
            } else this.activateChildRoutes(n, e, i);
          else if (o.component) {
            const s = i.getOrCreateContext(o.outlet);
            if (this.routeReuseStrategy.shouldAttach(o.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(o.snapshot);
              this.routeReuseStrategy.store(o.snapshot, null),
                s.children.onOutletReAttached(a.contexts),
                (s.attachRef = a.componentRef),
                (s.route = a.route.value),
                s.outlet && s.outlet.attach(a.componentRef, a.route.value),
                Am(a.route.value),
                this.activateChildRoutes(n, null, s.children);
            } else {
              const a = Pa(o.snapshot);
              (s.attachRef = null),
                (s.route = o),
                (s.injector = a),
                s.outlet && s.outlet.activateWith(o, s.injector),
                this.activateChildRoutes(n, null, s.children);
            }
          } else this.activateChildRoutes(n, null, i);
        }
      }
      class ME {
        constructor(n) {
          (this.path = n), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Dd {
        constructor(n, e) {
          (this.component = n), (this.route = e);
        }
      }
      function vH(t, n, e) {
        const i = t._root;
        return ka(i, n ? n._root : null, e, [i.value]);
      }
      function Xr(t, n) {
        const e = Symbol(),
          i = n.get(t, e);
        return i === e
          ? "function" != typeof t ||
            (function SA(t) {
              return null !== gl(t);
            })(t)
            ? n.get(t)
            : t
          : i;
      }
      function ka(
        t,
        n,
        e,
        i,
        o = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const r = Qr(n);
        return (
          t.children.forEach((s) => {
            (function CH(
              t,
              n,
              e,
              i,
              o = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const r = t.value,
                s = n ? n.value : null,
                a = e ? e.getContext(t.value.outlet) : null;
              if (s && r.routeConfig === s.routeConfig) {
                const l = (function wH(t, n, e) {
                  if ("function" == typeof e) return e(t, n);
                  switch (e) {
                    case "pathParamsChange":
                      return !So(t.url, n.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !So(t.url, n.url) || !Yn(t.queryParams, n.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !Om(t, n) || !Yn(t.queryParams, n.queryParams);
                    default:
                      return !Om(t, n);
                  }
                })(s, r, r.routeConfig.runGuardsAndResolvers);
                l
                  ? o.canActivateChecks.push(new ME(i))
                  : ((r.data = s.data), (r._resolvedData = s._resolvedData)),
                  ka(t, n, r.component ? (a ? a.children : null) : e, i, o),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    o.canDeactivateChecks.push(new Dd(a.outlet.component, s));
              } else
                s && Fa(n, a, o),
                  o.canActivateChecks.push(new ME(i)),
                  ka(t, null, r.component ? (a ? a.children : null) : e, i, o);
            })(s, r[s.value.outlet], e, i.concat([s.value]), o),
              delete r[s.value.outlet];
          }),
          Object.entries(r).forEach(([s, a]) => Fa(a, e.getContext(s), o)),
          o
        );
      }
      function Fa(t, n, e) {
        const i = Qr(t),
          o = t.value;
        Object.entries(i).forEach(([r, s]) => {
          Fa(s, o.component ? (n ? n.children.getContext(r) : null) : n, e);
        }),
          e.canDeactivateChecks.push(
            new Dd(
              o.component && n && n.outlet && n.outlet.isActivated
                ? n.outlet.component
                : null,
              o
            )
          );
      }
      function Na(t) {
        return "function" == typeof t;
      }
      function SE(t) {
        return t instanceof dd || "EmptyError" === t?.name;
      }
      const xd = Symbol("INITIAL_VALUE");
      function Jr() {
        return Vt((t) =>
          cd(t.map((n) => n.pipe(dt(1), wa(xd)))).pipe(
            ae((n) => {
              for (const e of n)
                if (!0 !== e) {
                  if (e === xd) return xd;
                  if (!1 === e || e instanceof Kr) return e;
                }
              return !0;
            }),
            Ue((n) => n !== xd),
            dt(1)
          )
        );
      }
      function TE(t) {
        return (function RI(...t) {
          return C_(t);
        })(
          $e((n) => {
            if (To(n)) throw wE(0, n);
          }),
          ae((n) => !0 === n)
        );
      }
      class Ed {
        constructor(n) {
          this.segmentGroup = n || null;
        }
      }
      class IE {
        constructor(n) {
          this.urlTree = n;
        }
      }
      function es(t) {
        return Wr(new Ed(t));
      }
      function AE(t) {
        return Wr(new IE(t));
      }
      class UH {
        constructor(n, e) {
          (this.urlSerializer = n), (this.urlTree = e);
        }
        noMatchError(n) {
          return new x(4002, !1);
        }
        lineralizeSegments(n, e) {
          let i = [],
            o = e.root;
          for (;;) {
            if (((i = i.concat(o.segments)), 0 === o.numberOfChildren))
              return H(i);
            if (o.numberOfChildren > 1 || !o.children[ne])
              return Wr(new x(4e3, !1));
            o = o.children[ne];
          }
        }
        applyRedirectCommands(n, e, i) {
          return this.applyRedirectCreateUrlTree(
            e,
            this.urlSerializer.parse(e),
            n,
            i
          );
        }
        applyRedirectCreateUrlTree(n, e, i, o) {
          const r = this.createSegmentGroup(n, e.root, i, o);
          return new Kr(
            r,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(n, e) {
          const i = {};
          return (
            Object.entries(n).forEach(([o, r]) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                i[o] = e[a];
              } else i[o] = r;
            }),
            i
          );
        }
        createSegmentGroup(n, e, i, o) {
          const r = this.createSegments(n, e.segments, i, o);
          let s = {};
          return (
            Object.entries(e.children).forEach(([a, l]) => {
              s[a] = this.createSegmentGroup(n, l, i, o);
            }),
            new De(r, s)
          );
        }
        createSegments(n, e, i, o) {
          return e.map((r) =>
            r.path.startsWith(":")
              ? this.findPosParam(n, r, o)
              : this.findOrReturn(r, i)
          );
        }
        findPosParam(n, e, i) {
          const o = i[e.path.substring(1)];
          if (!o) throw new x(4001, !1);
          return o;
        }
        findOrReturn(n, e) {
          let i = 0;
          for (const o of e) {
            if (o.path === n.path) return e.splice(i), o;
            i++;
          }
          return n;
        }
      }
      const Fm = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function $H(t, n, e, i, o) {
        const r = Nm(t, n, e);
        return r.matched
          ? ((i = (function hH(t, n) {
              return (
                t.providers &&
                  !t._injector &&
                  (t._injector = lp(t.providers, n, `Route: ${t.path}`)),
                t._injector ?? n
              );
            })(n, i)),
            (function BH(t, n, e, i) {
              const o = n.canMatch;
              return o && 0 !== o.length
                ? H(
                    o.map((s) => {
                      const a = Xr(s, t);
                      return qi(
                        (function TH(t) {
                          return t && Na(t.canMatch);
                        })(a)
                          ? a.canMatch(n, e)
                          : t.runInContext(() => a(n, e))
                      );
                    })
                  ).pipe(Jr(), TE())
                : H(!0);
            })(i, n, e).pipe(ae((s) => (!0 === s ? r : { ...Fm }))))
          : H(r);
      }
      function Nm(t, n, e) {
        if ("" === n.path)
          return "full" === n.pathMatch && (t.hasChildren() || e.length > 0)
            ? { ...Fm }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: e,
                parameters: {},
                positionalParamSegments: {},
              };
        const o = (n.matcher || C3)(e, t, n);
        if (!o) return { ...Fm };
        const r = {};
        Object.entries(o.posParams ?? {}).forEach(([a, l]) => {
          r[a] = l.path;
        });
        const s =
          o.consumed.length > 0
            ? { ...r, ...o.consumed[o.consumed.length - 1].parameters }
            : r;
        return {
          matched: !0,
          consumedSegments: o.consumed,
          remainingSegments: e.slice(o.consumed.length),
          parameters: s,
          positionalParamSegments: o.posParams ?? {},
        };
      }
      function OE(t, n, e, i) {
        return e.length > 0 &&
          (function GH(t, n, e) {
            return e.some((i) => Md(t, n, i) && On(i) !== ne);
          })(t, e, i)
          ? {
              segmentGroup: new De(n, qH(i, new De(e, t.children))),
              slicedSegments: [],
            }
          : 0 === e.length &&
            (function WH(t, n, e) {
              return e.some((i) => Md(t, n, i));
            })(t, e, i)
          ? {
              segmentGroup: new De(t.segments, zH(t, 0, e, i, t.children)),
              slicedSegments: e,
            }
          : { segmentGroup: new De(t.segments, t.children), slicedSegments: e };
      }
      function zH(t, n, e, i, o) {
        const r = {};
        for (const s of i)
          if (Md(t, e, s) && !o[On(s)]) {
            const a = new De([], {});
            r[On(s)] = a;
          }
        return { ...o, ...r };
      }
      function qH(t, n) {
        const e = {};
        e[ne] = n;
        for (const i of t)
          if ("" === i.path && On(i) !== ne) {
            const o = new De([], {});
            e[On(i)] = o;
          }
        return e;
      }
      function Md(t, n, e) {
        return (
          (!(t.hasChildren() || n.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      class QH {
        constructor(n, e, i, o, r, s, a) {
          (this.injector = n),
            (this.configLoader = e),
            (this.rootComponentType = i),
            (this.config = o),
            (this.urlTree = r),
            (this.paramsInheritanceStrategy = s),
            (this.urlSerializer = a),
            (this.allowRedirects = !0),
            (this.applyRedirects = new UH(this.urlSerializer, this.urlTree));
        }
        noMatchError(n) {
          return new x(4002, !1);
        }
        recognize() {
          const n = OE(this.urlTree.root, [], [], this.config).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            n,
            ne
          ).pipe(
            on((e) => {
              if (e instanceof IE)
                return (
                  (this.allowRedirects = !1),
                  (this.urlTree = e.urlTree),
                  this.match(e.urlTree)
                );
              throw e instanceof Ed ? this.noMatchError(e) : e;
            }),
            ae((e) => {
              const i = new Cd(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  ne,
                  this.rootComponentType,
                  null,
                  {}
                ),
                o = new gi(i, e),
                r = new vE("", o),
                s = (function H3(t, n, e = null, i = null) {
                  return aE(sE(t), n, e, i);
                })(i, [], this.urlTree.queryParams, this.urlTree.fragment);
              return (
                (s.queryParams = this.urlTree.queryParams),
                (r.url = this.urlSerializer.serialize(s)),
                this.inheritParamsAndData(r._root),
                { state: r, tree: s }
              );
            })
          );
        }
        match(n) {
          return this.processSegmentGroup(
            this.injector,
            this.config,
            n.root,
            ne
          ).pipe(
            on((i) => {
              throw i instanceof Ed ? this.noMatchError(i) : i;
            })
          );
        }
        inheritParamsAndData(n) {
          const e = n.value,
            i = yE(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            n.children.forEach((o) => this.inheritParamsAndData(o));
        }
        processSegmentGroup(n, e, i, o) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.processChildren(n, e, i)
            : this.processSegment(n, e, i, i.segments, o, !0);
        }
        processChildren(n, e, i) {
          const o = [];
          for (const r of Object.keys(i.children))
            "primary" === r ? o.unshift(r) : o.push(r);
          return it(o).pipe(
            zr((r) => {
              const s = i.children[r],
                a = (function gH(t, n) {
                  const e = t.filter((i) => On(i) === n);
                  return e.push(...t.filter((i) => On(i) !== n)), e;
                })(e, r);
              return this.processSegmentGroup(n, a, s, r);
            }),
            (function y3(t, n) {
              return qe(
                (function _3(t, n, e, i, o) {
                  return (r, s) => {
                    let a = e,
                      l = n,
                      c = 0;
                    r.subscribe(
                      Le(
                        s,
                        (d) => {
                          const u = c++;
                          (l = a ? t(l, d, u) : ((a = !0), d)), i && s.next(l);
                        },
                        o &&
                          (() => {
                            a && s.next(l), s.complete();
                          })
                      )
                    );
                  };
                })(t, n, arguments.length >= 2, !0)
              );
            })((r, s) => (r.push(...s), r)),
            ud(null),
            (function v3(t, n) {
              const e = arguments.length >= 2;
              return (i) =>
                i.pipe(
                  t ? Ue((o, r) => t(o, r, i)) : Ei,
                  vm(1),
                  e ? ud(n) : Gx(() => new dd())
                );
            })(),
            nt((r) => {
              if (null === r) return es(i);
              const s = RE(r);
              return (
                (function XH(t) {
                  t.sort((n, e) =>
                    n.value.outlet === ne
                      ? -1
                      : e.value.outlet === ne
                      ? 1
                      : n.value.outlet.localeCompare(e.value.outlet)
                  );
                })(s),
                H(s)
              );
            })
          );
        }
        processSegment(n, e, i, o, r, s) {
          return it(e).pipe(
            zr((a) =>
              this.processSegmentAgainstRoute(
                a._injector ?? n,
                e,
                a,
                i,
                o,
                r,
                s
              ).pipe(
                on((l) => {
                  if (l instanceof Ed) return H(null);
                  throw l;
                })
              )
            ),
            An((a) => !!a),
            on((a) => {
              if (SE(a))
                return (function KH(t, n, e) {
                  return 0 === n.length && !t.children[e];
                })(i, o, r)
                  ? H([])
                  : es(i);
              throw a;
            })
          );
        }
        processSegmentAgainstRoute(n, e, i, o, r, s, a) {
          return (function YH(t, n, e, i) {
            return (
              !!(On(t) === i || (i !== ne && Md(n, e, t))) &&
              ("**" === t.path || Nm(n, t, e).matched)
            );
          })(i, o, r, s)
            ? void 0 === i.redirectTo
              ? this.matchSegmentAgainstRoute(n, o, i, r, s, a)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(n, o, e, i, r, s)
              : es(o)
            : es(o);
        }
        expandSegmentAgainstRouteUsingRedirect(n, e, i, o, r, s) {
          return "**" === o.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(n, i, o, s)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                n,
                e,
                i,
                o,
                r,
                s
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(n, e, i, o) {
          const r = this.applyRedirects.applyRedirectCommands(
            [],
            i.redirectTo,
            {}
          );
          return i.redirectTo.startsWith("/")
            ? AE(r)
            : this.applyRedirects.lineralizeSegments(i, r).pipe(
                nt((s) => {
                  const a = new De(s, {});
                  return this.processSegment(n, e, a, s, o, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(n, e, i, o, r, s) {
          const {
            matched: a,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: d,
          } = Nm(e, o, r);
          if (!a) return es(e);
          const u = this.applyRedirects.applyRedirectCommands(
            l,
            o.redirectTo,
            d
          );
          return o.redirectTo.startsWith("/")
            ? AE(u)
            : this.applyRedirects
                .lineralizeSegments(o, u)
                .pipe(
                  nt((h) => this.processSegment(n, i, e, h.concat(c), s, !1))
                );
        }
        matchSegmentAgainstRoute(n, e, i, o, r, s) {
          let a;
          if ("**" === i.path) {
            const l = o.length > 0 ? Kx(o).parameters : {};
            (a = H({
              snapshot: new Cd(
                o,
                l,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                PE(i),
                On(i),
                i.component ?? i._loadedComponent ?? null,
                i,
                kE(i)
              ),
              consumedSegments: [],
              remainingSegments: [],
            })),
              (e.children = {});
          } else
            a = $H(e, i, o, n).pipe(
              ae(
                ({
                  matched: l,
                  consumedSegments: c,
                  remainingSegments: d,
                  parameters: u,
                }) =>
                  l
                    ? {
                        snapshot: new Cd(
                          c,
                          u,
                          Object.freeze({ ...this.urlTree.queryParams }),
                          this.urlTree.fragment,
                          PE(i),
                          On(i),
                          i.component ?? i._loadedComponent ?? null,
                          i,
                          kE(i)
                        ),
                        consumedSegments: c,
                        remainingSegments: d,
                      }
                    : null
              )
            );
          return a.pipe(
            Vt((l) =>
              null === l
                ? es(e)
                : this.getChildConfig((n = i._injector ?? n), i, o).pipe(
                    Vt(({ routes: c }) => {
                      const d = i._loadedInjector ?? n,
                        {
                          snapshot: u,
                          consumedSegments: h,
                          remainingSegments: f,
                        } = l,
                        { segmentGroup: p, slicedSegments: m } = OE(e, h, f, c);
                      if (0 === m.length && p.hasChildren())
                        return this.processChildren(d, c, p).pipe(
                          ae((D) => (null === D ? null : [new gi(u, D)]))
                        );
                      if (0 === c.length && 0 === m.length)
                        return H([new gi(u, [])]);
                      const v = On(i) === r;
                      return this.processSegment(
                        d,
                        c,
                        p,
                        m,
                        v ? ne : r,
                        !0
                      ).pipe(ae((D) => [new gi(u, D)]));
                    })
                  )
            )
          );
        }
        getChildConfig(n, e, i) {
          return e.children
            ? H({ routes: e.children, injector: n })
            : e.loadChildren
            ? void 0 !== e._loadedRoutes
              ? H({ routes: e._loadedRoutes, injector: e._loadedInjector })
              : (function VH(t, n, e, i) {
                  const o = n.canLoad;
                  return void 0 === o || 0 === o.length
                    ? H(!0)
                    : H(
                        o.map((s) => {
                          const a = Xr(s, t);
                          return qi(
                            (function xH(t) {
                              return t && Na(t.canLoad);
                            })(a)
                              ? a.canLoad(n, e)
                              : t.runInContext(() => a(n, e))
                          );
                        })
                      ).pipe(Jr(), TE());
                })(n, e, i).pipe(
                  nt((o) =>
                    o
                      ? this.configLoader.loadChildren(n, e).pipe(
                          $e((r) => {
                            (e._loadedRoutes = r.routes),
                              (e._loadedInjector = r.injector);
                          })
                        )
                      : (function HH(t) {
                          return Wr(DE(!1, 3));
                        })()
                  )
                )
            : H({ routes: [], injector: n });
        }
      }
      function JH(t) {
        const n = t.value.routeConfig;
        return n && "" === n.path;
      }
      function RE(t) {
        const n = [],
          e = new Set();
        for (const i of t) {
          if (!JH(i)) {
            n.push(i);
            continue;
          }
          const o = n.find((r) => i.value.routeConfig === r.value.routeConfig);
          void 0 !== o ? (o.children.push(...i.children), e.add(o)) : n.push(i);
        }
        for (const i of e) {
          const o = RE(i.children);
          n.push(new gi(i.value, o));
        }
        return n.filter((i) => !e.has(i));
      }
      function PE(t) {
        return t.data || {};
      }
      function kE(t) {
        return t.resolve || {};
      }
      function tU(t, n) {
        return nt((e) => {
          const {
            targetSnapshot: i,
            guards: { canActivateChecks: o },
          } = e;
          if (!o.length) return H(e);
          let r = 0;
          return it(o).pipe(
            zr((s) =>
              (function nU(t, n, e, i) {
                const o = t.routeConfig,
                  r = t._resolve;
                return (
                  void 0 !== o?.title && !FE(o) && (r[Da] = o.title),
                  (function iU(t, n, e, i) {
                    const o = (function oU(t) {
                      return [
                        ...Object.keys(t),
                        ...Object.getOwnPropertySymbols(t),
                      ];
                    })(t);
                    if (0 === o.length) return H({});
                    const r = {};
                    return it(o).pipe(
                      nt((s) =>
                        (function rU(t, n, e, i) {
                          const o = Pa(n) ?? i,
                            r = Xr(t, o);
                          return qi(
                            r.resolve
                              ? r.resolve(n, e)
                              : o.runInContext(() => r(n, e))
                          );
                        })(t[s], n, e, i).pipe(
                          An(),
                          $e((a) => {
                            r[s] = a;
                          })
                        )
                      ),
                      vm(1),
                      (function Wx(t) {
                        return ae(() => t);
                      })(r),
                      on((s) => (SE(s) ? kn : Wr(s)))
                    );
                  })(r, t, n, i).pipe(
                    ae(
                      (s) => (
                        (t._resolvedData = s),
                        (t.data = yE(t, e).resolve),
                        o && FE(o) && (t.data[Da] = o.title),
                        null
                      )
                    )
                  )
                );
              })(s.route, i, t, n)
            ),
            $e(() => r++),
            vm(1),
            nt((s) => (r === o.length ? H(e) : kn))
          );
        });
      }
      function FE(t) {
        return "string" == typeof t.title || null === t.title;
      }
      function Lm(t) {
        return Vt((n) => {
          const e = t(n);
          return e ? it(e).pipe(ae(() => n)) : H(n);
        });
      }
      const ts = new S("ROUTES");
      let Vm = (() => {
        class t {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = R(X0));
          }
          loadComponent(e) {
            if (this.componentLoaders.get(e))
              return this.componentLoaders.get(e);
            if (e._loadedComponent) return H(e._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(e);
            const i = qi(e.loadComponent()).pipe(
                ae(NE),
                $e((r) => {
                  this.onLoadEndListener && this.onLoadEndListener(e),
                    (e._loadedComponent = r);
                }),
                _a(() => {
                  this.componentLoaders.delete(e);
                })
              ),
              o = new qx(i, () => new me()).pipe(ym());
            return this.componentLoaders.set(e, o), o;
          }
          loadChildren(e, i) {
            if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
            if (i._loadedRoutes)
              return H({
                routes: i._loadedRoutes,
                injector: i._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(i);
            const r = (function sU(t, n, e, i) {
                return qi(t.loadChildren()).pipe(
                  ae(NE),
                  nt((o) =>
                    o instanceof n0 || Array.isArray(o)
                      ? H(o)
                      : it(n.compileModuleAsync(o))
                  ),
                  ae((o) => {
                    i && i(t);
                    let r,
                      s,
                      a = !1;
                    return (
                      Array.isArray(o)
                        ? ((s = o), !0)
                        : ((r = o.create(e).injector),
                          (s = r
                            .get(ts, [], { optional: !0, self: !0 })
                            .flat())),
                      { routes: s.map(km), injector: r }
                    );
                  })
                );
              })(i, this.compiler, e, this.onLoadEndListener).pipe(
                _a(() => {
                  this.childrenLoaders.delete(i);
                })
              ),
              s = new qx(r, () => new me()).pipe(ym());
            return this.childrenLoaders.set(i, s), s;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function NE(t) {
        return (function aU(t) {
          return t && "object" == typeof t && "default" in t;
        })(t)
          ? t.default
          : t;
      }
      let Sd = (() => {
        class t {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.currentTransition = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new me()),
              (this.transitionAbortSubject = new me()),
              (this.configLoader = R(Vm)),
              (this.environmentInjector = R(Xt)),
              (this.urlSerializer = R(Ea)),
              (this.rootContexts = R(Oa)),
              (this.inputBindingEnabled = null !== R(wd, { optional: !0 })),
              (this.navigationId = 0),
              (this.afterPreactivation = () => H(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = (o) =>
                this.events.next(new J3(o))),
              (this.configLoader.onLoadStartListener = (o) =>
                this.events.next(new X3(o)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(e) {
            const i = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...e, id: i });
          }
          setupNavigations(e, i, o) {
            return (
              (this.transitions = new Wt({
                id: 0,
                currentUrlTree: i,
                currentRawUrl: i,
                currentBrowserUrl: i,
                extractedUrl: e.urlHandlingStrategy.extract(i),
                urlAfterRedirects: e.urlHandlingStrategy.extract(i),
                rawUrl: i,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: Ia,
                restoredState: null,
                currentSnapshot: o.snapshot,
                targetSnapshot: null,
                currentRouterState: o,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                Ue((r) => 0 !== r.id),
                ae((r) => ({
                  ...r,
                  extractedUrl: e.urlHandlingStrategy.extract(r.rawUrl),
                })),
                Vt((r) => {
                  this.currentTransition = r;
                  let s = !1,
                    a = !1;
                  return H(r).pipe(
                    $e((l) => {
                      this.currentNavigation = {
                        id: l.id,
                        initialUrl: l.rawUrl,
                        extractedUrl: l.extractedUrl,
                        trigger: l.source,
                        extras: l.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    Vt((l) => {
                      const c = l.currentBrowserUrl.toString(),
                        d =
                          !e.navigated ||
                          l.extractedUrl.toString() !== c ||
                          c !== l.currentUrlTree.toString();
                      if (
                        !d &&
                        "reload" !==
                          (l.extras.onSameUrlNavigation ??
                            e.onSameUrlNavigation)
                      ) {
                        const h = "";
                        return (
                          this.events.next(
                            new Zr(
                              l.id,
                              this.urlSerializer.serialize(l.rawUrl),
                              h,
                              0
                            )
                          ),
                          l.resolve(null),
                          kn
                        );
                      }
                      if (e.urlHandlingStrategy.shouldProcessUrl(l.rawUrl))
                        return H(l).pipe(
                          Vt((h) => {
                            const f = this.transitions?.getValue();
                            return (
                              this.events.next(
                                new vd(
                                  h.id,
                                  this.urlSerializer.serialize(h.extractedUrl),
                                  h.source,
                                  h.restoredState
                                )
                              ),
                              f !== this.transitions?.getValue()
                                ? kn
                                : Promise.resolve(h)
                            );
                          }),
                          (function eU(t, n, e, i, o, r) {
                            return nt((s) =>
                              (function ZH(t, n, e, i, o, r, s = "emptyOnly") {
                                return new QH(t, n, e, i, o, s, r).recognize();
                              })(t, n, e, i, s.extractedUrl, o, r).pipe(
                                ae(({ state: a, tree: l }) => ({
                                  ...s,
                                  targetSnapshot: a,
                                  urlAfterRedirects: l,
                                }))
                              )
                            );
                          })(
                            this.environmentInjector,
                            this.configLoader,
                            this.rootComponentType,
                            e.config,
                            this.urlSerializer,
                            e.paramsInheritanceStrategy
                          ),
                          $e((h) => {
                            (r.targetSnapshot = h.targetSnapshot),
                              (r.urlAfterRedirects = h.urlAfterRedirects),
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: h.urlAfterRedirects,
                              });
                            const f = new fE(
                              h.id,
                              this.urlSerializer.serialize(h.extractedUrl),
                              this.urlSerializer.serialize(h.urlAfterRedirects),
                              h.targetSnapshot
                            );
                            this.events.next(f);
                          })
                        );
                      if (
                        d &&
                        e.urlHandlingStrategy.shouldProcessUrl(l.currentRawUrl)
                      ) {
                        const {
                            id: h,
                            extractedUrl: f,
                            source: p,
                            restoredState: m,
                            extras: v,
                          } = l,
                          D = new vd(h, this.urlSerializer.serialize(f), p, m);
                        this.events.next(D);
                        const b = _E(0, this.rootComponentType).snapshot;
                        return (
                          (this.currentTransition = r =
                            {
                              ...l,
                              targetSnapshot: b,
                              urlAfterRedirects: f,
                              extras: {
                                ...v,
                                skipLocationChange: !1,
                                replaceUrl: !1,
                              },
                            }),
                          H(r)
                        );
                      }
                      {
                        const h = "";
                        return (
                          this.events.next(
                            new Zr(
                              l.id,
                              this.urlSerializer.serialize(l.extractedUrl),
                              h,
                              1
                            )
                          ),
                          l.resolve(null),
                          kn
                        );
                      }
                    }),
                    $e((l) => {
                      const c = new Y3(
                        l.id,
                        this.urlSerializer.serialize(l.extractedUrl),
                        this.urlSerializer.serialize(l.urlAfterRedirects),
                        l.targetSnapshot
                      );
                      this.events.next(c);
                    }),
                    ae(
                      (l) => (
                        (this.currentTransition = r =
                          {
                            ...l,
                            guards: vH(
                              l.targetSnapshot,
                              l.currentSnapshot,
                              this.rootContexts
                            ),
                          }),
                        r
                      )
                    ),
                    (function AH(t, n) {
                      return nt((e) => {
                        const {
                          targetSnapshot: i,
                          currentSnapshot: o,
                          guards: {
                            canActivateChecks: r,
                            canDeactivateChecks: s,
                          },
                        } = e;
                        return 0 === s.length && 0 === r.length
                          ? H({ ...e, guardsResult: !0 })
                          : (function OH(t, n, e, i) {
                              return it(t).pipe(
                                nt((o) =>
                                  (function LH(t, n, e, i, o) {
                                    const r =
                                      n && n.routeConfig
                                        ? n.routeConfig.canDeactivate
                                        : null;
                                    return r && 0 !== r.length
                                      ? H(
                                          r.map((a) => {
                                            const l = Pa(n) ?? o,
                                              c = Xr(a, l);
                                            return qi(
                                              (function SH(t) {
                                                return t && Na(t.canDeactivate);
                                              })(c)
                                                ? c.canDeactivate(t, n, e, i)
                                                : l.runInContext(() =>
                                                    c(t, n, e, i)
                                                  )
                                            ).pipe(An());
                                          })
                                        ).pipe(Jr())
                                      : H(!0);
                                  })(o.component, o.route, e, n, i)
                                ),
                                An((o) => !0 !== o, !0)
                              );
                            })(s, i, o, t).pipe(
                              nt((a) =>
                                a &&
                                (function DH(t) {
                                  return "boolean" == typeof t;
                                })(a)
                                  ? (function RH(t, n, e, i) {
                                      return it(n).pipe(
                                        zr((o) =>
                                          ba(
                                            (function kH(t, n) {
                                              return (
                                                null !== t && n && n(new eH(t)),
                                                H(!0)
                                              );
                                            })(o.route.parent, i),
                                            (function PH(t, n) {
                                              return (
                                                null !== t && n && n(new nH(t)),
                                                H(!0)
                                              );
                                            })(o.route, i),
                                            (function NH(t, n, e) {
                                              const i = n[n.length - 1],
                                                r = n
                                                  .slice(0, n.length - 1)
                                                  .reverse()
                                                  .map((s) =>
                                                    (function bH(t) {
                                                      const n = t.routeConfig
                                                        ? t.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return n && 0 !== n.length
                                                        ? { node: t, guards: n }
                                                        : null;
                                                    })(s)
                                                  )
                                                  .filter((s) => null !== s)
                                                  .map((s) =>
                                                    Ca(() =>
                                                      H(
                                                        s.guards.map((l) => {
                                                          const c =
                                                              Pa(s.node) ?? e,
                                                            d = Xr(l, c);
                                                          return qi(
                                                            (function MH(t) {
                                                              return (
                                                                t &&
                                                                Na(
                                                                  t.canActivateChild
                                                                )
                                                              );
                                                            })(d)
                                                              ? d.canActivateChild(
                                                                  i,
                                                                  t
                                                                )
                                                              : c.runInContext(
                                                                  () => d(i, t)
                                                                )
                                                          ).pipe(An());
                                                        })
                                                      ).pipe(Jr())
                                                    )
                                                  );
                                              return H(r).pipe(Jr());
                                            })(t, o.path, e),
                                            (function FH(t, n, e) {
                                              const i = n.routeConfig
                                                ? n.routeConfig.canActivate
                                                : null;
                                              if (!i || 0 === i.length)
                                                return H(!0);
                                              const o = i.map((r) =>
                                                Ca(() => {
                                                  const s = Pa(n) ?? e,
                                                    a = Xr(r, s);
                                                  return qi(
                                                    (function EH(t) {
                                                      return (
                                                        t && Na(t.canActivate)
                                                      );
                                                    })(a)
                                                      ? a.canActivate(n, t)
                                                      : s.runInContext(() =>
                                                          a(n, t)
                                                        )
                                                  ).pipe(An());
                                                })
                                              );
                                              return H(o).pipe(Jr());
                                            })(t, o.route, e)
                                          )
                                        ),
                                        An((o) => !0 !== o, !0)
                                      );
                                    })(i, r, t, n)
                                  : H(a)
                              ),
                              ae((a) => ({ ...e, guardsResult: a }))
                            );
                      });
                    })(this.environmentInjector, (l) => this.events.next(l)),
                    $e((l) => {
                      if (
                        ((r.guardsResult = l.guardsResult), To(l.guardsResult))
                      )
                        throw wE(0, l.guardsResult);
                      const c = new K3(
                        l.id,
                        this.urlSerializer.serialize(l.extractedUrl),
                        this.urlSerializer.serialize(l.urlAfterRedirects),
                        l.targetSnapshot,
                        !!l.guardsResult
                      );
                      this.events.next(c);
                    }),
                    Ue(
                      (l) =>
                        !!l.guardsResult ||
                        (this.cancelNavigationTransition(l, "", 3), !1)
                    ),
                    Lm((l) => {
                      if (l.guards.canActivateChecks.length)
                        return H(l).pipe(
                          $e((c) => {
                            const d = new Z3(
                              c.id,
                              this.urlSerializer.serialize(c.extractedUrl),
                              this.urlSerializer.serialize(c.urlAfterRedirects),
                              c.targetSnapshot
                            );
                            this.events.next(d);
                          }),
                          Vt((c) => {
                            let d = !1;
                            return H(c).pipe(
                              tU(
                                e.paramsInheritanceStrategy,
                                this.environmentInjector
                              ),
                              $e({
                                next: () => (d = !0),
                                complete: () => {
                                  d ||
                                    this.cancelNavigationTransition(c, "", 2);
                                },
                              })
                            );
                          }),
                          $e((c) => {
                            const d = new Q3(
                              c.id,
                              this.urlSerializer.serialize(c.extractedUrl),
                              this.urlSerializer.serialize(c.urlAfterRedirects),
                              c.targetSnapshot
                            );
                            this.events.next(d);
                          })
                        );
                    }),
                    Lm((l) => {
                      const c = (d) => {
                        const u = [];
                        d.routeConfig?.loadComponent &&
                          !d.routeConfig._loadedComponent &&
                          u.push(
                            this.configLoader.loadComponent(d.routeConfig).pipe(
                              $e((h) => {
                                d.component = h;
                              }),
                              ae(() => {})
                            )
                          );
                        for (const h of d.children) u.push(...c(h));
                        return u;
                      };
                      return cd(c(l.targetSnapshot.root)).pipe(ud(), dt(1));
                    }),
                    Lm(() => this.afterPreactivation()),
                    ae((l) => {
                      const c = (function lH(t, n, e) {
                        const i = Ra(t, n._root, e ? e._root : void 0);
                        return new gE(i, n);
                      })(
                        e.routeReuseStrategy,
                        l.targetSnapshot,
                        l.currentRouterState
                      );
                      return (
                        (this.currentTransition = r =
                          { ...l, targetRouterState: c }),
                        r
                      );
                    }),
                    $e(() => {
                      this.events.next(new Em());
                    }),
                    ((t, n, e, i) =>
                      ae(
                        (o) => (
                          new yH(
                            n,
                            o.targetRouterState,
                            o.currentRouterState,
                            e,
                            i
                          ).activate(t),
                          o
                        )
                      ))(
                      this.rootContexts,
                      e.routeReuseStrategy,
                      (l) => this.events.next(l),
                      this.inputBindingEnabled
                    ),
                    dt(1),
                    $e({
                      next: (l) => {
                        (s = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          this.events.next(
                            new Gi(
                              l.id,
                              this.urlSerializer.serialize(l.extractedUrl),
                              this.urlSerializer.serialize(l.urlAfterRedirects)
                            )
                          ),
                          e.titleStrategy?.updateTitle(
                            l.targetRouterState.snapshot
                          ),
                          l.resolve(!0);
                      },
                      complete: () => {
                        s = !0;
                      },
                    }),
                    hd(
                      this.transitionAbortSubject.pipe(
                        $e((l) => {
                          throw l;
                        })
                      )
                    ),
                    _a(() => {
                      s || a || this.cancelNavigationTransition(r, "", 1),
                        this.currentNavigation?.id === r.id &&
                          (this.currentNavigation = null);
                    }),
                    on((l) => {
                      if (((a = !0), xE(l)))
                        this.events.next(
                          new Aa(
                            r.id,
                            this.urlSerializer.serialize(r.extractedUrl),
                            l.message,
                            l.cancellationCode
                          )
                        ),
                          (function uH(t) {
                            return xE(t) && To(t.url);
                          })(l)
                            ? this.events.next(new Mm(l.url))
                            : r.resolve(!1);
                      else {
                        this.events.next(
                          new bd(
                            r.id,
                            this.urlSerializer.serialize(r.extractedUrl),
                            l,
                            r.targetSnapshot ?? void 0
                          )
                        );
                        try {
                          r.resolve(e.errorHandler(l));
                        } catch (c) {
                          r.reject(c);
                        }
                      }
                      return kn;
                    })
                  );
                })
              )
            );
          }
          cancelNavigationTransition(e, i, o) {
            const r = new Aa(
              e.id,
              this.urlSerializer.serialize(e.extractedUrl),
              i,
              o
            );
            this.events.next(r), e.resolve(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function LE(t) {
        return t !== Ia;
      }
      let VE = (() => {
          class t {
            buildTitle(e) {
              let i,
                o = e.root;
              for (; void 0 !== o; )
                (i = this.getResolvedTitleForRoute(o) ?? i),
                  (o = o.children.find((r) => r.outlet === ne));
              return i;
            }
            getResolvedTitleForRoute(e) {
              return e.data[Da];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: function () {
                return R(lU);
              },
              providedIn: "root",
            }));
          }
          return t;
        })(),
        lU = (() => {
          class t extends VE {
            constructor(e) {
              super(), (this.title = e);
            }
            updateTitle(e) {
              const i = this.buildTitle(e);
              void 0 !== i && this.title.setTitle(i);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(wx));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        cU = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: function () {
                return R(uU);
              },
              providedIn: "root",
            }));
          }
          return t;
        })();
      class dU {
        shouldDetach(n) {
          return !1;
        }
        store(n, e) {}
        shouldAttach(n) {
          return !1;
        }
        retrieve(n) {
          return null;
        }
        shouldReuseRoute(n, e) {
          return n.routeConfig === e.routeConfig;
        }
      }
      let uU = (() => {
        class t extends dU {
          static #e = (this.ɵfac = (function () {
            let e;
            return function (o) {
              return (e || (e = ct(t)))(o || t);
            };
          })());
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const Td = new S("", { providedIn: "root", factory: () => ({}) });
      let hU = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: function () {
                return R(fU);
              },
              providedIn: "root",
            }));
          }
          return t;
        })(),
        fU = (() => {
          class t {
            shouldProcessUrl(e) {
              return !0;
            }
            extract(e) {
              return e;
            }
            merge(e, i) {
              return e;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      var La = (function (t) {
        return (
          (t[(t.COMPLETE = 0)] = "COMPLETE"),
          (t[(t.FAILED = 1)] = "FAILED"),
          (t[(t.REDIRECTING = 2)] = "REDIRECTING"),
          t
        );
      })(La || {});
      function BE(t, n) {
        t.events
          .pipe(
            Ue(
              (e) =>
                e instanceof Gi ||
                e instanceof Aa ||
                e instanceof bd ||
                e instanceof Zr
            ),
            ae((e) =>
              e instanceof Gi || e instanceof Zr
                ? La.COMPLETE
                : e instanceof Aa && (0 === e.code || 1 === e.code)
                ? La.REDIRECTING
                : La.FAILED
            ),
            Ue((e) => e !== La.REDIRECTING),
            dt(1)
          )
          .subscribe(() => {
            n();
          });
      }
      function pU(t) {
        throw t;
      }
      function mU(t, n, e) {
        return n.parse("/");
      }
      const gU = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        _U = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let et = (() => {
        class t {
          get navigationId() {
            return this.navigationTransitions.navigationId;
          }
          get browserPageId() {
            return "computed" !== this.canceledNavigationResolution
              ? this.currentPageId
              : this.location.getState()?.ɵrouterPageId ?? this.currentPageId;
          }
          get events() {
            return this._events;
          }
          constructor() {
            (this.disposed = !1),
              (this.currentPageId = 0),
              (this.console = R(Q0)),
              (this.isNgZoneEnabled = !1),
              (this._events = new me()),
              (this.options = R(Td, { optional: !0 }) || {}),
              (this.pendingTasks = R(Lc)),
              (this.errorHandler = this.options.errorHandler || pU),
              (this.malformedUriErrorHandler =
                this.options.malformedUriErrorHandler || mU),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.urlHandlingStrategy = R(hU)),
              (this.routeReuseStrategy = R(cU)),
              (this.titleStrategy = R(VE)),
              (this.onSameUrlNavigation =
                this.options.onSameUrlNavigation || "ignore"),
              (this.paramsInheritanceStrategy =
                this.options.paramsInheritanceStrategy || "emptyOnly"),
              (this.urlUpdateStrategy =
                this.options.urlUpdateStrategy || "deferred"),
              (this.canceledNavigationResolution =
                this.options.canceledNavigationResolution || "replace"),
              (this.config = R(ts, { optional: !0 })?.flat() ?? []),
              (this.navigationTransitions = R(Sd)),
              (this.urlSerializer = R(Ea)),
              (this.location = R(ua)),
              (this.componentInputBindingEnabled = !!R(wd, { optional: !0 })),
              (this.eventsSubscription = new lt()),
              (this.isNgZoneEnabled = R(X) instanceof X && X.isInAngularZone()),
              this.resetConfig(this.config),
              (this.currentUrlTree = new Kr()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = _E(0, null)),
              this.navigationTransitions
                .setupNavigations(this, this.currentUrlTree, this.routerState)
                .subscribe(
                  (e) => {
                    (this.lastSuccessfulId = e.id),
                      (this.currentPageId = this.browserPageId);
                  },
                  (e) => {
                    this.console.warn(`Unhandled Navigation Error: ${e}`);
                  }
                ),
              this.subscribeToNavigationEvents();
          }
          subscribeToNavigationEvents() {
            const e = this.navigationTransitions.events.subscribe((i) => {
              try {
                const { currentTransition: o } = this.navigationTransitions;
                if (null === o) return void (jE(i) && this._events.next(i));
                if (i instanceof vd)
                  LE(o.source) && (this.browserUrlTree = o.extractedUrl);
                else if (i instanceof Zr) this.rawUrlTree = o.rawUrl;
                else if (i instanceof fE) {
                  if ("eager" === this.urlUpdateStrategy) {
                    if (!o.extras.skipLocationChange) {
                      const r = this.urlHandlingStrategy.merge(
                        o.urlAfterRedirects,
                        o.rawUrl
                      );
                      this.setBrowserUrl(r, o);
                    }
                    this.browserUrlTree = o.urlAfterRedirects;
                  }
                } else if (i instanceof Em)
                  (this.currentUrlTree = o.urlAfterRedirects),
                    (this.rawUrlTree = this.urlHandlingStrategy.merge(
                      o.urlAfterRedirects,
                      o.rawUrl
                    )),
                    (this.routerState = o.targetRouterState),
                    "deferred" === this.urlUpdateStrategy &&
                      (o.extras.skipLocationChange ||
                        this.setBrowserUrl(this.rawUrlTree, o),
                      (this.browserUrlTree = o.urlAfterRedirects));
                else if (i instanceof Aa)
                  0 !== i.code && 1 !== i.code && (this.navigated = !0),
                    (3 === i.code || 2 === i.code) && this.restoreHistory(o);
                else if (i instanceof Mm) {
                  const r = this.urlHandlingStrategy.merge(
                      i.url,
                      o.currentRawUrl
                    ),
                    s = {
                      skipLocationChange: o.extras.skipLocationChange,
                      replaceUrl:
                        "eager" === this.urlUpdateStrategy || LE(o.source),
                    };
                  this.scheduleNavigation(r, Ia, null, s, {
                    resolve: o.resolve,
                    reject: o.reject,
                    promise: o.promise,
                  });
                }
                i instanceof bd && this.restoreHistory(o, !0),
                  i instanceof Gi && (this.navigated = !0),
                  jE(i) && this._events.next(i);
              } catch (o) {
                this.navigationTransitions.transitionAbortSubject.next(o);
              }
            });
            this.eventsSubscription.add(e);
          }
          resetRootComponentType(e) {
            (this.routerState.root.component = e),
              (this.navigationTransitions.rootComponentType = e);
          }
          initialNavigation() {
            if (
              (this.setUpLocationChangeListener(),
              !this.navigationTransitions.hasRequestedNavigation)
            ) {
              const e = this.location.getState();
              this.navigateToSyncWithBrowser(this.location.path(!0), Ia, e);
            }
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const i = "popstate" === e.type ? "popstate" : "hashchange";
                "popstate" === i &&
                  setTimeout(() => {
                    this.navigateToSyncWithBrowser(e.url, i, e.state);
                  }, 0);
              }));
          }
          navigateToSyncWithBrowser(e, i, o) {
            const r = { replaceUrl: !0 },
              s = o?.navigationId ? o : null;
            if (o) {
              const l = { ...o };
              delete l.navigationId,
                delete l.ɵrouterPageId,
                0 !== Object.keys(l).length && (r.state = l);
            }
            const a = this.parseUrl(e);
            this.scheduleNavigation(a, i, s, r);
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.navigationTransitions.currentNavigation;
          }
          get lastSuccessfulNavigation() {
            return this.navigationTransitions.lastSuccessfulNavigation;
          }
          resetConfig(e) {
            (this.config = e.map(km)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.navigationTransitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0),
              this.eventsSubscription.unsubscribe();
          }
          createUrlTree(e, i = {}) {
            const {
                relativeTo: o,
                queryParams: r,
                fragment: s,
                queryParamsHandling: a,
                preserveFragment: l,
              } = i,
              c = l ? this.currentUrlTree.fragment : s;
            let u,
              d = null;
            switch (a) {
              case "merge":
                d = { ...this.currentUrlTree.queryParams, ...r };
                break;
              case "preserve":
                d = this.currentUrlTree.queryParams;
                break;
              default:
                d = r || null;
            }
            null !== d && (d = this.removeEmptyProps(d));
            try {
              u = sE(o ? o.snapshot : this.routerState.snapshot.root);
            } catch {
              ("string" != typeof e[0] || !e[0].startsWith("/")) && (e = []),
                (u = this.currentUrlTree.root);
            }
            return aE(u, e, d, c ?? null);
          }
          navigateByUrl(e, i = { skipLocationChange: !1 }) {
            const o = To(e) ? e : this.parseUrl(e),
              r = this.urlHandlingStrategy.merge(o, this.rawUrlTree);
            return this.scheduleNavigation(r, Ia, null, i);
          }
          navigate(e, i = { skipLocationChange: !1 }) {
            return (
              (function yU(t) {
                for (let n = 0; n < t.length; n++)
                  if (null == t[n]) throw new x(4008, !1);
              })(e),
              this.navigateByUrl(this.createUrlTree(e, i), i)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let i;
            try {
              i = this.urlSerializer.parse(e);
            } catch (o) {
              i = this.malformedUriErrorHandler(o, this.urlSerializer, e);
            }
            return i;
          }
          isActive(e, i) {
            let o;
            if (((o = !0 === i ? { ...gU } : !1 === i ? { ..._U } : i), To(e)))
              return Qx(this.currentUrlTree, e, o);
            const r = this.parseUrl(e);
            return Qx(this.currentUrlTree, r, o);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((i, o) => {
              const r = e[o];
              return null != r && (i[o] = r), i;
            }, {});
          }
          scheduleNavigation(e, i, o, r, s) {
            if (this.disposed) return Promise.resolve(!1);
            let a, l, c;
            s
              ? ((a = s.resolve), (l = s.reject), (c = s.promise))
              : (c = new Promise((u, h) => {
                  (a = u), (l = h);
                }));
            const d = this.pendingTasks.add();
            return (
              BE(this, () => {
                queueMicrotask(() => this.pendingTasks.remove(d));
              }),
              this.navigationTransitions.handleNavigationRequest({
                source: i,
                restoredState: o,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                currentBrowserUrl: this.browserUrlTree,
                rawUrl: e,
                extras: r,
                resolve: a,
                reject: l,
                promise: c,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              c.catch((u) => Promise.reject(u))
            );
          }
          setBrowserUrl(e, i) {
            const o = this.urlSerializer.serialize(e);
            if (this.location.isCurrentPathEqualTo(o) || i.extras.replaceUrl) {
              const s = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, this.browserPageId),
              };
              this.location.replaceState(o, "", s);
            } else {
              const r = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, this.browserPageId + 1),
              };
              this.location.go(o, "", r);
            }
          }
          restoreHistory(e, i = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const r = this.currentPageId - this.browserPageId;
              0 !== r
                ? this.location.historyGo(r)
                : this.currentUrlTree ===
                    this.getCurrentNavigation()?.finalUrl &&
                  0 === r &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree());
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          generateNgRouterState(e, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: i }
              : { navigationId: e };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function jE(t) {
        return !(t instanceof Em || t instanceof Mm);
      }
      class HE {}
      let CU = (() => {
        class t {
          constructor(e, i, o, r, s) {
            (this.router = e),
              (this.injector = o),
              (this.preloadingStrategy = r),
              (this.loader = s);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                Ue((e) => e instanceof Gi),
                zr(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(e, i) {
            const o = [];
            for (const r of i) {
              r.providers &&
                !r._injector &&
                (r._injector = lp(r.providers, e, `Route: ${r.path}`));
              const s = r._injector ?? e,
                a = r._loadedInjector ?? s;
              ((r.loadChildren && !r._loadedRoutes && void 0 === r.canLoad) ||
                (r.loadComponent && !r._loadedComponent)) &&
                o.push(this.preloadConfig(s, r)),
                (r.children || r._loadedRoutes) &&
                  o.push(this.processRoutes(a, r.children ?? r._loadedRoutes));
            }
            return it(o).pipe(qo());
          }
          preloadConfig(e, i) {
            return this.preloadingStrategy.preload(i, () => {
              let o;
              o =
                i.loadChildren && void 0 === i.canLoad
                  ? this.loader.loadChildren(e, i)
                  : H(null);
              const r = o.pipe(
                nt((s) =>
                  null === s
                    ? H(void 0)
                    : ((i._loadedRoutes = s.routes),
                      (i._loadedInjector = s.injector),
                      this.processRoutes(s.injector ?? e, s.routes))
                )
              );
              return i.loadComponent && !i._loadedComponent
                ? it([r, this.loader.loadComponent(i)]).pipe(qo())
                : r;
            });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(et), C(X0), C(Xt), C(HE), C(Vm));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const jm = new S("");
      let UE = (() => {
        class t {
          constructor(e, i, o, r, s = {}) {
            (this.urlSerializer = e),
              (this.transitions = i),
              (this.viewportScroller = o),
              (this.zone = r),
              (this.options = s),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (s.scrollPositionRestoration =
                s.scrollPositionRestoration || "disabled"),
              (s.anchorScrolling = s.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof vd
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = e.navigationTrigger),
                  (this.restoredId = e.restoredState
                    ? e.restoredState.navigationId
                    : 0))
                : e instanceof Gi
                ? ((this.lastId = e.id),
                  this.scheduleScrollEvent(
                    e,
                    this.urlSerializer.parse(e.urlAfterRedirects).fragment
                  ))
                : e instanceof Zr &&
                  0 === e.code &&
                  ((this.lastSource = void 0),
                  (this.restoredId = 0),
                  this.scheduleScrollEvent(
                    e,
                    this.urlSerializer.parse(e.url).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof pE &&
                (e.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(e.position)
                  : e.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(e.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(e, i) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new pE(
                      e,
                      "popstate" === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      i
                    )
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (i) {
            Mf();
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function yi(t, n) {
        return { ɵkind: t, ɵproviders: n };
      }
      function zE() {
        const t = R(He);
        return (n) => {
          const e = t.get(ui);
          if (n !== e.components[0]) return;
          const i = t.get(et),
            o = t.get(qE);
          1 === t.get(Hm) && i.initialNavigation(),
            t.get(GE, null, ie.Optional)?.setUpPreloading(),
            t.get(jm, null, ie.Optional)?.init(),
            i.resetRootComponentType(e.componentTypes[0]),
            o.closed || (o.next(), o.complete(), o.unsubscribe());
        };
      }
      const qE = new S("", { factory: () => new me() }),
        Hm = new S("", { providedIn: "root", factory: () => 1 }),
        GE = new S("");
      function EU(t) {
        return yi(0, [
          { provide: GE, useExisting: CU },
          { provide: HE, useExisting: t },
        ]);
      }
      const WE = new S("ROUTER_FORROOT_GUARD"),
        SU = [
          ua,
          { provide: Ea, useClass: bm },
          et,
          Oa,
          {
            provide: _i,
            useFactory: function $E(t) {
              return t.routerState.root;
            },
            deps: [et],
          },
          Vm,
          [],
        ];
      function TU() {
        return new rD("Router", et);
      }
      let YE = (() => {
        class t {
          constructor(e) {}
          static forRoot(e, i) {
            return {
              ngModule: t,
              providers: [
                SU,
                [],
                { provide: ts, multi: !0, useValue: e },
                {
                  provide: WE,
                  useFactory: RU,
                  deps: [[et, new jl(), new Hl()]],
                },
                { provide: Td, useValue: i || {} },
                i?.useHash
                  ? { provide: xo, useClass: gV }
                  : { provide: xo, useClass: FD },
                {
                  provide: jm,
                  useFactory: () => {
                    const t = R(OB),
                      n = R(X),
                      e = R(Td),
                      i = R(Sd),
                      o = R(Ea);
                    return (
                      e.scrollOffset && t.setOffset(e.scrollOffset),
                      new UE(o, i, t, n, e)
                    );
                  },
                },
                i?.preloadingStrategy
                  ? EU(i.preloadingStrategy).ɵproviders
                  : [],
                { provide: rD, multi: !0, useFactory: TU },
                i?.initialNavigation ? PU(i) : [],
                i?.bindToComponentInputs
                  ? yi(8, [CE, { provide: wd, useExisting: CE }]).ɵproviders
                  : [],
                [
                  { provide: KE, useFactory: zE },
                  { provide: Op, multi: !0, useExisting: KE },
                ],
              ],
            };
          }
          static forChild(e) {
            return {
              ngModule: t,
              providers: [{ provide: ts, multi: !0, useValue: e }],
            };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(WE, 8));
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({}));
        }
        return t;
      })();
      function RU(t) {
        return "guarded";
      }
      function PU(t) {
        return [
          "disabled" === t.initialNavigation
            ? yi(3, [
                {
                  provide: Dp,
                  multi: !0,
                  useFactory: () => {
                    const n = R(et);
                    return () => {
                      n.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: Hm, useValue: 2 },
              ]).ɵproviders
            : [],
          "enabledBlocking" === t.initialNavigation
            ? yi(2, [
                { provide: Hm, useValue: 0 },
                {
                  provide: Dp,
                  multi: !0,
                  deps: [He],
                  useFactory: (n) => {
                    const e = n.get(pV, Promise.resolve());
                    return () =>
                      e.then(
                        () =>
                          new Promise((i) => {
                            const o = n.get(et),
                              r = n.get(qE);
                            BE(o, () => {
                              i(!0);
                            }),
                              (n.get(Sd).afterPreactivation = () => (
                                i(!0), r.closed ? H(void 0) : r
                              )),
                              o.initialNavigation();
                          })
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const KE = new S("");
      let ZE = (() => {
          class t {
            constructor(e, i) {
              (this._renderer = e),
                (this._elementRef = i),
                (this.onChange = (o) => {}),
                (this.onTouched = () => {});
            }
            setProperty(e, i) {
              this._renderer.setProperty(this._elementRef.nativeElement, e, i);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            setDisabledState(e) {
              this.setProperty("disabled", e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(fn), y(Me));
            });
            static #t = (this.ɵdir = j({ type: t }));
          }
          return t;
        })(),
        Io = (() => {
          class t extends ZE {
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = ct(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = j({ type: t, features: [le] }));
          }
          return t;
        })();
      const yn = new S("NgValueAccessor"),
        LU = { provide: yn, useExisting: Ee(() => vi), multi: !0 },
        XE = new S("CompositionEventMode");
      let vi = (() => {
        class t extends ZE {
          constructor(e, i, o) {
            super(e, i),
              (this._compositionMode = o),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function VU() {
                  const t = ji() ? ji().getUserAgent() : "";
                  return /android (\d+)/.test(t.toLowerCase());
                })());
          }
          writeValue(e) {
            this.setProperty("value", e ?? "");
          }
          _handleInput(e) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(e);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(e) {
            (this._composing = !1), this._compositionMode && this.onChange(e);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(fn), y(Me), y(XE, 8));
          });
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (i, o) {
              1 & i &&
                F("input", function (s) {
                  return o._handleInput(s.target.value);
                })("blur", function () {
                  return o.onTouched();
                })("compositionstart", function () {
                  return o._compositionStart();
                })("compositionend", function (s) {
                  return o._compositionEnd(s.target.value);
                });
            },
            features: [Se([LU]), le],
          }));
        }
        return t;
      })();
      function Wi(t) {
        return (
          null == t ||
          (("string" == typeof t || Array.isArray(t)) && 0 === t.length)
        );
      }
      function JE(t) {
        return null != t && "number" == typeof t.length;
      }
      const Dt = new S("NgValidators"),
        Yi = new S("NgAsyncValidators"),
        BU =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class Ke {
        static min(n) {
          return (function eM(t) {
            return (n) => {
              if (Wi(n.value) || Wi(t)) return null;
              const e = parseFloat(n.value);
              return !isNaN(e) && e < t
                ? { min: { min: t, actual: n.value } }
                : null;
            };
          })(n);
        }
        static max(n) {
          return (function tM(t) {
            return (n) => {
              if (Wi(n.value) || Wi(t)) return null;
              const e = parseFloat(n.value);
              return !isNaN(e) && e > t
                ? { max: { max: t, actual: n.value } }
                : null;
            };
          })(n);
        }
        static required(n) {
          return nM(n);
        }
        static requiredTrue(n) {
          return (function iM(t) {
            return !0 === t.value ? null : { required: !0 };
          })(n);
        }
        static email(n) {
          return (function oM(t) {
            return Wi(t.value) || BU.test(t.value) ? null : { email: !0 };
          })(n);
        }
        static minLength(n) {
          return rM(n);
        }
        static maxLength(n) {
          return (function sM(t) {
            return (n) =>
              JE(n.value) && n.value.length > t
                ? {
                    maxlength: {
                      requiredLength: t,
                      actualLength: n.value.length,
                    },
                  }
                : null;
          })(n);
        }
        static pattern(n) {
          return (function aM(t) {
            if (!t) return Id;
            let n, e;
            return (
              "string" == typeof t
                ? ((e = ""),
                  "^" !== t.charAt(0) && (e += "^"),
                  (e += t),
                  "$" !== t.charAt(t.length - 1) && (e += "$"),
                  (n = new RegExp(e)))
                : ((e = t.toString()), (n = t)),
              (i) => {
                if (Wi(i.value)) return null;
                const o = i.value;
                return n.test(o)
                  ? null
                  : { pattern: { requiredPattern: e, actualValue: o } };
              }
            );
          })(n);
        }
        static nullValidator(n) {
          return null;
        }
        static compose(n) {
          return fM(n);
        }
        static composeAsync(n) {
          return pM(n);
        }
      }
      function nM(t) {
        return Wi(t.value) ? { required: !0 } : null;
      }
      function rM(t) {
        return (n) =>
          Wi(n.value) || !JE(n.value)
            ? null
            : n.value.length < t
            ? { minlength: { requiredLength: t, actualLength: n.value.length } }
            : null;
      }
      function Id(t) {
        return null;
      }
      function lM(t) {
        return null != t;
      }
      function cM(t) {
        return Js(t) ? it(t) : t;
      }
      function dM(t) {
        let n = {};
        return (
          t.forEach((e) => {
            n = null != e ? { ...n, ...e } : n;
          }),
          0 === Object.keys(n).length ? null : n
        );
      }
      function uM(t, n) {
        return n.map((e) => e(t));
      }
      function hM(t) {
        return t.map((n) =>
          (function jU(t) {
            return !t.validate;
          })(n)
            ? n
            : (e) => n.validate(e)
        );
      }
      function fM(t) {
        if (!t) return null;
        const n = t.filter(lM);
        return 0 == n.length
          ? null
          : function (e) {
              return dM(uM(e, n));
            };
      }
      function Um(t) {
        return null != t ? fM(hM(t)) : null;
      }
      function pM(t) {
        if (!t) return null;
        const n = t.filter(lM);
        return 0 == n.length
          ? null
          : function (e) {
              return (function FU(...t) {
                const n = B_(t),
                  { args: e, keys: i } = Ux(t),
                  o = new Fe((r) => {
                    const { length: s } = e;
                    if (!s) return void r.complete();
                    const a = new Array(s);
                    let l = s,
                      c = s;
                    for (let d = 0; d < s; d++) {
                      let u = !1;
                      vt(e[d]).subscribe(
                        Le(
                          r,
                          (h) => {
                            u || ((u = !0), c--), (a[d] = h);
                          },
                          () => l--,
                          void 0,
                          () => {
                            (!l || !u) &&
                              (c || r.next(i ? $x(i, a) : a), r.complete());
                          }
                        )
                      );
                    }
                  });
                return n ? o.pipe(_m(n)) : o;
              })(uM(e, n).map(cM)).pipe(ae(dM));
            };
      }
      function $m(t) {
        return null != t ? pM(hM(t)) : null;
      }
      function mM(t, n) {
        return null === t ? [n] : Array.isArray(t) ? [...t, n] : [t, n];
      }
      function gM(t) {
        return t._rawValidators;
      }
      function _M(t) {
        return t._rawAsyncValidators;
      }
      function zm(t) {
        return t ? (Array.isArray(t) ? t : [t]) : [];
      }
      function Ad(t, n) {
        return Array.isArray(t) ? t.includes(n) : t === n;
      }
      function yM(t, n) {
        const e = zm(n);
        return (
          zm(t).forEach((o) => {
            Ad(e, o) || e.push(o);
          }),
          e
        );
      }
      function vM(t, n) {
        return zm(n).filter((e) => !Ad(t, e));
      }
      class bM {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(n) {
          (this._rawValidators = n || []),
            (this._composedValidatorFn = Um(this._rawValidators));
        }
        _setAsyncValidators(n) {
          (this._rawAsyncValidators = n || []),
            (this._composedAsyncValidatorFn = $m(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(n) {
          this._onDestroyCallbacks.push(n);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((n) => n()),
            (this._onDestroyCallbacks = []);
        }
        reset(n = void 0) {
          this.control && this.control.reset(n);
        }
        hasError(n, e) {
          return !!this.control && this.control.hasError(n, e);
        }
        getError(n, e) {
          return this.control ? this.control.getError(n, e) : null;
        }
      }
      class Nt extends bM {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Ki extends bM {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class CM {
        constructor(n) {
          this._cd = n;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let Zi = (() => {
          class t extends CM {
            constructor(e) {
              super(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(Ki, 2));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (i, o) {
                2 & i &&
                  En("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)(
                    "ng-pristine",
                    o.isPristine
                  )("ng-dirty", o.isDirty)("ng-valid", o.isValid)(
                    "ng-invalid",
                    o.isInvalid
                  )("ng-pending", o.isPending);
              },
              features: [le],
            }));
          }
          return t;
        })(),
        Qi = (() => {
          class t extends CM {
            constructor(e) {
              super(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(Nt, 10));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (i, o) {
                2 & i &&
                  En("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)(
                    "ng-pristine",
                    o.isPristine
                  )("ng-dirty", o.isDirty)("ng-valid", o.isValid)(
                    "ng-invalid",
                    o.isInvalid
                  )("ng-pending", o.isPending)("ng-submitted", o.isSubmitted);
              },
              features: [le],
            }));
          }
          return t;
        })();
      const Va = "VALID",
        Rd = "INVALID",
        ns = "PENDING",
        Ba = "DISABLED";
      function Wm(t) {
        return (Pd(t) ? t.validators : t) || null;
      }
      function Ym(t, n) {
        return (Pd(n) ? n.asyncValidators : t) || null;
      }
      function Pd(t) {
        return null != t && !Array.isArray(t) && "object" == typeof t;
      }
      function DM(t, n, e) {
        const i = t.controls;
        if (!(n ? Object.keys(i) : i).length) throw new x(1e3, "");
        if (!i[e]) throw new x(1001, "");
      }
      function xM(t, n, e) {
        t._forEachChild((i, o) => {
          if (void 0 === e[o]) throw new x(1002, "");
        });
      }
      class kd {
        constructor(n, e) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(n),
            this._assignAsyncValidators(e);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(n) {
          this._rawValidators = this._composedValidatorFn = n;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(n) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = n;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Va;
        }
        get invalid() {
          return this.status === Rd;
        }
        get pending() {
          return this.status == ns;
        }
        get disabled() {
          return this.status === Ba;
        }
        get enabled() {
          return this.status !== Ba;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(n) {
          this._assignValidators(n);
        }
        setAsyncValidators(n) {
          this._assignAsyncValidators(n);
        }
        addValidators(n) {
          this.setValidators(yM(n, this._rawValidators));
        }
        addAsyncValidators(n) {
          this.setAsyncValidators(yM(n, this._rawAsyncValidators));
        }
        removeValidators(n) {
          this.setValidators(vM(n, this._rawValidators));
        }
        removeAsyncValidators(n) {
          this.setAsyncValidators(vM(n, this._rawAsyncValidators));
        }
        hasValidator(n) {
          return Ad(this._rawValidators, n);
        }
        hasAsyncValidator(n) {
          return Ad(this._rawAsyncValidators, n);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(n = {}) {
          (this.touched = !0),
            this._parent && !n.onlySelf && this._parent.markAsTouched(n);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((n) => n.markAllAsTouched());
        }
        markAsUntouched(n = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !n.onlySelf && this._parent._updateTouched(n);
        }
        markAsDirty(n = {}) {
          (this.pristine = !1),
            this._parent && !n.onlySelf && this._parent.markAsDirty(n);
        }
        markAsPristine(n = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !n.onlySelf && this._parent._updatePristine(n);
        }
        markAsPending(n = {}) {
          (this.status = ns),
            !1 !== n.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !n.onlySelf && this._parent.markAsPending(n);
        }
        disable(n = {}) {
          const e = this._parentMarkedDirty(n.onlySelf);
          (this.status = Ba),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable({ ...n, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== n.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...n, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(n = {}) {
          const e = this._parentMarkedDirty(n.onlySelf);
          (this.status = Va),
            this._forEachChild((i) => {
              i.enable({ ...n, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: n.emitEvent,
            }),
            this._updateAncestors({ ...n, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(n) {
          this._parent &&
            !n.onlySelf &&
            (this._parent.updateValueAndValidity(n),
            n.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(n) {
          this._parent = n;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(n = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Va || this.status === ns) &&
                this._runAsyncValidator(n.emitEvent)),
            !1 !== n.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !n.onlySelf &&
              this._parent.updateValueAndValidity(n);
        }
        _updateTreeValidity(n = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(n)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: n.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Ba : Va;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(n) {
          if (this.asyncValidator) {
            (this.status = ns), (this._hasOwnPendingAsyncValidator = !0);
            const e = cM(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: n });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(n, e = {}) {
          (this.errors = n), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(n) {
          let e = n;
          return null == e ||
            (Array.isArray(e) || (e = e.split(".")), 0 === e.length)
            ? null
            : e.reduce((i, o) => i && i._find(o), this);
        }
        getError(n, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[n] : null;
        }
        hasError(n, e) {
          return !!this.getError(n, e);
        }
        get root() {
          let n = this;
          for (; n._parent; ) n = n._parent;
          return n;
        }
        _updateControlsErrors(n) {
          (this.status = this._calculateStatus()),
            n && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(n);
        }
        _initObservables() {
          (this.valueChanges = new V()), (this.statusChanges = new V());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Ba
            : this.errors
            ? Rd
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(ns)
            ? ns
            : this._anyControlsHaveStatus(Rd)
            ? Rd
            : Va;
        }
        _anyControlsHaveStatus(n) {
          return this._anyControls((e) => e.status === n);
        }
        _anyControlsDirty() {
          return this._anyControls((n) => n.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((n) => n.touched);
        }
        _updatePristine(n = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !n.onlySelf && this._parent._updatePristine(n);
        }
        _updateTouched(n = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !n.onlySelf && this._parent._updateTouched(n);
        }
        _registerOnCollectionChange(n) {
          this._onCollectionChange = n;
        }
        _setUpdateStrategy(n) {
          Pd(n) && null != n.updateOn && (this._updateOn = n.updateOn);
        }
        _parentMarkedDirty(n) {
          return (
            !n &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(n) {
          return null;
        }
        _assignValidators(n) {
          (this._rawValidators = Array.isArray(n) ? n.slice() : n),
            (this._composedValidatorFn = (function zU(t) {
              return Array.isArray(t) ? Um(t) : t || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(n) {
          (this._rawAsyncValidators = Array.isArray(n) ? n.slice() : n),
            (this._composedAsyncValidatorFn = (function qU(t) {
              return Array.isArray(t) ? $m(t) : t || null;
            })(this._rawAsyncValidators));
        }
      }
      class is extends kd {
        constructor(n, e, i) {
          super(Wm(e), Ym(i, e)),
            (this.controls = n),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(n, e) {
          return this.controls[n]
            ? this.controls[n]
            : ((this.controls[n] = e),
              e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange),
              e);
        }
        addControl(n, e, i = {}) {
          this.registerControl(n, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(n, e = {}) {
          this.controls[n] &&
            this.controls[n]._registerOnCollectionChange(() => {}),
            delete this.controls[n],
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        setControl(n, e, i = {}) {
          this.controls[n] &&
            this.controls[n]._registerOnCollectionChange(() => {}),
            delete this.controls[n],
            e && this.registerControl(n, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(n) {
          return this.controls.hasOwnProperty(n) && this.controls[n].enabled;
        }
        setValue(n, e = {}) {
          xM(this, 0, n),
            Object.keys(n).forEach((i) => {
              DM(this, !0, i),
                this.controls[i].setValue(n[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(n, e = {}) {
          null != n &&
            (Object.keys(n).forEach((i) => {
              const o = this.controls[i];
              o && o.patchValue(n[i], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e));
        }
        reset(n = {}, e = {}) {
          this._forEachChild((i, o) => {
            i.reset(n ? n[o] : null, { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (n, e, i) => ((n[i] = e.getRawValue()), n)
          );
        }
        _syncPendingControls() {
          let n = this._reduceChildren(
            !1,
            (e, i) => !!i._syncPendingControls() || e
          );
          return n && this.updateValueAndValidity({ onlySelf: !0 }), n;
        }
        _forEachChild(n) {
          Object.keys(this.controls).forEach((e) => {
            const i = this.controls[e];
            i && n(i, e);
          });
        }
        _setUpControls() {
          this._forEachChild((n) => {
            n.setParent(this),
              n._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(n) {
          for (const [e, i] of Object.entries(this.controls))
            if (this.contains(e) && n(i)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, i, o) => ((i.enabled || this.disabled) && (e[o] = i.value), e)
          );
        }
        _reduceChildren(n, e) {
          let i = n;
          return (
            this._forEachChild((o, r) => {
              i = e(i, o, r);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const n of Object.keys(this.controls))
            if (this.controls[n].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(n) {
          return this.controls.hasOwnProperty(n) ? this.controls[n] : null;
        }
      }
      class EM extends is {}
      const Ao = new S("CallSetDisabledState", {
          providedIn: "root",
          factory: () => ja,
        }),
        ja = "always";
      function Fd(t, n) {
        return [...n.path, t];
      }
      function Ha(t, n, e = ja) {
        Km(t, n),
          n.valueAccessor.writeValue(t.value),
          (t.disabled || "always" === e) &&
            n.valueAccessor.setDisabledState?.(t.disabled),
          (function WU(t, n) {
            n.valueAccessor.registerOnChange((e) => {
              (t._pendingValue = e),
                (t._pendingChange = !0),
                (t._pendingDirty = !0),
                "change" === t.updateOn && MM(t, n);
            });
          })(t, n),
          (function KU(t, n) {
            const e = (i, o) => {
              n.valueAccessor.writeValue(i), o && n.viewToModelUpdate(i);
            };
            t.registerOnChange(e),
              n._registerOnDestroy(() => {
                t._unregisterOnChange(e);
              });
          })(t, n),
          (function YU(t, n) {
            n.valueAccessor.registerOnTouched(() => {
              (t._pendingTouched = !0),
                "blur" === t.updateOn && t._pendingChange && MM(t, n),
                "submit" !== t.updateOn && t.markAsTouched();
            });
          })(t, n),
          (function GU(t, n) {
            if (n.valueAccessor.setDisabledState) {
              const e = (i) => {
                n.valueAccessor.setDisabledState(i);
              };
              t.registerOnDisabledChange(e),
                n._registerOnDestroy(() => {
                  t._unregisterOnDisabledChange(e);
                });
            }
          })(t, n);
      }
      function Nd(t, n, e = !0) {
        const i = () => {};
        n.valueAccessor &&
          (n.valueAccessor.registerOnChange(i),
          n.valueAccessor.registerOnTouched(i)),
          Vd(t, n),
          t &&
            (n._invokeOnDestroyCallbacks(),
            t._registerOnCollectionChange(() => {}));
      }
      function Ld(t, n) {
        t.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(n);
        });
      }
      function Km(t, n) {
        const e = gM(t);
        null !== n.validator
          ? t.setValidators(mM(e, n.validator))
          : "function" == typeof e && t.setValidators([e]);
        const i = _M(t);
        null !== n.asyncValidator
          ? t.setAsyncValidators(mM(i, n.asyncValidator))
          : "function" == typeof i && t.setAsyncValidators([i]);
        const o = () => t.updateValueAndValidity();
        Ld(n._rawValidators, o), Ld(n._rawAsyncValidators, o);
      }
      function Vd(t, n) {
        let e = !1;
        if (null !== t) {
          if (null !== n.validator) {
            const o = gM(t);
            if (Array.isArray(o) && o.length > 0) {
              const r = o.filter((s) => s !== n.validator);
              r.length !== o.length && ((e = !0), t.setValidators(r));
            }
          }
          if (null !== n.asyncValidator) {
            const o = _M(t);
            if (Array.isArray(o) && o.length > 0) {
              const r = o.filter((s) => s !== n.asyncValidator);
              r.length !== o.length && ((e = !0), t.setAsyncValidators(r));
            }
          }
        }
        const i = () => {};
        return Ld(n._rawValidators, i), Ld(n._rawAsyncValidators, i), e;
      }
      function MM(t, n) {
        t._pendingDirty && t.markAsDirty(),
          t.setValue(t._pendingValue, { emitModelToViewChange: !1 }),
          n.viewToModelUpdate(t._pendingValue),
          (t._pendingChange = !1);
      }
      function SM(t, n) {
        Km(t, n);
      }
      function Qm(t, n) {
        if (!t.hasOwnProperty("model")) return !1;
        const e = t.model;
        return !!e.isFirstChange() || !Object.is(n, e.currentValue);
      }
      function TM(t, n) {
        t._syncPendingControls(),
          n.forEach((e) => {
            const i = e.control;
            "submit" === i.updateOn &&
              i._pendingChange &&
              (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      function Xm(t, n) {
        if (!n) return null;
        let e, i, o;
        return (
          Array.isArray(n),
          n.forEach((r) => {
            r.constructor === vi
              ? (e = r)
              : (function XU(t) {
                  return Object.getPrototypeOf(t.constructor) === Io;
                })(r)
              ? (i = r)
              : (o = r);
          }),
          o || i || e || null
        );
      }
      const e$ = { provide: Nt, useExisting: Ee(() => os) },
        Ua = (() => Promise.resolve())();
      let os = (() => {
        class t extends Nt {
          constructor(e, i, o) {
            super(),
              (this.callSetDisabledState = o),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new V()),
              (this.form = new is({}, Um(e), $m(i)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(e) {
            Ua.then(() => {
              const i = this._findContainer(e.path);
              (e.control = i.registerControl(e.name, e.control)),
                Ha(e.control, e, this.callSetDisabledState),
                e.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(e);
            });
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            Ua.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name), this._directives.delete(e);
            });
          }
          addFormGroup(e) {
            Ua.then(() => {
              const i = this._findContainer(e.path),
                o = new is({});
              SM(o, e),
                i.registerControl(e.name, o),
                o.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(e) {
            Ua.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name);
            });
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            Ua.then(() => {
              this.form.get(e.path).setValue(i);
            });
          }
          setValue(e) {
            this.control.setValue(e);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              TM(this.form, this._directives),
              this.ngSubmit.emit(e),
              "dialog" === e?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e = void 0) {
            this.form.reset(e), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(e) {
            return e.pop(), e.length ? this.form.get(e) : this.form;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(Dt, 10), y(Yi, 10), y(Ao, 8));
          });
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [
              ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
              ["ng-form"],
              ["", "ngForm", ""],
            ],
            hostBindings: function (i, o) {
              1 & i &&
                F("submit", function (s) {
                  return o.onSubmit(s);
                })("reset", function () {
                  return o.onReset();
                });
            },
            inputs: { options: ["ngFormOptions", "options"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [Se([e$]), le],
          }));
        }
        return t;
      })();
      function IM(t, n) {
        const e = t.indexOf(n);
        e > -1 && t.splice(e, 1);
      }
      function AM(t) {
        return (
          "object" == typeof t &&
          null !== t &&
          2 === Object.keys(t).length &&
          "value" in t &&
          "disabled" in t
        );
      }
      const Xi = class extends kd {
          constructor(n = null, e, i) {
            super(Wm(e), Ym(i, e)),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(n),
              this._setUpdateStrategy(e),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              Pd(e) &&
                (e.nonNullable || e.initialValueIsDefault) &&
                (this.defaultValue = AM(n) ? n.value : n);
          }
          setValue(n, e = {}) {
            (this.value = this._pendingValue = n),
              this._onChange.length &&
                !1 !== e.emitModelToViewChange &&
                this._onChange.forEach((i) =>
                  i(this.value, !1 !== e.emitViewToModelChange)
                ),
              this.updateValueAndValidity(e);
          }
          patchValue(n, e = {}) {
            this.setValue(n, e);
          }
          reset(n = this.defaultValue, e = {}) {
            this._applyFormState(n),
              this.markAsPristine(e),
              this.markAsUntouched(e),
              this.setValue(this.value, e),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(n) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(n) {
            this._onChange.push(n);
          }
          _unregisterOnChange(n) {
            IM(this._onChange, n);
          }
          registerOnDisabledChange(n) {
            this._onDisabledChange.push(n);
          }
          _unregisterOnDisabledChange(n) {
            IM(this._onDisabledChange, n);
          }
          _forEachChild(n) {}
          _syncPendingControls() {
            return !(
              "submit" !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(n) {
            AM(n)
              ? ((this.value = this._pendingValue = n.value),
                n.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = n);
          }
        },
        i$ = { provide: Ki, useExisting: Ee(() => Bd) },
        PM = (() => Promise.resolve())();
      let Bd = (() => {
          class t extends Ki {
            constructor(e, i, o, r, s, a) {
              super(),
                (this._changeDetectorRef = s),
                (this.callSetDisabledState = a),
                (this.control = new Xi()),
                (this._registered = !1),
                (this.name = ""),
                (this.update = new V()),
                (this._parent = e),
                this._setValidators(i),
                this._setAsyncValidators(o),
                (this.valueAccessor = Xm(0, r));
            }
            ngOnChanges(e) {
              if ((this._checkForErrors(), !this._registered || "name" in e)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const i = e.name.previousValue;
                  this.formDirective.removeControl({
                    name: i,
                    path: this._getPath(i),
                  });
                }
                this._setUpControl();
              }
              "isDisabled" in e && this._updateDisabled(e),
                Qm(e, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(e) {
              (this.viewModel = e), this.update.emit(e);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              Ha(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(e) {
              PM.then(() => {
                this.control.setValue(e, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(e) {
              const i = e.isDisabled.currentValue,
                o = 0 !== i && Ur(i);
              PM.then(() => {
                o && !this.control.disabled
                  ? this.control.disable()
                  : !o && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(e) {
              return this._parent ? Fd(e, this._parent) : [e];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(
                y(Nt, 9),
                y(Dt, 10),
                y(Yi, 10),
                y(yn, 10),
                y(Hr, 8),
                y(Ao, 8)
              );
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                [
                  "",
                  "ngModel",
                  "",
                  3,
                  "formControlName",
                  "",
                  3,
                  "formControl",
                  "",
                ],
              ],
              inputs: {
                name: "name",
                isDisabled: ["disabled", "isDisabled"],
                model: ["ngModel", "model"],
                options: ["ngModelOptions", "options"],
              },
              outputs: { update: "ngModelChange" },
              exportAs: ["ngModel"],
              features: [Se([i$]), le, Tt],
            }));
          }
          return t;
        })(),
        Ji = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            }));
          }
          return t;
        })();
      const o$ = { provide: yn, useExisting: Ee(() => jd), multi: !0 };
      let jd = (() => {
          class t extends Io {
            writeValue(e) {
              this.setProperty("value", e ?? "");
            }
            registerOnChange(e) {
              this.onChange = (i) => {
                e("" == i ? null : parseFloat(i));
              };
            }
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = ct(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["input", "type", "number", "formControlName", ""],
                ["input", "type", "number", "formControl", ""],
                ["input", "type", "number", "ngModel", ""],
              ],
              hostBindings: function (i, o) {
                1 & i &&
                  F("input", function (s) {
                    return o.onChange(s.target.value);
                  })("blur", function () {
                    return o.onTouched();
                  });
              },
              features: [Se([o$]), le],
            }));
          }
          return t;
        })(),
        kM = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({}));
          }
          return t;
        })();
      const Jm = new S("NgModelWithFormControlWarning"),
        l$ = { provide: Ki, useExisting: Ee(() => eg) };
      let eg = (() => {
        class t extends Ki {
          set isDisabled(e) {}
          static #e = (this._ngModelWarningSentOnce = !1);
          constructor(e, i, o, r, s) {
            super(),
              (this._ngModelWarningConfig = r),
              (this.callSetDisabledState = s),
              (this.update = new V()),
              (this._ngModelWarningSent = !1),
              this._setValidators(e),
              this._setAsyncValidators(i),
              (this.valueAccessor = Xm(0, o));
          }
          ngOnChanges(e) {
            if (this._isControlChanged(e)) {
              const i = e.form.previousValue;
              i && Nd(i, this, !1),
                Ha(this.form, this, this.callSetDisabledState),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            Qm(e, this.viewModel) &&
              (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && Nd(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          _isControlChanged(e) {
            return e.hasOwnProperty("form");
          }
          static #t = (this.ɵfac = function (i) {
            return new (i || t)(
              y(Dt, 10),
              y(Yi, 10),
              y(yn, 10),
              y(Jm, 8),
              y(Ao, 8)
            );
          });
          static #n = (this.ɵdir = j({
            type: t,
            selectors: [["", "formControl", ""]],
            inputs: {
              form: ["formControl", "form"],
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            exportAs: ["ngForm"],
            features: [Se([l$]), le, Tt],
          }));
        }
        return t;
      })();
      const c$ = { provide: Nt, useExisting: Ee(() => Oo) };
      let Oo = (() => {
        class t extends Nt {
          constructor(e, i, o) {
            super(),
              (this.callSetDisabledState = o),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new V()),
              this._setValidators(e),
              this._setAsyncValidators(i);
          }
          ngOnChanges(e) {
            this._checkFormPresent(),
              e.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (Vd(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(e) {
            const i = this.form.get(e.path);
            return (
              Ha(i, e, this.callSetDisabledState),
              i.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(e),
              i
            );
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            Nd(e.control || null, e, !1),
              (function JU(t, n) {
                const e = t.indexOf(n);
                e > -1 && t.splice(e, 1);
              })(this.directives, e);
          }
          addFormGroup(e) {
            this._setUpFormContainer(e);
          }
          removeFormGroup(e) {
            this._cleanUpFormContainer(e);
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          addFormArray(e) {
            this._setUpFormContainer(e);
          }
          removeFormArray(e) {
            this._cleanUpFormContainer(e);
          }
          getFormArray(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            this.form.get(e.path).setValue(i);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              TM(this.form, this.directives),
              this.ngSubmit.emit(e),
              "dialog" === e?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e = void 0) {
            this.form.reset(e), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((e) => {
              const i = e.control,
                o = this.form.get(e.path);
              i !== o &&
                (Nd(i || null, e),
                ((t) => t instanceof Xi)(o) &&
                  (Ha(o, e, this.callSetDisabledState), (e.control = o)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(e) {
            const i = this.form.get(e.path);
            SM(i, e), i.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(e) {
            if (this.form) {
              const i = this.form.get(e.path);
              i &&
                (function ZU(t, n) {
                  return Vd(t, n);
                })(i, e) &&
                i.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            Km(this.form, this), this._oldForm && Vd(this._oldForm, this);
          }
          _checkFormPresent() {}
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(Dt, 10), y(Yi, 10), y(Ao, 8));
          });
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (i, o) {
              1 & i &&
                F("submit", function (s) {
                  return o.onSubmit(s);
                })("reset", function () {
                  return o.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [Se([c$]), le, Tt],
          }));
        }
        return t;
      })();
      const h$ = { provide: Ki, useExisting: Ee(() => rs) };
      let rs = (() => {
        class t extends Ki {
          set isDisabled(e) {}
          static #e = (this._ngModelWarningSentOnce = !1);
          constructor(e, i, o, r, s) {
            super(),
              (this._ngModelWarningConfig = s),
              (this._added = !1),
              (this.name = null),
              (this.update = new V()),
              (this._ngModelWarningSent = !1),
              (this._parent = e),
              this._setValidators(i),
              this._setAsyncValidators(o),
              (this.valueAccessor = Xm(0, r));
          }
          ngOnChanges(e) {
            this._added || this._setUpControl(),
              Qm(e, this.viewModel) &&
                ((this.viewModel = this.model),
                this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          get path() {
            return Fd(
              null == this.name ? this.name : this.name.toString(),
              this._parent
            );
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              (this._added = !0);
          }
          static #t = (this.ɵfac = function (i) {
            return new (i || t)(
              y(Nt, 13),
              y(Dt, 10),
              y(Yi, 10),
              y(yn, 10),
              y(Jm, 8)
            );
          });
          static #n = (this.ɵdir = j({
            type: t,
            selectors: [["", "formControlName", ""]],
            inputs: {
              name: ["formControlName", "name"],
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            features: [Se([h$]), le, Tt],
          }));
        }
        return t;
      })();
      const f$ = { provide: yn, useExisting: Ee(() => $a), multi: !0 };
      function VM(t, n) {
        return null == t
          ? `${n}`
          : (n && "object" == typeof n && (n = "Object"),
            `${t}: ${n}`.slice(0, 50));
      }
      let $a = (() => {
          class t extends Io {
            constructor() {
              super(...arguments),
                (this._optionMap = new Map()),
                (this._idCounter = 0),
                (this._compareWith = Object.is);
            }
            set compareWith(e) {
              this._compareWith = e;
            }
            writeValue(e) {
              this.value = e;
              const o = VM(this._getOptionId(e), e);
              this.setProperty("value", o);
            }
            registerOnChange(e) {
              this.onChange = (i) => {
                (this.value = this._getOptionValue(i)), e(this.value);
              };
            }
            _registerOption() {
              return (this._idCounter++).toString();
            }
            _getOptionId(e) {
              for (const i of this._optionMap.keys())
                if (this._compareWith(this._optionMap.get(i), e)) return i;
              return null;
            }
            _getOptionValue(e) {
              const i = (function p$(t) {
                return t.split(":")[0];
              })(e);
              return this._optionMap.has(i) ? this._optionMap.get(i) : e;
            }
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = ct(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["select", "formControlName", "", 3, "multiple", ""],
                ["select", "formControl", "", 3, "multiple", ""],
                ["select", "ngModel", "", 3, "multiple", ""],
              ],
              hostBindings: function (i, o) {
                1 & i &&
                  F("change", function (s) {
                    return o.onChange(s.target.value);
                  })("blur", function () {
                    return o.onTouched();
                  });
              },
              inputs: { compareWith: "compareWith" },
              features: [Se([f$]), le],
            }));
          }
          return t;
        })(),
        ig = (() => {
          class t {
            constructor(e, i, o) {
              (this._element = e),
                (this._renderer = i),
                (this._select = o),
                this._select && (this.id = this._select._registerOption());
            }
            set ngValue(e) {
              null != this._select &&
                (this._select._optionMap.set(this.id, e),
                this._setElementValue(VM(this.id, e)),
                this._select.writeValue(this._select.value));
            }
            set value(e) {
              this._setElementValue(e),
                this._select && this._select.writeValue(this._select.value);
            }
            _setElementValue(e) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "value",
                e
              );
            }
            ngOnDestroy() {
              this._select &&
                (this._select._optionMap.delete(this.id),
                this._select.writeValue(this._select.value));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(Me), y(fn), y($a, 9));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [["option"]],
              inputs: { ngValue: "ngValue", value: "value" },
            }));
          }
          return t;
        })();
      const m$ = { provide: yn, useExisting: Ee(() => og), multi: !0 };
      function BM(t, n) {
        return null == t
          ? `${n}`
          : ("string" == typeof n && (n = `'${n}'`),
            n && "object" == typeof n && (n = "Object"),
            `${t}: ${n}`.slice(0, 50));
      }
      let og = (() => {
          class t extends Io {
            constructor() {
              super(...arguments),
                (this._optionMap = new Map()),
                (this._idCounter = 0),
                (this._compareWith = Object.is);
            }
            set compareWith(e) {
              this._compareWith = e;
            }
            writeValue(e) {
              let i;
              if (((this.value = e), Array.isArray(e))) {
                const o = e.map((r) => this._getOptionId(r));
                i = (r, s) => {
                  r._setSelected(o.indexOf(s.toString()) > -1);
                };
              } else
                i = (o, r) => {
                  o._setSelected(!1);
                };
              this._optionMap.forEach(i);
            }
            registerOnChange(e) {
              this.onChange = (i) => {
                const o = [],
                  r = i.selectedOptions;
                if (void 0 !== r) {
                  const s = r;
                  for (let a = 0; a < s.length; a++) {
                    const c = this._getOptionValue(s[a].value);
                    o.push(c);
                  }
                } else {
                  const s = i.options;
                  for (let a = 0; a < s.length; a++) {
                    const l = s[a];
                    if (l.selected) {
                      const c = this._getOptionValue(l.value);
                      o.push(c);
                    }
                  }
                }
                (this.value = o), e(o);
              };
            }
            _registerOption(e) {
              const i = (this._idCounter++).toString();
              return this._optionMap.set(i, e), i;
            }
            _getOptionId(e) {
              for (const i of this._optionMap.keys())
                if (this._compareWith(this._optionMap.get(i)._value, e))
                  return i;
              return null;
            }
            _getOptionValue(e) {
              const i = (function g$(t) {
                return t.split(":")[0];
              })(e);
              return this._optionMap.has(i) ? this._optionMap.get(i)._value : e;
            }
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = ct(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["select", "multiple", "", "formControlName", ""],
                ["select", "multiple", "", "formControl", ""],
                ["select", "multiple", "", "ngModel", ""],
              ],
              hostBindings: function (i, o) {
                1 & i &&
                  F("change", function (s) {
                    return o.onChange(s.target);
                  })("blur", function () {
                    return o.onTouched();
                  });
              },
              inputs: { compareWith: "compareWith" },
              features: [Se([m$]), le],
            }));
          }
          return t;
        })(),
        rg = (() => {
          class t {
            constructor(e, i, o) {
              (this._element = e),
                (this._renderer = i),
                (this._select = o),
                this._select && (this.id = this._select._registerOption(this));
            }
            set ngValue(e) {
              null != this._select &&
                ((this._value = e),
                this._setElementValue(BM(this.id, e)),
                this._select.writeValue(this._select.value));
            }
            set value(e) {
              this._select
                ? ((this._value = e),
                  this._setElementValue(BM(this.id, e)),
                  this._select.writeValue(this._select.value))
                : this._setElementValue(e);
            }
            _setElementValue(e) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "value",
                e
              );
            }
            _setSelected(e) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "selected",
                e
              );
            }
            ngOnDestroy() {
              this._select &&
                (this._select._optionMap.delete(this.id),
                this._select.writeValue(this._select.value));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(Me), y(fn), y(og, 9));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [["option"]],
              inputs: { ngValue: "ngValue", value: "value" },
            }));
          }
          return t;
        })();
      let Ro = (() => {
        class t {
          constructor() {
            this._validator = Id;
          }
          ngOnChanges(e) {
            if (this.inputName in e) {
              const i = this.normalizeInput(e[this.inputName].currentValue);
              (this._enabled = this.enabled(i)),
                (this._validator = this._enabled
                  ? this.createValidator(i)
                  : Id),
                this._onChange && this._onChange();
            }
          }
          validate(e) {
            return this._validator(e);
          }
          registerOnValidatorChange(e) {
            this._onChange = e;
          }
          enabled(e) {
            return null != e;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵdir = j({ type: t, features: [Tt] }));
        }
        return t;
      })();
      const v$ = { provide: Dt, useExisting: Ee(() => Po), multi: !0 };
      let Po = (() => {
        class t extends Ro {
          constructor() {
            super(...arguments),
              (this.inputName = "required"),
              (this.normalizeInput = Ur),
              (this.createValidator = (e) => nM);
          }
          enabled(e) {
            return e;
          }
          static #e = (this.ɵfac = (function () {
            let e;
            return function (o) {
              return (e || (e = ct(t)))(o || t);
            };
          })());
          static #t = (this.ɵdir = j({
            type: t,
            selectors: [
              [
                "",
                "required",
                "",
                "formControlName",
                "",
                3,
                "type",
                "checkbox",
              ],
              ["", "required", "", "formControl", "", 3, "type", "checkbox"],
              ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
            ],
            hostVars: 1,
            hostBindings: function (i, o) {
              2 & i && We("required", o._enabled ? "" : null);
            },
            inputs: { required: "required" },
            features: [Se([v$]), le],
          }));
        }
        return t;
      })();
      const w$ = { provide: Dt, useExisting: Ee(() => sg), multi: !0 };
      let sg = (() => {
          class t extends Ro {
            constructor() {
              super(...arguments),
                (this.inputName = "minlength"),
                (this.normalizeInput = (e) =>
                  (function jM(t) {
                    return "number" == typeof t ? t : parseInt(t, 10);
                  })(e)),
                (this.createValidator = (e) => rM(e));
            }
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = ct(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["", "minlength", "", "formControlName", ""],
                ["", "minlength", "", "formControl", ""],
                ["", "minlength", "", "ngModel", ""],
              ],
              hostVars: 1,
              hostBindings: function (i, o) {
                2 & i && We("minlength", o._enabled ? o.minlength : null);
              },
              inputs: { minlength: "minlength" },
              features: [Se([w$]), le],
            }));
          }
          return t;
        })(),
        YM = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [kM] }));
          }
          return t;
        })();
      class KM extends kd {
        constructor(n, e, i) {
          super(Wm(e), Ym(i, e)),
            (this.controls = n),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(n) {
          return this.controls[this._adjustIndex(n)];
        }
        push(n, e = {}) {
          this.controls.push(n),
            this._registerControl(n),
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        insert(n, e, i = {}) {
          this.controls.splice(n, 0, e),
            this._registerControl(e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent });
        }
        removeAt(n, e = {}) {
          let i = this._adjustIndex(n);
          i < 0 && (i = 0),
            this.controls[i] &&
              this.controls[i]._registerOnCollectionChange(() => {}),
            this.controls.splice(i, 1),
            this.updateValueAndValidity({ emitEvent: e.emitEvent });
        }
        setControl(n, e, i = {}) {
          let o = this._adjustIndex(n);
          o < 0 && (o = 0),
            this.controls[o] &&
              this.controls[o]._registerOnCollectionChange(() => {}),
            this.controls.splice(o, 1),
            e && (this.controls.splice(o, 0, e), this._registerControl(e)),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(n, e = {}) {
          xM(this, 0, n),
            n.forEach((i, o) => {
              DM(this, !1, o),
                this.at(o).setValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(n, e = {}) {
          null != n &&
            (n.forEach((i, o) => {
              this.at(o) &&
                this.at(o).patchValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e));
        }
        reset(n = [], e = {}) {
          this._forEachChild((i, o) => {
            i.reset(n[o], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this.controls.map((n) => n.getRawValue());
        }
        clear(n = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: n.emitEvent }));
        }
        _adjustIndex(n) {
          return n < 0 ? n + this.length : n;
        }
        _syncPendingControls() {
          let n = this.controls.reduce(
            (e, i) => !!i._syncPendingControls() || e,
            !1
          );
          return n && this.updateValueAndValidity({ onlySelf: !0 }), n;
        }
        _forEachChild(n) {
          this.controls.forEach((e, i) => {
            n(e, i);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((n) => n.enabled || this.disabled)
            .map((n) => n.value);
        }
        _anyControls(n) {
          return this.controls.some((e) => e.enabled && n(e));
        }
        _setUpControls() {
          this._forEachChild((n) => this._registerControl(n));
        }
        _allControlsDisabled() {
          for (const n of this.controls) if (n.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(n) {
          n.setParent(this),
            n._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(n) {
          return this.at(n) ?? null;
        }
      }
      function ZM(t) {
        return (
          !!t &&
          (void 0 !== t.asyncValidators ||
            void 0 !== t.validators ||
            void 0 !== t.updateOn)
        );
      }
      let ag = (() => {
          class t {
            constructor() {
              this.useNonNullable = !1;
            }
            get nonNullable() {
              const e = new t();
              return (e.useNonNullable = !0), e;
            }
            group(e, i = null) {
              const o = this._reduceControls(e);
              let r = {};
              return (
                ZM(i)
                  ? (r = i)
                  : null !== i &&
                    ((r.validators = i.validator),
                    (r.asyncValidators = i.asyncValidator)),
                new is(o, r)
              );
            }
            record(e, i = null) {
              const o = this._reduceControls(e);
              return new EM(o, i);
            }
            control(e, i, o) {
              let r = {};
              return this.useNonNullable
                ? (ZM(i)
                    ? (r = i)
                    : ((r.validators = i), (r.asyncValidators = o)),
                  new Xi(e, { ...r, nonNullable: !0 }))
                : new Xi(e, i, o);
            }
            array(e, i, o) {
              const r = e.map((s) => this._createControl(s));
              return new KM(r, i, o);
            }
            _reduceControls(e) {
              const i = {};
              return (
                Object.keys(e).forEach((o) => {
                  i[o] = this._createControl(e[o]);
                }),
                i
              );
            }
            _createControl(e) {
              return e instanceof Xi || e instanceof kd
                ? e
                : Array.isArray(e)
                ? this.control(
                    e[0],
                    e.length > 1 ? e[1] : null,
                    e.length > 2 ? e[2] : null
                  )
                : this.control(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        QM = (() => {
          class t {
            static withConfig(e) {
              return {
                ngModule: t,
                providers: [
                  { provide: Ao, useValue: e.callSetDisabledState ?? ja },
                ],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [YM] }));
          }
          return t;
        })(),
        XM = (() => {
          class t {
            static withConfig(e) {
              return {
                ngModule: t,
                providers: [
                  {
                    provide: Jm,
                    useValue: e.warnOnNgModelWithFormControl ?? "always",
                  },
                  { provide: Ao, useValue: e.callSetDisabledState ?? ja },
                ],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [YM] }));
          }
          return t;
        })(),
        ko = (() => {
          class t {
            uploadToNaukri(e) {
              const i = new FormData();
              return (
                i.append("file", e), this.http.post("api/naukri/upload", i)
              );
            }
            uploadToLinkedIn(e) {
              const i = new FormData();
              return (
                i.append("file", e), this.http.post("api/linkedin/upload", i)
              );
            }
            uploadToIndeed(e) {
              const i = new FormData();
              return (
                i.append("file", e), this.http.post("api/indeed/upload", i)
              );
            }
            constructor(e) {
              (this.http = e),
                (this.apiUrl4 = "http://api.geonames.org"),
                (this.apiUrl = "http://localhost:4000/api"),
                (this.apiUrl1 = "http://localhost:5001/api"),
                (this.apiUrl2 = "http://localhost:3000/api"),
                (this.apiUrl3 = "http://localhost:4004/api"),
                (this.jobApiUrl = "http://localhost:5002/api/jobs");
            }
            getJobs() {
              return this.http.get(this.jobApiUrl);
            }
            createJob(e) {
              return this.http.post(this.jobApiUrl, e);
            }
            updateJob(e, i) {
              return this.http.patch(`${this.jobApiUrl}/${e}`, i);
            }
            deleteJob(e) {
              return this.http.delete(`${this.jobApiUrl}/${e}`);
            }
            verifyOTP(e, i) {
              return this.http.post("http://localhost:3000/api/verify-otp", {
                email: e,
                otp: i,
              });
            }
            uploadResume(e) {
              const i = new FormData();
              return (
                i.append("resume", e),
                this.http.post(`${this.apiUrl}/upload`, i).toPromise()
              );
            }
            storeResumeData(e) {
              return this.http.post(`${this.apiUrl}/resume`, e).toPromise();
            }
            analyzeResume(e) {
              return (
                console.log("Analyzing resume:", e),
                this.http.post(`${this.apiUrl3}/resume-analysis`, e).pipe(
                  $e((o) => console.log("Analysis result:", o)),
                  on((o) => {
                    throw (console.error("Error analyzing resume:", o), o);
                  })
                )
              );
            }
            getResumeData() {
              return this.http.get(this.apiUrl).pipe(
                $e((e) => console.log("Resume data fetched:", e)),
                on((e) => {
                  throw (console.error("Error fetching resume data:", e), e);
                })
              );
            }
            postJob(e) {
              return this.http.post("http://localhost:5002/api/jobs", e);
            }
            getJobPortals() {
              return this.http.get("http://localhost:5002/api/job-portals");
            }
            generateDescription(e) {
              return this.http
                .post(`${this.jobApiUrl}/generate-description`, e)
                .pipe(
                  $e((o) => {
                    console.log("Job description generated:", o);
                  }),
                  on(this.handleError)
                );
            }
            handleError(e) {
              let i = "Unknown error occurred";
              return (
                (i =
                  e.error instanceof ErrorEvent
                    ? `Error: ${e.error.message}`
                    : `Error Code: ${e.status}\nMessage: ${e.message}`),
                console.error(i),
                Wr(i)
              );
            }
            searchProfiles(e) {
              return this.http.post(`${this.jobApiUrl}/search-profiles`, e);
            }
            postJobToNaukri(e) {
              return this.http.post(`${this.jobApiUrl}/post-to-naukri`, e).pipe(
                $e((o) => console.log("Job posted to Naukri:", o)),
                on((o) => {
                  throw (console.error("Error posting job to Naukri:", o), o);
                })
              );
            }
            postJobToLinkedIn(e) {
              return this.http
                .post(`${this.jobApiUrl}/post-to-linkedin`, e)
                .pipe(
                  $e((o) => console.log("Job posted to LinkedIn:", o)),
                  on((o) => {
                    throw (
                      (console.error("Error posting job to LinkedIn:", o), o)
                    );
                  })
                );
            }
            postJobToIndeed(e) {
              return this.http.post(`${this.jobApiUrl}/post-to-indeed`, e).pipe(
                $e((o) => console.log("Job posted to Indeed:", o)),
                on((o) => {
                  throw (console.error("Error posting job to Indeed:", o), o);
                })
              );
            }
            applyForJob(e) {
              return this.http.post("http://localhost:5002/api/apply", e);
            }
            searchLocations(e) {
              return this.http.get(
                `${this.apiUrl4}/searchJSON?q=${e}&maxRows=5&username=nav12`
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(mi));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      function E$(t, n) {
        1 & t && (_(0, "div"), w(1, " Email is required. "), g());
      }
      function M$(t, n) {
        1 & t &&
          (_(0, "div"), w(1, " Please enter a valid email address. "), g());
      }
      function S$(t, n) {
        if (
          (1 & t &&
            (_(0, "div", 15),
            B(1, E$, 2, 0, "div", 16),
            B(2, M$, 2, 0, "div", 16),
            g()),
          2 & t)
        ) {
          const e = L(2);
          M(1),
            T(
              "ngIf",
              null == e.emailForm.get("email").errors
                ? null
                : e.emailForm.get("email").errors.required
            ),
            M(1),
            T(
              "ngIf",
              null == e.emailForm.get("email").errors
                ? null
                : e.emailForm.get("email").errors.email
            );
        }
      }
      function T$(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "form", 8),
            F("ngSubmit", function () {
              return Ce(e), we(L().saveEmail());
            }),
            _(1, "div", 9)(2, "label", 10),
            w(3, "Enter your email"),
            g(),
            ge(4, "input", 11),
            _(5, "div", 12),
            w(6, "We'll never share your email with anyone else."),
            g(),
            B(7, S$, 3, 2, "div", 13),
            g(),
            _(8, "button", 14),
            w(9, " Submit "),
            g()();
        }
        if (2 & t) {
          const e = L();
          T("formGroup", e.emailForm),
            M(7),
            T(
              "ngIf",
              e.emailForm.get("email").invalid &&
                (e.emailForm.get("email").dirty ||
                  e.emailForm.get("email").touched)
            ),
            M(1),
            T("disabled", e.emailForm.invalid);
        }
      }
      function I$(t, n) {
        1 & t && (_(0, "div"), w(1, " OTP is required. "), g());
      }
      function A$(t, n) {
        if (
          (1 & t && (_(0, "div", 15), B(1, I$, 2, 0, "div", 16), g()), 2 & t)
        ) {
          const e = L(2);
          M(1),
            T(
              "ngIf",
              null == e.otpForm.get("otp").errors
                ? null
                : e.otpForm.get("otp").errors.required
            );
        }
      }
      function O$(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "form", 8),
            F("ngSubmit", function () {
              return Ce(e), we(L().verifyOTP());
            }),
            _(1, "div", 9)(2, "label", 17),
            w(3, "Enter OTP"),
            g(),
            ge(4, "input", 18),
            B(5, A$, 2, 1, "div", 13),
            g(),
            _(6, "button", 14),
            w(7, " Verify OTP "),
            g()();
        }
        if (2 & t) {
          const e = L();
          T("formGroup", e.otpForm),
            M(5),
            T(
              "ngIf",
              e.otpForm.get("otp").invalid &&
                (e.otpForm.get("otp").dirty || e.otpForm.get("otp").touched)
            ),
            M(1),
            T("disabled", e.otpForm.invalid);
        }
      }
      function R$(t, n) {
        if ((1 & t && (_(0, "div", 19), w(1), g()), 2 & t)) {
          const e = L();
          M(1), Ne(" ", e.errorMessage, " ");
        }
      }
      let P$ = (() => {
        class t {
          constructor(e, i, o, r) {
            (this.fb = e),
              (this.http = i),
              (this.router = o),
              (this.resumeService = r),
              (this.otpSent = !1),
              (this.errorMessage = "");
          }
          ngOnInit() {
            (this.emailForm = this.fb.group({
              email: ["", [Ke.required, Ke.email]],
            })),
              (this.otpForm = this.fb.group({ otp: ["", [Ke.required]] }));
          }
          saveEmail() {
            this.emailForm.invalid
              ? this.emailForm.markAllAsTouched()
              : this.http
                  .post("http://localhost:3000/api/email", {
                    email: this.emailForm.value.email,
                  })
                  .subscribe({
                    next: (e) => {
                      (this.otpSent = !0), (this.errorMessage = "");
                    },
                    error: (e) => {
                      (this.errorMessage =
                        "Failed to send OTP. Please try again."),
                        console.error("Error sending email:", e);
                    },
                  });
          }
          verifyOTP() {
            const e = this.emailForm.value.email,
              i = this.otpForm.value.otp;
            console.log("Verifying OTP:", e, i),
              this.resumeService.verifyOTP(e, i).subscribe({
                next: (o) => {
                  o.success
                    ? (console.log("OTP verified successfully"),
                      this.router.navigate(["/upload"]))
                    : (console.error("OTP verification failed"),
                      (this.errorMessage = "Invalid OTP. Please try again."));
                },
                error: (o) => {
                  console.error("Error verifying OTP:", o),
                    (this.errorMessage =
                      "Failed to verify OTP. Please try again.");
                },
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(ag), y(mi), y(et), y(ko));
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["app-email-input"]],
            decls: 10,
            vars: 3,
            consts: [
              [1, "container", "mt-4"],
              [1, "row", "justify-content-center"],
              [1, "col-md-6"],
              [1, "card"],
              [1, "card-header", "bg-primary", "text-white", "text-center"],
              [1, "card-body"],
              [3, "formGroup", "ngSubmit", 4, "ngIf"],
              ["class", "text-danger mt-3", 4, "ngIf"],
              [3, "formGroup", "ngSubmit"],
              [1, "mb-3"],
              ["for", "email", 1, "form-label"],
              [
                "type",
                "email",
                "id",
                "email",
                "formControlName",
                "email",
                "required",
                "",
                1,
                "form-control",
              ],
              ["id", "emailHelp", 1, "form-text"],
              ["class", "text-danger", 4, "ngIf"],
              [
                "type",
                "submit",
                1,
                "btn",
                "btn-primary",
                "btn-block",
                "mt-3",
                3,
                "disabled",
              ],
              [1, "text-danger"],
              [4, "ngIf"],
              ["for", "otp", 1, "form-label"],
              [
                "type",
                "text",
                "id",
                "otp",
                "formControlName",
                "otp",
                "required",
                "",
                1,
                "form-control",
              ],
              [1, "text-danger", "mt-3"],
            ],
            template: function (i, o) {
              1 & i &&
                (_(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(
                  4,
                  "h5",
                  4
                ),
                w(5, "Login or Sign Up"),
                g(),
                _(6, "div", 5),
                B(7, T$, 10, 3, "form", 6),
                B(8, O$, 8, 3, "form", 6),
                B(9, R$, 2, 1, "div", 7),
                g()()()()()),
                2 & i &&
                  (M(7),
                  T("ngIf", !o.otpSent),
                  M(1),
                  T("ngIf", o.otpSent),
                  M(1),
                  T("ngIf", o.errorMessage));
            },
            dependencies: [_n, Ji, vi, Zi, Qi, Po, Oo, rs],
            encapsulation: 2,
          }));
        }
        return t;
      })();
      function JM(t, n, e, i, o, r, s) {
        try {
          var a = t[r](s),
            l = a.value;
        } catch (c) {
          return void e(c);
        }
        a.done ? n(l) : Promise.resolve(l).then(i, o);
      }
      function Hd(t) {
        return function () {
          var n = this,
            e = arguments;
          return new Promise(function (i, o) {
            var r = t.apply(n, e);
            function s(l) {
              JM(r, i, o, s, a, "next", l);
            }
            function a(l) {
              JM(r, i, o, s, a, "throw", l);
            }
            s(void 0);
          });
        };
      }
      function k$(t, n) {
        if ((1 & t && (_(0, "span"), w(1), g()), 2 & t)) {
          const e = L();
          M(1), qn(e.selectedFile.name);
        }
      }
      function F$(t, n) {
        1 & t && (_(0, "span"), w(1, "Drag & Drop your resume here"), g());
      }
      function N$(t, n) {
        if ((1 & t && (_(0, "div", 15), w(1), g()), 2 & t)) {
          const e = L();
          M(1), Ne(" ", e.errorMessage, " ");
        }
      }
      let L$ = (() => {
        class t {
          constructor(e, i) {
            (this.resumeService = e),
              (this.router = i),
              (this.uploadInProgress = !1),
              (this.errorMessage = "");
          }
          onDragOver(e) {
            e.preventDefault(), e.stopPropagation(), this.highlightDropArea();
          }
          onDragEnter(e) {
            e.preventDefault(), e.stopPropagation(), this.highlightDropArea();
          }
          onDragLeave(e) {
            e.preventDefault(), e.stopPropagation(), this.unhighlightDropArea();
          }
          onDrop(e) {
            e.preventDefault(), e.stopPropagation(), this.unhighlightDropArea();
            const i = e.dataTransfer?.files;
            i && this.handleFiles(i);
          }
          handleFiles(e) {
            e.length > 0 && (this.selectedFile = e[0]);
          }
          highlightDropArea() {
            const e = document.getElementById("drop-area");
            e && e.classList.add("highlight");
          }
          unhighlightDropArea() {
            const e = document.getElementById("drop-area");
            e && e.classList.remove("highlight");
          }
          handleFileInput(e) {
            const o = e.target.files;
            o && o.length > 0 && (this.selectedFile = o[0]);
          }
          handleUpload() {
            var e = this;
            return Hd(function* () {
              if (!e.selectedFile)
                return (
                  (e.errorMessage = "Please select a file before uploading."),
                  void e.hideErrorMessageAfterDelay(2e3)
                );
              (e.uploadInProgress = !0), (e.errorMessage = "");
              try {
                const i = yield e.resumeService.uploadResume(e.selectedFile);
                i
                  ? e.navigateToResumeForm(i)
                  : ((e.errorMessage =
                      "Failed to extract data from the resume."),
                    e.hideErrorMessageAfterDelay(2e3));
              } catch (i) {
                console.error("Error uploading resume:", i),
                  (e.errorMessage =
                    "Error uploading resume. Please try again later."),
                  e.hideErrorMessageAfterDelay(2e3);
              } finally {
                e.uploadInProgress = !1;
              }
            })();
          }
          navigateToResumeForm(e) {
            this.router.navigate(["/resume"], {
              queryParams: { data: JSON.stringify(e) },
            });
          }
          hideErrorMessageAfterDelay(e) {
            setTimeout(() => {
              this.errorMessage = "";
            }, e);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(ko), y(et));
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["app-resumeupload"]],
            decls: 23,
            vars: 3,
            consts: [
              [1, "container", "mt-4"],
              [1, "row", "justify-content-center"],
              [1, "col-md-6"],
              [1, "card"],
              [1, "card-header", "bg-primary", "text-white"],
              [
                "id",
                "drop-area",
                1,
                "card-body",
                3,
                "dragover",
                "dragenter",
                "dragleave",
                "drop",
              ],
              ["id", "upload-form"],
              [1, "mb-3"],
              ["for", "resume", 1, "form-label"],
              [
                "type",
                "file",
                "id",
                "resume",
                "accept",
                ".pdf,.doc,.docx",
                1,
                "form-control",
                3,
                "change",
              ],
              ["id", "fileHelp", 1, "form-text"],
              [1, "upload-text"],
              [4, "ngIf"],
              ["type", "button", 1, "btn", "btn-primary", 3, "click"],
              ["class", "alert alert-danger mt-3", "role", "alert", 4, "ngIf"],
              ["role", "alert", 1, "alert", "alert-danger", "mt-3"],
            ],
            template: function (i, o) {
              1 & i &&
                (_(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(
                  4,
                  "h5",
                  4
                ),
                w(5, "Upload Your Resume"),
                g(),
                _(6, "div", 5),
                F("dragover", function (s) {
                  return o.onDragOver(s);
                })("dragenter", function (s) {
                  return o.onDragEnter(s);
                })("dragleave", function (s) {
                  return o.onDragLeave(s);
                })("drop", function (s) {
                  return o.onDrop(s);
                }),
                _(7, "form", 6)(8, "div", 7)(9, "label", 8),
                w(10, "Choose File:"),
                g(),
                _(11, "input", 9),
                F("change", function (s) {
                  return o.handleFileInput(s);
                }),
                g(),
                _(12, "div", 10),
                w(13, " Supported file formats: PDF "),
                g()(),
                _(14, "div", 11)(15, "p"),
                B(16, k$, 2, 1, "span", 12),
                B(17, F$, 2, 0, "span", 12),
                g(),
                _(18, "span"),
                w(19, "or"),
                g()(),
                _(20, "button", 13),
                F("click", function () {
                  return o.handleUpload();
                }),
                w(21, "Upload"),
                g(),
                B(22, N$, 2, 1, "div", 14),
                g()()()()()()),
                2 & i &&
                  (M(16),
                  T("ngIf", o.selectedFile),
                  M(1),
                  T("ngIf", !o.selectedFile),
                  M(5),
                  T("ngIf", o.errorMessage));
            },
            dependencies: [_n, Ji, Qi, os],
            styles: [
              "#drop-area[_ngcontent-%COMP%]{border:2px dashed #ccc;border-radius:5px;padding:20px;text-align:center;transition:border-color .3s ease-in-out}#drop-area.highlight[_ngcontent-%COMP%]{border-color:#007bff}.upload-text[_ngcontent-%COMP%]{margin-bottom:10px}.upload-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:5px}.upload-text[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:block;font-weight:700}",
            ],
          }));
        }
        return t;
      })();
      function V$(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "div", 29)(1, "label", 30),
            w(2),
            g(),
            _(3, "input", 31),
            F("ngModelChange", function (o) {
              return we((Ce(e).$implicit.company = o));
            }),
            g(),
            _(4, "label", 30),
            w(5),
            g(),
            _(6, "input", 31),
            F("ngModelChange", function (o) {
              return we((Ce(e).$implicit.period = o));
            }),
            g()();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = n.index;
          M(1),
            Ni("for", "company", i, ""),
            M(1),
            Ne("Company ", i + 1, ""),
            M(1),
            Ni("id", "company", i, "")("name", "company", i, ""),
            T("ngModel", e.company),
            M(1),
            Ni("for", "period", i, ""),
            M(1),
            Ne("Period ", i + 1, ""),
            M(1),
            Ni("id", "period", i, "")("name", "period", i, ""),
            T("ngModel", e.period);
        }
      }
      function B$(t, n) {
        if ((1 & t && (_(0, "li"), w(1), g()), 2 & t)) {
          const e = n.$implicit;
          M(1), Ne(" ", e.title, " ");
        }
      }
      function j$(t, n) {
        if (
          (1 & t &&
            (_(0, "div")(1, "label"),
            w(2),
            g(),
            _(3, "ul"),
            B(4, B$, 2, 1, "li", 21),
            g()()),
          2 & t)
        ) {
          const e = n.$implicit;
          M(2),
            Ne("Period: ", e.period, ""),
            M(2),
            T("ngForOf", e.educationEntries);
        }
      }
      function H$(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "input", 31),
            F("ngModelChange", function (o) {
              Ce(e);
              const r = L().index;
              return we((L().extractedData.certifications[r] = o));
            }),
            g();
        }
        if (2 & t) {
          const e = L().index,
            i = L();
          Ni("id", "certification_", e, "")("name", "certification_", e, ""),
            T("ngModel", i.extractedData.certifications[e]);
        }
      }
      function U$(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "li", 32)(1, "div", 33),
            B(2, H$, 1, 3, "input", 34),
            _(3, "div", 35)(4, "button", 36),
            F("click", function () {
              const r = Ce(e).index;
              return we(L().removeCertification(r));
            }),
            w(5, " Remove "),
            g()()()();
        }
        if (2 & t) {
          const e = L();
          M(2), T("ngIf", e.extractedData && e.extractedData.certifications);
        }
      }
      function $$(t, n) {
        1 & t && (_(0, "div", 37), w(1, " Resume saved successfully! "), g());
      }
      let z$ = (() => {
        class t {
          constructor(e, i, o) {
            (this.route = e),
              (this.http = i),
              (this.router = o),
              (this.extractedData = {
                fullName: "",
                email: "",
                certifications: [],
                education: [],
                experience: [],
                skills: [],
                languages: [],
              }),
              (this.submissionSuccess = !1);
          }
          ngOnInit() {
            this.route.queryParams.subscribe((e) => {
              if (e.data)
                try {
                  const i = JSON.parse(e.data);
                  (this.extractedData = i.data),
                    (this.extractedData.fullName =
                      this.extractFullNameFromEmail(this.extractedData.email)),
                    this.initializeArrays(),
                    this.calculateExperienceDuration();
                } catch (i) {
                  console.error("Error parsing resume data:", i),
                    (this.extractedData = {
                      fullName: "",
                      email: "",
                      certifications: [],
                      education: [],
                      experience: [],
                      skills: [],
                      languages: [],
                    });
                }
            });
          }
          extractFullNameFromEmail(e) {
            const i = e.split("@");
            return i.length > 1 ? i[0].replace(/[^a-zA-Z ]+/g, " ").trim() : "";
          }
          initializeArrays() {
            this.extractedData &&
              ((this.extractedData.certifications =
                this.extractedData.certifications || []),
              (this.extractedData.education =
                this.extractedData.education || []),
              this.extractedData.education.forEach((e) => {
                e.educationEntries = e.educationEntries || [{ title: "" }];
              }));
          }
          calculateExperienceDuration() {
            this.extractedData.experience &&
              this.extractedData.experience.forEach((e) => {});
          }
          handleClickSubmit() {
            this.http
              .post("http://localhost:5001/api/resume", this.extractedData)
              .subscribe({
                next: (e) => {
                  console.log("Submission successful:", e),
                    e.analysisResult
                      ? this.router.navigate([
                          "/resume-analysis",
                          {
                            analysisResult: JSON.stringify({
                              skills: e.analysisResult.skills || [],
                              recommendedJobs:
                                e.analysisResult.recommendedJobs || [],
                            }),
                          },
                        ])
                      : console.error(
                          "Analysis result is missing in the response"
                        );
                },
                error: (e) => {
                  console.error("Error storing resume data:", e);
                },
              });
          }
          updateCertification(e, i) {
            this.extractedData.certifications &&
              (this.extractedData.certifications[i] = e);
          }
          removeCertification(e) {
            this.extractedData.certifications &&
              this.extractedData.certifications.splice(e, 1);
          }
          addCertification() {
            this.extractedData.certifications &&
              this.extractedData.certifications.push("");
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(_i), y(mi), y(et));
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["app-resume-form"]],
            decls: 48,
            vars: 9,
            consts: [
              [1, "container", "mt-4"],
              [1, "row", "justify-content-center"],
              [1, "col-md-8"],
              [1, "card", "shadow"],
              [1, "card-header", "bg-primary", "text-white"],
              [1, "card-body"],
              [3, "ngSubmit"],
              ["resumeForm", "ngForm"],
              [1, "form-group"],
              ["for", "fullName"],
              [
                "type",
                "text",
                "id",
                "fullName",
                "name",
                "fullName",
                "required",
                "",
                1,
                "form-control",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["for", "email"],
              [
                "type",
                "email",
                "id",
                "email",
                "name",
                "email",
                "required",
                "",
                1,
                "form-control",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["for", "phoneNumber"],
              [
                "type",
                "tel",
                "id",
                "phoneNumber",
                "name",
                "phoneNumber",
                1,
                "form-control",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["for", "address"],
              [
                "id",
                "address",
                "name",
                "address",
                1,
                "form-control",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["for", "skills"],
              [
                "type",
                "text",
                "id",
                "skills",
                "name",
                "skills",
                1,
                "form-control",
                3,
                "ngModel",
                "ngModelChange",
              ],
              ["for", "experience"],
              ["class", "mb-3", 4, "ngFor", "ngForOf"],
              [4, "ngFor", "ngForOf"],
              ["for", "certifications"],
              [1, "list-group"],
              ["class", "list-group-item", 4, "ngFor", "ngForOf"],
              [
                "type",
                "button",
                1,
                "btn",
                "btn-primary",
                "btn-sm",
                "mt-2",
                3,
                "click",
              ],
              [1, "text-center", "mt-3"],
              ["type", "submit", 1, "btn", "btn-primary", "btn-lg"],
              ["class", "alert alert-success mt-3", 4, "ngIf"],
              [1, "mb-3"],
              [3, "for"],
              [
                "type",
                "text",
                1,
                "form-control",
                3,
                "id",
                "name",
                "ngModel",
                "ngModelChange",
              ],
              [1, "list-group-item"],
              [1, "input-group"],
              [
                "type",
                "text",
                "class",
                "form-control",
                3,
                "id",
                "name",
                "ngModel",
                "ngModelChange",
                4,
                "ngIf",
              ],
              [1, "input-group-append"],
              ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
              [1, "alert", "alert-success", "mt-3"],
            ],
            template: function (i, o) {
              1 & i &&
                (_(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(
                  4,
                  "h5",
                  4
                ),
                w(5, "Resume Information"),
                g(),
                _(6, "div", 5)(7, "form", 6, 7),
                F("ngSubmit", function () {
                  return o.handleClickSubmit();
                }),
                _(9, "div", 8)(10, "label", 9),
                w(11, "Name"),
                g(),
                _(12, "input", 10),
                F("ngModelChange", function (s) {
                  return (o.extractedData.fullName = s);
                }),
                g()(),
                _(13, "div", 8)(14, "label", 11),
                w(15, "Email"),
                g(),
                _(16, "input", 12),
                F("ngModelChange", function (s) {
                  return (o.extractedData.email = s);
                }),
                g()(),
                _(17, "div", 8)(18, "label", 13),
                w(19, "Phone"),
                g(),
                _(20, "input", 14),
                F("ngModelChange", function (s) {
                  return (o.extractedData.phoneNumber = s);
                }),
                g()(),
                _(21, "div", 8)(22, "label", 15),
                w(23, "Address"),
                g(),
                _(24, "textarea", 16),
                F("ngModelChange", function (s) {
                  return (o.extractedData.address = s);
                }),
                g()(),
                _(25, "div", 8)(26, "label", 17),
                w(27, "Skills"),
                g(),
                _(28, "input", 18),
                F("ngModelChange", function (s) {
                  return (o.extractedData.skills = s);
                }),
                g()(),
                _(29, "div", 8)(30, "label", 19),
                w(31, "Work History"),
                g(),
                B(32, V$, 7, 10, "div", 20),
                g(),
                _(33, "div")(34, "h4"),
                w(35, "Education"),
                g(),
                B(36, j$, 5, 2, "div", 21),
                g(),
                _(37, "div", 8)(38, "label", 22),
                w(39, "Certifications"),
                g(),
                _(40, "ul", 23),
                B(41, U$, 6, 1, "li", 24),
                g(),
                _(42, "button", 25),
                F("click", function () {
                  return o.addCertification();
                }),
                w(43, " Add Certification "),
                g()(),
                _(44, "div", 26)(45, "button", 27),
                w(46, " Submit "),
                g()()(),
                B(47, $$, 2, 0, "div", 28),
                g()()()()()),
                2 & i &&
                  (M(12),
                  T("ngModel", o.extractedData.fullName),
                  M(4),
                  T("ngModel", o.extractedData.email),
                  M(4),
                  T("ngModel", o.extractedData.phoneNumber),
                  M(4),
                  T("ngModel", o.extractedData.address),
                  M(4),
                  T("ngModel", o.extractedData.skills),
                  M(4),
                  T("ngForOf", o.extractedData.experience),
                  M(4),
                  T("ngForOf", o.extractedData.education),
                  M(5),
                  T("ngForOf", o.extractedData.certifications),
                  M(6),
                  T("ngIf", o.submissionSuccess));
            },
            dependencies: [Hi, _n, Ji, vi, Zi, Qi, Po, Bd, os],
            styles: [
              ".card[_ngcontent-%COMP%]{margin-top:20px;border-radius:10px;border:1px solid rgba(0,0,0,.125)}.card-header[_ngcontent-%COMP%]{border-radius:10px 10px 0 0}.form-group[_ngcontent-%COMP%]{margin-bottom:20px}textarea[_ngcontent-%COMP%]{min-height:100px}.btn-lg[_ngcontent-%COMP%]{padding:10px 30px;font-size:1.2rem}label[_ngcontent-%COMP%]{font-weight:800}@media (max-width: 768px){.col-md-8[_ngcontent-%COMP%]{max-width:100%}}",
            ],
          }));
        }
        return t;
      })();
      function G$(t, n) {
        if ((1 & t && (_(0, "li"), w(1), g()), 2 & t)) {
          const e = n.$implicit;
          M(1), Ne(" ", e, " ");
        }
      }
      function W$(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "div", 3)(1, "div", 4)(2, "div", 5)(3, "div", 6)(4, "h5", 7),
            w(5, "Resume Analysis Results"),
            g()(),
            _(6, "div", 8)(7, "div", 9)(8, "h6", 10),
            w(9, "Skills"),
            g(),
            _(10, "p", 11),
            w(11),
            g()(),
            _(12, "div", 9)(13, "h6", 10),
            w(14, "Recommended Jobs"),
            g(),
            _(15, "ul", 12),
            B(16, G$, 2, 1, "li", 13),
            g()(),
            _(17, "button", 14),
            F("click", function () {
              return Ce(e), we(L().redirectToExternalLink());
            }),
            w(18, "NEXT"),
            g()()()()();
        }
        if (2 & t) {
          const e = L();
          M(11),
            qn(e.analysisResult.skills.join(", ")),
            M(5),
            T("ngForOf", e.analysisResult.recommendedJobs);
        }
      }
      function Y$(t, n) {
        if (
          (1 & t &&
            (_(0, "div", 15)(1, "div", 4)(2, "div", 5)(3, "div", 6)(4, "h5", 7),
            w(5, "Job Details"),
            g()(),
            _(6, "div", 8)(7, "div", 9)(8, "h6", 10),
            w(9, "Job Title"),
            g(),
            _(10, "p", 11),
            w(11),
            g()(),
            _(12, "div", 9)(13, "h6", 10),
            w(14, "Company Name"),
            g(),
            _(15, "p", 11),
            w(16),
            g()()()()()()),
          2 & t)
        ) {
          const e = L();
          M(11), qn(e.jobDetails.jobTitle), M(5), qn(e.jobDetails.companyName);
        }
      }
      let K$ = (() => {
        class t {
          constructor(e, i, o) {
            (this.route = e),
              (this.router = i),
              (this.http = o),
              (this.job = { postedDate: new Date() });
          }
          ngOnInit() {
            this.route.params.subscribe((e) => {
              const i = e.id;
              if (i) this.fetchJobDetails(i);
              else if (e.analysisResult)
                try {
                  (this.analysisResult = JSON.parse(e.analysisResult)),
                    console.log("Parsed analysis result:", this.analysisResult);
                } catch (o) {
                  console.error("Error parsing analysis result:", o),
                    (this.analysisResult = void 0);
                }
            });
          }
          fetchJobDetails(e) {
            this.http.get(`http://localhost:5001/api/jobs/${e}`).subscribe(
              (i) => {
                (this.jobDetails = i),
                  console.log("Job details:", this.jobDetails);
              },
              (i) => {
                console.error("Error fetching job details:", i);
              }
            );
          }
          redirectToExternalLink() {
            this.router.navigate(["/job-details", "exampleJobId"]);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(y(_i), y(et), y(mi));
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["app-resume-analysis"]],
            decls: 3,
            vars: 2,
            consts: [
              [1, "container", "mt-4"],
              ["class", "row justify-content-center", 4, "ngIf"],
              ["class", "row justify-content-center mt-4", 4, "ngIf"],
              [1, "row", "justify-content-center"],
              [1, "col-lg-8"],
              [1, "card", "shadow-sm"],
              [1, "card-header", "bg-primary", "text-white"],
              [1, "mb-0"],
              [1, "card-body"],
              [1, "mb-4"],
              [1, "card-title", "text-primary"],
              [1, "card-text"],
              [1, "list-unstyled"],
              [4, "ngFor", "ngForOf"],
              [1, "btn", "btn-primary", "btn-block", 3, "click"],
              [1, "row", "justify-content-center", "mt-4"],
            ],
            template: function (i, o) {
              1 & i &&
                (_(0, "div", 0),
                B(1, W$, 19, 2, "div", 1),
                B(2, Y$, 17, 2, "div", 2),
                g()),
                2 & i &&
                  (M(1),
                  T("ngIf", o.analysisResult),
                  M(1),
                  T("ngIf", o.jobDetails));
            },
            dependencies: [Hi, _n],
            styles: [
              ".card[_ngcontent-%COMP%]{border-radius:10px}.card-header[_ngcontent-%COMP%]{border-radius:10px 10px 0 0}.card-body[_ngcontent-%COMP%]{padding:20px}.card-title[_ngcontent-%COMP%]{font-size:1.25rem;font-weight:700;margin-bottom:.5rem}.list-unstyled[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:.5rem}.btn-primary[_ngcontent-%COMP%]{background-color:#007bff;border-color:#007bff}.btn-primary[_ngcontent-%COMP%]:hover{background-color:#0056b3;border-color:#0056b3}.btn-primary[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 .2rem #268fff80}",
            ],
          }));
        }
        return t;
      })();
      function eS(t, n = 0) {
        return (function Q$(t) {
          return !isNaN(parseFloat(t)) && !isNaN(Number(t));
        })(t)
          ? Number(t)
          : n;
      }
      function Ud(t) {
        return Array.isArray(t) ? t : [t];
      }
      function tt(t) {
        return null == t ? "" : "string" == typeof t ? t : `${t}px`;
      }
      function ss(t) {
        return t instanceof Me ? t.nativeElement : t;
      }
      const X$ = ["addListener", "removeListener"],
        J$ = ["addEventListener", "removeEventListener"],
        ez = ["on", "off"];
      function eo(t, n, e, i) {
        if ((se(e) && ((i = e), (e = void 0)), i))
          return eo(t, n, e).pipe(_m(i));
        const [o, r] = (function iz(t) {
          return se(t.addEventListener) && se(t.removeEventListener);
        })(t)
          ? J$.map((s) => (a) => t[s](n, a, e))
          : (function tz(t) {
              return se(t.addListener) && se(t.removeListener);
            })(t)
          ? X$.map(tS(t, n))
          : (function nz(t) {
              return se(t.on) && se(t.off);
            })(t)
          ? ez.map(tS(t, n))
          : [];
        if (!o && Nu(t)) return nt((s) => eo(s, n, e))(vt(t));
        if (!o) throw new TypeError("Invalid event target");
        return new Fe((s) => {
          const a = (...l) => s.next(1 < l.length ? l : l[0]);
          return o(a), () => r(a);
        });
      }
      function tS(t, n) {
        return (e) => (i) => t[e](n, i);
      }
      class oz extends lt {
        constructor(n, e) {
          super();
        }
        schedule(n, e = 0) {
          return this;
        }
      }
      const $d = {
        setInterval(t, n, ...e) {
          const { delegate: i } = $d;
          return i?.setInterval
            ? i.setInterval(t, n, ...e)
            : setInterval(t, n, ...e);
        },
        clearInterval(t) {
          const { delegate: n } = $d;
          return (n?.clearInterval || clearInterval)(t);
        },
        delegate: void 0,
      };
      class lg extends oz {
        constructor(n, e) {
          super(n, e),
            (this.scheduler = n),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(n, e = 0) {
          var i;
          if (this.closed) return this;
          this.state = n;
          const o = this.id,
            r = this.scheduler;
          return (
            null != o && (this.id = this.recycleAsyncId(r, o, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id =
              null !== (i = this.id) && void 0 !== i
                ? i
                : this.requestAsyncId(r, this.id, e)),
            this
          );
        }
        requestAsyncId(n, e, i = 0) {
          return $d.setInterval(n.flush.bind(n, this), i);
        }
        recycleAsyncId(n, e, i = 0) {
          if (null != i && this.delay === i && !1 === this.pending) return e;
          null != e && $d.clearInterval(e);
        }
        execute(n, e) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const i = this._execute(n, e);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(n, e) {
          let o,
            i = !1;
          try {
            this.work(n);
          } catch (r) {
            (i = !0),
              (o = r || new Error("Scheduled action threw falsy error"));
          }
          if (i) return this.unsubscribe(), o;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: n, scheduler: e } = this,
              { actions: i } = e;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              zo(i, this),
              null != n && (this.id = this.recycleAsyncId(e, n, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const za = {
          schedule(t) {
            let n = requestAnimationFrame,
              e = cancelAnimationFrame;
            const { delegate: i } = za;
            i && ((n = i.requestAnimationFrame), (e = i.cancelAnimationFrame));
            const o = n((r) => {
              (e = void 0), t(r);
            });
            return new lt(() => e?.(o));
          },
          requestAnimationFrame(...t) {
            const { delegate: n } = za;
            return (n?.requestAnimationFrame || requestAnimationFrame)(...t);
          },
          cancelAnimationFrame(...t) {
            const { delegate: n } = za;
            return (n?.cancelAnimationFrame || cancelAnimationFrame)(...t);
          },
          delegate: void 0,
        },
        nS = { now: () => (nS.delegate || Date).now(), delegate: void 0 };
      class qa {
        constructor(n, e = qa.now) {
          (this.schedulerActionCtor = n), (this.now = e);
        }
        schedule(n, e = 0, i) {
          return new this.schedulerActionCtor(this, n).schedule(i, e);
        }
      }
      qa.now = nS.now;
      class cg extends qa {
        constructor(n, e = qa.now) {
          super(n, e), (this.actions = []), (this._active = !1);
        }
        flush(n) {
          const { actions: e } = this;
          if (this._active) return void e.push(n);
          let i;
          this._active = !0;
          do {
            if ((i = n.execute(n.state, n.delay))) break;
          } while ((n = e.shift()));
          if (((this._active = !1), i)) {
            for (; (n = e.shift()); ) n.unsubscribe();
            throw i;
          }
        }
      }
      const iS = new (class sz extends cg {
        flush(n) {
          this._active = !0;
          const e = this._scheduled;
          this._scheduled = void 0;
          const { actions: i } = this;
          let o;
          n = n || i.shift();
          do {
            if ((o = n.execute(n.state, n.delay))) break;
          } while ((n = i[0]) && n.id === e && i.shift());
          if (((this._active = !1), o)) {
            for (; (n = i[0]) && n.id === e && i.shift(); ) n.unsubscribe();
            throw o;
          }
        }
      })(
        class rz extends lg {
          constructor(n, e) {
            super(n, e), (this.scheduler = n), (this.work = e);
          }
          requestAsyncId(n, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(n, e, i)
              : (n.actions.push(this),
                n._scheduled ||
                  (n._scheduled = za.requestAnimationFrame(() =>
                    n.flush(void 0)
                  )));
          }
          recycleAsyncId(n, e, i = 0) {
            var o;
            if (null != i ? i > 0 : this.delay > 0)
              return super.recycleAsyncId(n, e, i);
            const { actions: r } = n;
            null != e &&
              (null === (o = r[r.length - 1]) || void 0 === o
                ? void 0
                : o.id) !== e &&
              (za.cancelAnimationFrame(e), (n._scheduled = void 0));
          }
        }
      );
      let dg,
        az = 1;
      const zd = {};
      function oS(t) {
        return t in zd && (delete zd[t], !0);
      }
      const lz = {
          setImmediate(t) {
            const n = az++;
            return (
              (zd[n] = !0),
              dg || (dg = Promise.resolve()),
              dg.then(() => oS(n) && t()),
              n
            );
          },
          clearImmediate(t) {
            oS(t);
          },
        },
        { setImmediate: cz, clearImmediate: dz } = lz,
        qd = {
          setImmediate(...t) {
            const { delegate: n } = qd;
            return (n?.setImmediate || cz)(...t);
          },
          clearImmediate(t) {
            const { delegate: n } = qd;
            return (n?.clearImmediate || dz)(t);
          },
          delegate: void 0,
        },
        Gd =
          (new (class hz extends cg {
            flush(n) {
              this._active = !0;
              const e = this._scheduled;
              this._scheduled = void 0;
              const { actions: i } = this;
              let o;
              n = n || i.shift();
              do {
                if ((o = n.execute(n.state, n.delay))) break;
              } while ((n = i[0]) && n.id === e && i.shift());
              if (((this._active = !1), o)) {
                for (; (n = i[0]) && n.id === e && i.shift(); ) n.unsubscribe();
                throw o;
              }
            }
          })(
            class uz extends lg {
              constructor(n, e) {
                super(n, e), (this.scheduler = n), (this.work = e);
              }
              requestAsyncId(n, e, i = 0) {
                return null !== i && i > 0
                  ? super.requestAsyncId(n, e, i)
                  : (n.actions.push(this),
                    n._scheduled ||
                      (n._scheduled = qd.setImmediate(
                        n.flush.bind(n, void 0)
                      )));
              }
              recycleAsyncId(n, e, i = 0) {
                var o;
                if (null != i ? i > 0 : this.delay > 0)
                  return super.recycleAsyncId(n, e, i);
                const { actions: r } = n;
                null != e &&
                  (null === (o = r[r.length - 1]) || void 0 === o
                    ? void 0
                    : o.id) !== e &&
                  (qd.clearImmediate(e),
                  n._scheduled === e && (n._scheduled = void 0));
              }
            }
          ),
          new cg(lg)),
        pz = Gd;
      function sS(t, n = Gd) {
        return (function mz(t) {
          return qe((n, e) => {
            let i = !1,
              o = null,
              r = null,
              s = !1;
            const a = () => {
                if ((r?.unsubscribe(), (r = null), i)) {
                  i = !1;
                  const c = o;
                  (o = null), e.next(c);
                }
                s && e.complete();
              },
              l = () => {
                (r = null), s && e.complete();
              };
            n.subscribe(
              Le(
                e,
                (c) => {
                  (i = !0), (o = c), r || vt(t(c)).subscribe((r = Le(e, a, l)));
                },
                () => {
                  (s = !0), (!i || !r || r.closed) && e.complete();
                }
              )
            );
          });
        })(() =>
          (function rS(t = 0, n, e = pz) {
            let i = -1;
            return (
              null != n && (V_(n) ? (e = n) : (i = n)),
              new Fe((o) => {
                let r = (function gz(t) {
                  return t instanceof Date && !isNaN(t);
                })(t)
                  ? +t - e.now()
                  : t;
                r < 0 && (r = 0);
                let s = 0;
                return e.schedule(function () {
                  o.closed ||
                    (o.next(s++),
                    0 <= i ? this.schedule(void 0, i) : o.complete());
                }, r);
              })
            );
          })(t, n)
        );
      }
      let ug;
      try {
        ug = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        ug = !1;
      }
      let Ga,
        Fo,
        hg,
        Zn = (() => {
          class t {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? nx(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !ug) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(ai));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      function Wa(t) {
        return (function _z() {
          if (null == Ga && typeof window < "u")
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (Ga = !0) })
              );
            } finally {
              Ga = Ga || !1;
            }
          return Ga;
        })()
          ? t
          : !!t.capture;
      }
      function yz() {
        if (null == Fo) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (Fo = !1), Fo;
          if ("scrollBehavior" in document.documentElement.style) Fo = !0;
          else {
            const t = Element.prototype.scrollTo;
            Fo = !!t && !/\{\s*\[native code\]\s*\}/.test(t.toString());
          }
        }
        return Fo;
      }
      function fg() {
        let t =
          typeof document < "u" && document ? document.activeElement : null;
        for (; t && t.shadowRoot; ) {
          const n = t.shadowRoot.activeElement;
          if (n === t) break;
          t = n;
        }
        return t;
      }
      function bi(t) {
        return t.composedPath ? t.composedPath()[0] : t.target;
      }
      function pg() {
        return (
          (typeof __karma__ < "u" && !!__karma__) ||
          (typeof jasmine < "u" && !!jasmine) ||
          (typeof jest < "u" && !!jest) ||
          (typeof Mocha < "u" && !!Mocha)
        );
      }
      const Cz = new S("cdk-dir-doc", {
          providedIn: "root",
          factory: function wz() {
            return R(re);
          },
        }),
        Dz =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let Yd = (() => {
          class t {
            constructor(e) {
              (this.value = "ltr"),
                (this.change = new V()),
                e &&
                  (this.value = (function xz(t) {
                    const n = t?.toLowerCase() || "";
                    return "auto" === n &&
                      typeof navigator < "u" &&
                      navigator?.language
                      ? Dz.test(navigator.language)
                        ? "rtl"
                        : "ltr"
                      : "rtl" === n
                      ? "rtl"
                      : "ltr";
                  })(
                    (e.body ? e.body.dir : null) ||
                      (e.documentElement ? e.documentElement.dir : null) ||
                      "ltr"
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(Cz, 8));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        Ya = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({}));
          }
          return t;
        })(),
        Mz = (() => {
          class t {
            constructor(e, i, o) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new me()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = o);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new Fe((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const o =
                      e > 0
                        ? this._scrolled.pipe(sS(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        o.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : H();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const o = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(Ue((r) => !r || o.indexOf(r) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((o, r) => {
                  this._scrollableContainsElement(r, e) && i.push(r);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let o = ss(i),
                r = e.getElementRef().nativeElement;
              do {
                if (o == r) return !0;
              } while ((o = o.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                eo(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(X), C(Zn), C(re, 8));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        mg = (() => {
          class t {
            constructor(e, i, o) {
              (this._platform = e),
                (this._change = new me()),
                (this._changeListener = (r) => {
                  this._change.next(r);
                }),
                (this._document = o),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const r = this._getWindow();
                    r.addEventListener("resize", this._changeListener),
                      r.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: o } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + o,
                right: e.left + i,
                height: o,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                o = e.documentElement,
                r = o.getBoundingClientRect();
              return {
                top:
                  -r.top || e.body.scrollTop || i.scrollY || o.scrollTop || 0,
                left:
                  -r.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  o.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(sS(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(Zn), C(X), C(re, 8));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        gg = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({}));
          }
          return t;
        })(),
        lS = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [Ya, gg, Ya, gg] }));
          }
          return t;
        })();
      class _g {
        attach(n) {
          return (this._attachedHost = n), n.attach(this);
        }
        detach() {
          let n = this._attachedHost;
          null != n && ((this._attachedHost = null), n.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(n) {
          this._attachedHost = n;
        }
      }
      class yg extends _g {
        constructor(n, e, i, o, r) {
          super(),
            (this.component = n),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = o),
            (this.projectableNodes = r);
        }
      }
      class vg extends _g {
        constructor(n, e, i, o) {
          super(),
            (this.templateRef = n),
            (this.viewContainerRef = e),
            (this.context = i),
            (this.injector = o);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(n, e = this.context) {
          return (this.context = e), super.attach(n);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class Tz extends _g {
        constructor(n) {
          super(), (this.element = n instanceof Me ? n.nativeElement : n);
        }
      }
      class bg {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(n) {
          return n instanceof yg
            ? ((this._attachedPortal = n), this.attachComponentPortal(n))
            : n instanceof vg
            ? ((this._attachedPortal = n), this.attachTemplatePortal(n))
            : this.attachDomPortal && n instanceof Tz
            ? ((this._attachedPortal = n), this.attachDomPortal(n))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(n) {
          this._disposeFn = n;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class Iz extends bg {
        constructor(n, e, i, o, r) {
          super(),
            (this.outletElement = n),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = o),
            (this.attachDomPortal = (s) => {
              const a = s.element,
                l = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(l, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = s),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(a, l);
                });
            }),
            (this._document = r);
        }
        attachComponentPortal(n) {
          const i = (
            n.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(n.component);
          let o;
          return (
            n.viewContainerRef
              ? ((o = n.viewContainerRef.createComponent(
                  i,
                  n.viewContainerRef.length,
                  n.injector || n.viewContainerRef.injector,
                  n.projectableNodes || void 0
                )),
                this.setDisposeFn(() => o.destroy()))
              : ((o = i.create(n.injector || this._defaultInjector || He.NULL)),
                this._appRef.attachView(o.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(o.hostView),
                    o.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(o)),
            (this._attachedPortal = n),
            o
          );
        }
        attachTemplatePortal(n) {
          let e = n.viewContainerRef,
            i = e.createEmbeddedView(n.templateRef, n.context, {
              injector: n.injector,
            });
          return (
            i.rootNodes.forEach((o) => this.outletElement.appendChild(o)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let o = e.indexOf(i);
              -1 !== o && e.remove(o);
            }),
            (this._attachedPortal = n),
            i
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(n) {
          return n.hostView.rootNodes[0];
        }
      }
      let Cg = (() => {
          class t extends bg {
            constructor(e, i, o) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new V()),
                (this.attachDomPortal = (r) => {
                  const s = r.element,
                    a = this._document.createComment("dom-portal");
                  r.setAttachedHost(this),
                    s.parentNode.insertBefore(a, s),
                    this._getRootNode().appendChild(s),
                    (this._attachedPortal = r),
                    super.setDisposeFn(() => {
                      a.parentNode && a.parentNode.replaceChild(s, a);
                    });
                }),
                (this._document = o);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                r = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                s = i.createComponent(
                  r,
                  i.length,
                  e.injector || i.injector,
                  e.projectableNodes || void 0
                );
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(s.hostView.rootNodes[0]),
                super.setDisposeFn(() => s.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = s),
                this.attached.emit(s),
                s
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context,
                { injector: e.injector }
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(mo), y(tn), y(re));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [le],
            }));
          }
          return t;
        })(),
        Kd = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({}));
          }
          return t;
        })();
      const cS = yz();
      class Az {
        constructor(n, e) {
          (this._viewportRuler = n),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const n = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = n.style.left || ""),
              (this._previousHTMLStyles.top = n.style.top || ""),
              (n.style.left = tt(-this._previousScrollPosition.left)),
              (n.style.top = tt(-this._previousScrollPosition.top)),
              n.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const n = this._document.documentElement,
              i = n.style,
              o = this._document.body.style,
              r = i.scrollBehavior || "",
              s = o.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              n.classList.remove("cdk-global-scrollblock"),
              cS && (i.scrollBehavior = o.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              cS && ((i.scrollBehavior = r), (o.scrollBehavior = s));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class Oz {
        constructor(n, e, i, o) {
          (this._scrollDispatcher = n),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = o),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(n) {
          this._overlayRef = n;
        }
        enable() {
          if (this._scrollSubscription) return;
          const n = this._scrollDispatcher
            .scrolled(0)
            .pipe(
              Ue(
                (e) =>
                  !e ||
                  !this._overlayRef.overlayElement.contains(
                    e.getElementRef().nativeElement
                  )
              )
            );
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = n.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = n.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class dS {
        enable() {}
        disable() {}
        attach() {}
      }
      function wg(t, n) {
        return n.some(
          (e) =>
            t.bottom < e.top ||
            t.top > e.bottom ||
            t.right < e.left ||
            t.left > e.right
        );
      }
      function uS(t, n) {
        return n.some(
          (e) =>
            t.top < e.top ||
            t.bottom > e.bottom ||
            t.left < e.left ||
            t.right > e.right
        );
      }
      class Rz {
        constructor(n, e, i, o) {
          (this._scrollDispatcher = n),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = o),
            (this._scrollSubscription = null);
        }
        attach(n) {
          this._overlayRef = n;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: o } =
                      this._viewportRuler.getViewportSize();
                  wg(e, [
                    {
                      width: i,
                      height: o,
                      bottom: o,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let Pz = (() => {
        class t {
          constructor(e, i, o, r) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = o),
              (this.noop = () => new dS()),
              (this.close = (s) =>
                new Oz(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  s
                )),
              (this.block = () => new Az(this._viewportRuler, this._document)),
              (this.reposition = (s) =>
                new Rz(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  s
                )),
              (this._document = r);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(Mz), C(mg), C(X), C(re));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      class Dg {
        constructor(n) {
          if (
            ((this.scrollStrategy = new dS()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            n)
          ) {
            const e = Object.keys(n);
            for (const i of e) void 0 !== n[i] && (this[i] = n[i]);
          }
        }
      }
      class kz {
        constructor(n, e) {
          (this.connectionPair = n), (this.scrollableViewProperties = e);
        }
      }
      let hS = (() => {
          class t {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(re));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        Fz = (() => {
          class t extends hS {
            constructor(e, i) {
              super(e),
                (this._ngZone = i),
                (this._keydownListener = (o) => {
                  const r = this._attachedOverlays;
                  for (let s = r.length - 1; s > -1; s--)
                    if (r[s]._keydownEvents.observers.length > 0) {
                      const a = r[s]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => a.next(o))
                        : a.next(o);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          "keydown",
                          this._keydownListener
                        )
                      )
                    : this._document.body.addEventListener(
                        "keydown",
                        this._keydownListener
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(re), C(X, 8));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        Nz = (() => {
          class t extends hS {
            constructor(e, i, o) {
              super(e),
                (this._platform = i),
                (this._ngZone = o),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (r) => {
                  this._pointerDownEventTarget = bi(r);
                }),
                (this._clickListener = (r) => {
                  const s = bi(r),
                    a =
                      "click" === r.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : s;
                  this._pointerDownEventTarget = null;
                  const l = this._attachedOverlays.slice();
                  for (let c = l.length - 1; c > -1; c--) {
                    const d = l[c];
                    if (
                      d._outsidePointerEvents.observers.length < 1 ||
                      !d.hasAttached()
                    )
                      continue;
                    if (
                      d.overlayElement.contains(s) ||
                      d.overlayElement.contains(a)
                    )
                      break;
                    const u = d._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => u.next(r))
                      : u.next(r);
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(i)
                    )
                  : this._addEventListeners(i),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(e) {
              e.addEventListener("pointerdown", this._pointerDownListener, !0),
                e.addEventListener("click", this._clickListener, !0),
                e.addEventListener("auxclick", this._clickListener, !0),
                e.addEventListener("contextmenu", this._clickListener, !0);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(re), C(Zn), C(X, 8));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        Zd = (() => {
          class t {
            constructor(e, i) {
              (this._platform = i), (this._document = e);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const e = "cdk-overlay-container";
              if (this._platform.isBrowser || pg()) {
                const o = this._document.querySelectorAll(
                  `.${e}[platform="server"], .${e}[platform="test"]`
                );
                for (let r = 0; r < o.length; r++) o[r].remove();
              }
              const i = this._document.createElement("div");
              i.classList.add(e),
                pg()
                  ? i.setAttribute("platform", "test")
                  : this._platform.isBrowser ||
                    i.setAttribute("platform", "server"),
                this._document.body.appendChild(i),
                (this._containerElement = i);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(re), C(Zn));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      class Ka {
        constructor(n, e, i, o, r, s, a, l, c, d = !1) {
          (this._portalOutlet = n),
            (this._host = e),
            (this._pane = i),
            (this._config = o),
            (this._ngZone = r),
            (this._keyboardDispatcher = s),
            (this._document = a),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._animationsDisabled = d),
            (this._backdropElement = null),
            (this._backdropClick = new me()),
            (this._attachments = new me()),
            (this._detachments = new me()),
            (this._locationChanges = lt.EMPTY),
            (this._backdropClickHandler = (u) => this._backdropClick.next(u)),
            (this._backdropTransitionendHandler = (u) => {
              this._disposeBackdrop(u.target);
            }),
            (this._keydownEvents = new me()),
            (this._outsidePointerEvents = new me()),
            o.scrollStrategy &&
              ((this._scrollStrategy = o.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = o.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(n) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const e = this._portalOutlet.attach(n);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(dt(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            "function" == typeof e?.onDestroy &&
              e.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach())
                  );
              }),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const n = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            n
          );
        }
        dispose() {
          const n = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            n && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(n) {
          n !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = n),
            this.hasAttached() && (n.attach(this), this.updatePosition()));
        }
        updateSize(n) {
          (this._config = { ...this._config, ...n }), this._updateElementSize();
        }
        setDirection(n) {
          (this._config = { ...this._config, direction: n }),
            this._updateElementDirection();
        }
        addPanelClass(n) {
          this._pane && this._toggleClasses(this._pane, n, !0);
        }
        removePanelClass(n) {
          this._pane && this._toggleClasses(this._pane, n, !1);
        }
        getDirection() {
          const n = this._config.direction;
          return n ? ("string" == typeof n ? n : n.value) : "ltr";
        }
        updateScrollStrategy(n) {
          n !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = n),
            this.hasAttached() && (n.attach(this), n.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const n = this._pane.style;
          (n.width = tt(this._config.width)),
            (n.height = tt(this._config.height)),
            (n.minWidth = tt(this._config.minWidth)),
            (n.minHeight = tt(this._config.minHeight)),
            (n.maxWidth = tt(this._config.maxWidth)),
            (n.maxHeight = tt(this._config.maxHeight));
        }
        _togglePointerEvents(n) {
          this._pane.style.pointerEvents = n ? "" : "none";
        }
        _attachBackdrop() {
          const n = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                "cdk-overlay-backdrop-noop-animation"
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < "u"
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(n);
                  });
                })
              : this._backdropElement.classList.add(n);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const n = this._backdropElement;
          if (n) {
            if (this._animationsDisabled) return void this._disposeBackdrop(n);
            n.classList.remove("cdk-overlay-backdrop-showing"),
              this._ngZone.runOutsideAngular(() => {
                n.addEventListener(
                  "transitionend",
                  this._backdropTransitionendHandler
                );
              }),
              (n.style.pointerEvents = "none"),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(n);
                }, 500)
              ));
          }
        }
        _toggleClasses(n, e, i) {
          const o = Ud(e || []).filter((r) => !!r);
          o.length && (i ? n.classList.add(...o) : n.classList.remove(...o));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const n = this._ngZone.onStable
              .pipe(hd(Si(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  n.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const n = this._scrollStrategy;
          n && (n.disable(), n.detach && n.detach());
        }
        _disposeBackdrop(n) {
          n &&
            (n.removeEventListener("click", this._backdropClickHandler),
            n.removeEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            ),
            n.remove(),
            this._backdropElement === n && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const fS = "cdk-overlay-connected-position-bounding-box",
        Lz = /([A-Za-z%]+)$/;
      class Vz {
        get positions() {
          return this._preferredPositions;
        }
        constructor(n, e, i, o, r) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = o),
            (this._overlayContainer = r),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new me()),
            (this._resizeSubscription = lt.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(n);
        }
        attach(n) {
          this._validatePositions(),
            n.hostElement.classList.add(fS),
            (this._overlayRef = n),
            (this._boundingBox = n.hostElement),
            (this._pane = n.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const n = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            o = this._containerRect,
            r = [];
          let s;
          for (let a of this._preferredPositions) {
            let l = this._getOriginPoint(n, o, a),
              c = this._getOverlayPoint(l, e, a),
              d = this._getOverlayFit(c, e, i, a);
            if (d.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(a, l);
            this._canFitWithFlexibleDimensions(d, c, i)
              ? r.push({
                  position: a,
                  origin: l,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(l, a),
                })
              : (!s || s.overlayFit.visibleArea < d.visibleArea) &&
                (s = {
                  overlayFit: d,
                  overlayPoint: c,
                  originPoint: l,
                  position: a,
                  overlayRect: e,
                });
          }
          if (r.length) {
            let a = null,
              l = -1;
            for (const c of r) {
              const d =
                c.boundingBoxRect.width *
                c.boundingBoxRect.height *
                (c.position.weight || 1);
              d > l && ((l = d), (a = c));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(a.position, a.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(s.position, s.originPoint)
            );
          this._applyPosition(s.position, s.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              No(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(fS),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const n = this._lastPosition;
          if (n) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              n
            );
            this._applyPosition(n, e);
          } else this.apply();
        }
        withScrollableContainers(n) {
          return (this._scrollables = n), this;
        }
        withPositions(n) {
          return (
            (this._preferredPositions = n),
            -1 === n.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(n) {
          return (this._viewportMargin = n), this;
        }
        withFlexibleDimensions(n = !0) {
          return (this._hasFlexibleDimensions = n), this;
        }
        withGrowAfterOpen(n = !0) {
          return (this._growAfterOpen = n), this;
        }
        withPush(n = !0) {
          return (this._canPush = n), this;
        }
        withLockedPosition(n = !0) {
          return (this._positionLocked = n), this;
        }
        setOrigin(n) {
          return (this._origin = n), this;
        }
        withDefaultOffsetX(n) {
          return (this._offsetX = n), this;
        }
        withDefaultOffsetY(n) {
          return (this._offsetY = n), this;
        }
        withTransformOriginOn(n) {
          return (this._transformOriginSelector = n), this;
        }
        _getOriginPoint(n, e, i) {
          let o, r;
          if ("center" == i.originX) o = n.left + n.width / 2;
          else {
            const s = this._isRtl() ? n.right : n.left,
              a = this._isRtl() ? n.left : n.right;
            o = "start" == i.originX ? s : a;
          }
          return (
            e.left < 0 && (o -= e.left),
            (r =
              "center" == i.originY
                ? n.top + n.height / 2
                : "top" == i.originY
                ? n.top
                : n.bottom),
            e.top < 0 && (r -= e.top),
            { x: o, y: r }
          );
        }
        _getOverlayPoint(n, e, i) {
          let o, r;
          return (
            (o =
              "center" == i.overlayX
                ? -e.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (r =
              "center" == i.overlayY
                ? -e.height / 2
                : "top" == i.overlayY
                ? 0
                : -e.height),
            { x: n.x + o, y: n.y + r }
          );
        }
        _getOverlayFit(n, e, i, o) {
          const r = mS(e);
          let { x: s, y: a } = n,
            l = this._getOffset(o, "x"),
            c = this._getOffset(o, "y");
          l && (s += l), c && (a += c);
          let h = 0 - a,
            f = a + r.height - i.height,
            p = this._subtractOverflows(r.width, 0 - s, s + r.width - i.width),
            m = this._subtractOverflows(r.height, h, f),
            v = p * m;
          return {
            visibleArea: v,
            isCompletelyWithinViewport: r.width * r.height === v,
            fitsInViewportVertically: m === r.height,
            fitsInViewportHorizontally: p == r.width,
          };
        }
        _canFitWithFlexibleDimensions(n, e, i) {
          if (this._hasFlexibleDimensions) {
            const o = i.bottom - e.y,
              r = i.right - e.x,
              s = pS(this._overlayRef.getConfig().minHeight),
              a = pS(this._overlayRef.getConfig().minWidth);
            return (
              (n.fitsInViewportVertically || (null != s && s <= o)) &&
              (n.fitsInViewportHorizontally || (null != a && a <= r))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(n, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: n.x + this._previousPushAmount.x,
              y: n.y + this._previousPushAmount.y,
            };
          const o = mS(e),
            r = this._viewportRect,
            s = Math.max(n.x + o.width - r.width, 0),
            a = Math.max(n.y + o.height - r.height, 0),
            l = Math.max(r.top - i.top - n.y, 0),
            c = Math.max(r.left - i.left - n.x, 0);
          let d = 0,
            u = 0;
          return (
            (d =
              o.width <= r.width
                ? c || -s
                : n.x < this._viewportMargin
                ? r.left - i.left - n.x
                : 0),
            (u =
              o.height <= r.height
                ? l || -a
                : n.y < this._viewportMargin
                ? r.top - i.top - n.y
                : 0),
            (this._previousPushAmount = { x: d, y: u }),
            { x: n.x + d, y: n.y + u }
          );
        }
        _applyPosition(n, e) {
          if (
            (this._setTransformOrigin(n),
            this._setOverlayElementStyles(e, n),
            this._setBoundingBoxStyles(e, n),
            n.panelClass && this._addPanelClasses(n.panelClass),
            (this._lastPosition = n),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              o = new kz(n, i);
            this._positionChanges.next(o);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(n) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            o = n.overlayY;
          i =
            "center" === n.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === n.overlayX
                ? "right"
                : "left"
              : "start" === n.overlayX
              ? "left"
              : "right";
          for (let r = 0; r < e.length; r++)
            e[r].style.transformOrigin = `${i} ${o}`;
        }
        _calculateBoundingBoxRect(n, e) {
          const i = this._viewportRect,
            o = this._isRtl();
          let r, s, a, d, u, h;
          if ("top" === e.overlayY)
            (s = n.y), (r = i.height - s + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (a = i.height - n.y + 2 * this._viewportMargin),
              (r = i.height - a + this._viewportMargin);
          else {
            const f = Math.min(i.bottom - n.y + i.top, n.y),
              p = this._lastBoundingBoxSize.height;
            (r = 2 * f),
              (s = n.y - f),
              r > p &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (s = n.y - p / 2);
          }
          if (("end" === e.overlayX && !o) || ("start" === e.overlayX && o))
            (h = i.width - n.x + this._viewportMargin),
              (d = n.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !o) ||
            ("end" === e.overlayX && o)
          )
            (u = n.x), (d = i.right - n.x);
          else {
            const f = Math.min(i.right - n.x + i.left, n.x),
              p = this._lastBoundingBoxSize.width;
            (d = 2 * f),
              (u = n.x - f),
              d > p &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (u = n.x - p / 2);
          }
          return { top: s, left: u, bottom: a, right: h, width: d, height: r };
        }
        _setBoundingBoxStyles(n, e) {
          const i = this._calculateBoundingBoxRect(n, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const o = {};
          if (this._hasExactPosition())
            (o.top = o.left = "0"),
              (o.bottom = o.right = o.maxHeight = o.maxWidth = ""),
              (o.width = o.height = "100%");
          else {
            const r = this._overlayRef.getConfig().maxHeight,
              s = this._overlayRef.getConfig().maxWidth;
            (o.height = tt(i.height)),
              (o.top = tt(i.top)),
              (o.bottom = tt(i.bottom)),
              (o.width = tt(i.width)),
              (o.left = tt(i.left)),
              (o.right = tt(i.right)),
              (o.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (o.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              r && (o.maxHeight = tt(r)),
              s && (o.maxWidth = tt(s));
          }
          (this._lastBoundingBoxSize = i), No(this._boundingBox.style, o);
        }
        _resetBoundingBoxStyles() {
          No(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          No(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(n, e) {
          const i = {},
            o = this._hasExactPosition(),
            r = this._hasFlexibleDimensions,
            s = this._overlayRef.getConfig();
          if (o) {
            const d = this._viewportRuler.getViewportScrollPosition();
            No(i, this._getExactOverlayY(e, n, d)),
              No(i, this._getExactOverlayX(e, n, d));
          } else i.position = "static";
          let a = "",
            l = this._getOffset(e, "x"),
            c = this._getOffset(e, "y");
          l && (a += `translateX(${l}px) `),
            c && (a += `translateY(${c}px)`),
            (i.transform = a.trim()),
            s.maxHeight &&
              (o ? (i.maxHeight = tt(s.maxHeight)) : r && (i.maxHeight = "")),
            s.maxWidth &&
              (o ? (i.maxWidth = tt(s.maxWidth)) : r && (i.maxWidth = "")),
            No(this._pane.style, i);
        }
        _getExactOverlayY(n, e, i) {
          let o = { top: "", bottom: "" },
            r = this._getOverlayPoint(e, this._overlayRect, n);
          return (
            this._isPushed &&
              (r = this._pushOverlayOnScreen(r, this._overlayRect, i)),
            "bottom" === n.overlayY
              ? (o.bottom =
                  this._document.documentElement.clientHeight -
                  (r.y + this._overlayRect.height) +
                  "px")
              : (o.top = tt(r.y)),
            o
          );
        }
        _getExactOverlayX(n, e, i) {
          let s,
            o = { left: "", right: "" },
            r = this._getOverlayPoint(e, this._overlayRect, n);
          return (
            this._isPushed &&
              (r = this._pushOverlayOnScreen(r, this._overlayRect, i)),
            (s = this._isRtl()
              ? "end" === n.overlayX
                ? "left"
                : "right"
              : "end" === n.overlayX
              ? "right"
              : "left"),
            "right" === s
              ? (o.right =
                  this._document.documentElement.clientWidth -
                  (r.x + this._overlayRect.width) +
                  "px")
              : (o.left = tt(r.x)),
            o
          );
        }
        _getScrollVisibility() {
          const n = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((o) =>
              o.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: uS(n, i),
            isOriginOutsideView: wg(n, i),
            isOverlayClipped: uS(e, i),
            isOverlayOutsideView: wg(e, i),
          };
        }
        _subtractOverflows(n, ...e) {
          return e.reduce((i, o) => i - Math.max(o, 0), n);
        }
        _getNarrowedViewportRect() {
          const n = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + n - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: n - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(n, e) {
          return "x" === e
            ? null == n.offsetX
              ? this._offsetX
              : n.offsetX
            : null == n.offsetY
            ? this._offsetY
            : n.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(n) {
          this._pane &&
            Ud(n).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((n) => {
              this._pane.classList.remove(n);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const n = this._origin;
          if (n instanceof Me) return n.nativeElement.getBoundingClientRect();
          if (n instanceof Element) return n.getBoundingClientRect();
          const e = n.width || 0,
            i = n.height || 0;
          return {
            top: n.y,
            bottom: n.y + i,
            left: n.x,
            right: n.x + e,
            height: i,
            width: e,
          };
        }
      }
      function No(t, n) {
        for (let e in n) n.hasOwnProperty(e) && (t[e] = n[e]);
        return t;
      }
      function pS(t) {
        if ("number" != typeof t && null != t) {
          const [n, e] = t.split(Lz);
          return e && "px" !== e ? null : parseFloat(n);
        }
        return t || null;
      }
      function mS(t) {
        return {
          top: Math.floor(t.top),
          right: Math.floor(t.right),
          bottom: Math.floor(t.bottom),
          left: Math.floor(t.left),
          width: Math.floor(t.width),
          height: Math.floor(t.height),
        };
      }
      const gS = "cdk-global-overlay-wrapper";
      class Bz {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._alignItems = ""),
            (this._xPosition = ""),
            (this._xOffset = ""),
            (this._width = ""),
            (this._height = ""),
            (this._isDisposed = !1);
        }
        attach(n) {
          const e = n.getConfig();
          (this._overlayRef = n),
            this._width && !e.width && n.updateSize({ width: this._width }),
            this._height && !e.height && n.updateSize({ height: this._height }),
            n.hostElement.classList.add(gS),
            (this._isDisposed = !1);
        }
        top(n = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = n),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(n = "") {
          return (this._xOffset = n), (this._xPosition = "left"), this;
        }
        bottom(n = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = n),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(n = "") {
          return (this._xOffset = n), (this._xPosition = "right"), this;
        }
        start(n = "") {
          return (this._xOffset = n), (this._xPosition = "start"), this;
        }
        end(n = "") {
          return (this._xOffset = n), (this._xPosition = "end"), this;
        }
        width(n = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: n })
              : (this._width = n),
            this
          );
        }
        height(n = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: n })
              : (this._height = n),
            this
          );
        }
        centerHorizontally(n = "") {
          return this.left(n), (this._xPosition = "center"), this;
        }
        centerVertically(n = "") {
          return this.top(n), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const n = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: o, height: r, maxWidth: s, maxHeight: a } = i,
            l = !(
              ("100%" !== o && "100vw" !== o) ||
              (s && "100%" !== s && "100vw" !== s)
            ),
            c = !(
              ("100%" !== r && "100vh" !== r) ||
              (a && "100%" !== a && "100vh" !== a)
            ),
            d = this._xPosition,
            u = this._xOffset,
            h = "rtl" === this._overlayRef.getConfig().direction;
          let f = "",
            p = "",
            m = "";
          l
            ? (m = "flex-start")
            : "center" === d
            ? ((m = "center"), h ? (p = u) : (f = u))
            : h
            ? "left" === d || "end" === d
              ? ((m = "flex-end"), (f = u))
              : ("right" === d || "start" === d) &&
                ((m = "flex-start"), (p = u))
            : "left" === d || "start" === d
            ? ((m = "flex-start"), (f = u))
            : ("right" === d || "end" === d) && ((m = "flex-end"), (p = u)),
            (n.position = this._cssPosition),
            (n.marginLeft = l ? "0" : f),
            (n.marginTop = c ? "0" : this._topOffset),
            (n.marginBottom = this._bottomOffset),
            (n.marginRight = l ? "0" : p),
            (e.justifyContent = m),
            (e.alignItems = c ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const n = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(gS),
            (i.justifyContent =
              i.alignItems =
              n.marginTop =
              n.marginBottom =
              n.marginLeft =
              n.marginRight =
              n.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let jz = (() => {
          class t {
            constructor(e, i, o, r) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = o),
                (this._overlayContainer = r);
            }
            global() {
              return new Bz();
            }
            flexibleConnectedTo(e) {
              return new Vz(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(mg), C(re), C(Zn), C(Zd));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        Hz = 0,
        to = (() => {
          class t {
            constructor(e, i, o, r, s, a, l, c, d, u, h, f) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = o),
                (this._positionBuilder = r),
                (this._keyboardDispatcher = s),
                (this._injector = a),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = d),
                (this._location = u),
                (this._outsideClickDispatcher = h),
                (this._animationsModuleType = f);
            }
            create(e) {
              const i = this._createHostElement(),
                o = this._createPaneElement(i),
                r = this._createPortalOutlet(o),
                s = new Dg(e);
              return (
                (s.direction = s.direction || this._directionality.value),
                new Ka(
                  r,
                  i,
                  o,
                  s,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  "NoopAnimations" === this._animationsModuleType
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + Hz++),
                i.classList.add("cdk-overlay-pane"),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(ui)),
                new Iz(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(
                C(Pz),
                C(Zd),
                C(mo),
                C(jz),
                C(Fz),
                C(He),
                C(X),
                C(re),
                C(Yd),
                C(ua),
                C(Nz),
                C(Hs, 8)
              );
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      const zz = {
        provide: new S("cdk-connected-overlay-scroll-strategy"),
        deps: [to],
        useFactory: function $z(t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let xg = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({
            providers: [to, zz],
            imports: [Ya, Kd, lS, lS],
          }));
        }
        return t;
      })();
      function Za(t, ...n) {
        return n.length
          ? n.some((e) => t[e])
          : t.altKey || t.shiftKey || t.ctrlKey || t.metaKey;
      }
      function yS(t) {
        return Ue((n, e) => t <= e);
      }
      let Jz = (() => {
          class t {
            create(e) {
              return typeof MutationObserver > "u"
                ? null
                : new MutationObserver(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        vS = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ providers: [Jz] }));
          }
          return t;
        })();
      function Xd(t, n = Gd) {
        return qe((e, i) => {
          let o = null,
            r = null,
            s = null;
          const a = () => {
            if (o) {
              o.unsubscribe(), (o = null);
              const c = r;
              (r = null), i.next(c);
            }
          };
          function l() {
            const c = s + t,
              d = n.now();
            if (d < c) return (o = this.schedule(void 0, c - d)), void i.add(o);
            a();
          }
          e.subscribe(
            Le(
              i,
              (c) => {
                (r = c), (s = n.now()), o || ((o = n.schedule(l, t)), i.add(o));
              },
              () => {
                a(), i.complete();
              },
              void 0,
              () => {
                r = o = null;
              }
            )
          );
        });
      }
      const bS = new Set();
      let Lo,
        e4 = (() => {
          class t {
            constructor(e, i) {
              (this._platform = e),
                (this._nonce = i),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : n4);
            }
            matchMedia(e) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function t4(t, n) {
                    if (!bS.has(t))
                      try {
                        Lo ||
                          ((Lo = document.createElement("style")),
                          n && (Lo.nonce = n),
                          Lo.setAttribute("type", "text/css"),
                          document.head.appendChild(Lo)),
                          Lo.sheet &&
                            (Lo.sheet.insertRule(`@media ${t} {body{ }}`, 0),
                            bS.add(t));
                      } catch (e) {
                        console.error(e);
                      }
                  })(e, this._nonce),
                this._matchMedia(e)
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(Zn), C(af, 8));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      function n4(t) {
        return {
          matches: "all" === t || "" === t,
          media: t,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let o4 = (() => {
        class t {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new me());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return CS(Ud(e)).some((o) => this._registerQuery(o).mql.matches);
          }
          observe(e) {
            let r = cd(CS(Ud(e)).map((s) => this._registerQuery(s).observable));
            return (
              (r = ba(r.pipe(dt(1)), r.pipe(yS(1), Xd(0)))),
              r.pipe(
                ae((s) => {
                  const a = { matches: !1, breakpoints: {} };
                  return (
                    s.forEach(({ matches: l, query: c }) => {
                      (a.matches = a.matches || l), (a.breakpoints[c] = l);
                    }),
                    a
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              r = {
                observable: new Fe((s) => {
                  const a = (l) => this._zone.run(() => s.next(l));
                  return (
                    i.addListener(a),
                    () => {
                      i.removeListener(a);
                    }
                  );
                }).pipe(
                  wa(i),
                  ae(({ matches: s }) => ({ query: e, matches: s })),
                  hd(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, r), r;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(e4), C(X));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function CS(t) {
        return t
          .map((n) => n.split(","))
          .reduce((n, e) => n.concat(e))
          .map((n) => n.trim());
      }
      let Jd = (() => {
        class t {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute("disabled");
          }
          isVisible(e) {
            return (
              (function l4(t) {
                return !!(
                  t.offsetWidth ||
                  t.offsetHeight ||
                  ("function" == typeof t.getClientRects &&
                    t.getClientRects().length)
                );
              })(e) && "visible" === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function a4(t) {
              try {
                return t.frameElement;
              } catch {
                return null;
              }
            })(
              (function g4(t) {
                return (
                  (t.ownerDocument && t.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === MS(i) || !this.isVisible(i))) return !1;
            let o = e.nodeName.toLowerCase(),
              r = MS(e);
            return e.hasAttribute("contenteditable")
              ? -1 !== r
              : !(
                  "iframe" === o ||
                  "object" === o ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function p4(t) {
                      let n = t.nodeName.toLowerCase(),
                        e = "input" === n && t.type;
                      return (
                        "text" === e ||
                        "password" === e ||
                        "select" === n ||
                        "textarea" === n
                      );
                    })(e))
                ) &&
                  ("audio" === o
                    ? !!e.hasAttribute("controls") && -1 !== r
                    : "video" === o
                    ? -1 !== r &&
                      (null !== r ||
                        this._platform.FIREFOX ||
                        e.hasAttribute("controls"))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function m4(t) {
                return (
                  !(function d4(t) {
                    return (
                      (function h4(t) {
                        return "input" == t.nodeName.toLowerCase();
                      })(t) && "hidden" == t.type
                    );
                  })(t) &&
                  ((function c4(t) {
                    let n = t.nodeName.toLowerCase();
                    return (
                      "input" === n ||
                      "select" === n ||
                      "button" === n ||
                      "textarea" === n
                    );
                  })(t) ||
                    (function u4(t) {
                      return (
                        (function f4(t) {
                          return "a" == t.nodeName.toLowerCase();
                        })(t) && t.hasAttribute("href")
                      );
                    })(t) ||
                    t.hasAttribute("contenteditable") ||
                    ES(t))
                );
              })(e) &&
              !this.isDisabled(e) &&
              (i?.ignoreVisibility || this.isVisible(e))
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(Zn));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function ES(t) {
        if (!t.hasAttribute("tabindex") || void 0 === t.tabIndex) return !1;
        let n = t.getAttribute("tabindex");
        return !(!n || isNaN(parseInt(n, 10)));
      }
      function MS(t) {
        if (!ES(t)) return null;
        const n = parseInt(t.getAttribute("tabindex") || "", 10);
        return isNaN(n) ? -1 : n;
      }
      class _4 {
        get enabled() {
          return this._enabled;
        }
        set enabled(n) {
          (this._enabled = n),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(n, this._startAnchor),
              this._toggleAnchorTabIndex(n, this._endAnchor));
        }
        constructor(n, e, i, o, r = !1) {
          (this._element = n),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = o),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            r || this.attachAnchors();
        }
        destroy() {
          const n = this._startAnchor,
            e = this._endAnchor;
          n &&
            (n.removeEventListener("focus", this.startAnchorListener),
            n.remove()),
            e &&
              (e.removeEventListener("focus", this.endAnchorListener),
              e.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(n) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(n)));
          });
        }
        focusFirstTabbableElementWhenReady(n) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(n)));
          });
        }
        focusLastTabbableElementWhenReady(n) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(n)));
          });
        }
        _getRegionBoundary(n) {
          const e = this._element.querySelectorAll(
            `[cdk-focus-region-${n}], [cdkFocusRegion${n}], [cdk-focus-${n}]`
          );
          return "start" == n
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(n) {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (e) {
            if (!this._checker.isFocusable(e)) {
              const i = this._getFirstTabbableElement(e);
              return i?.focus(n), !!i;
            }
            return e.focus(n), !0;
          }
          return this.focusFirstTabbableElement(n);
        }
        focusFirstTabbableElement(n) {
          const e = this._getRegionBoundary("start");
          return e && e.focus(n), !!e;
        }
        focusLastTabbableElement(n) {
          const e = this._getRegionBoundary("end");
          return e && e.focus(n), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(n) {
          if (this._checker.isFocusable(n) && this._checker.isTabbable(n))
            return n;
          const e = n.children;
          for (let i = 0; i < e.length; i++) {
            const o =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (o) return o;
          }
          return null;
        }
        _getLastTabbableElement(n) {
          if (this._checker.isFocusable(n) && this._checker.isTabbable(n))
            return n;
          const e = n.children;
          for (let i = e.length - 1; i >= 0; i--) {
            const o =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (o) return o;
          }
          return null;
        }
        _createAnchor() {
          const n = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, n),
            n.classList.add("cdk-visually-hidden"),
            n.classList.add("cdk-focus-trap-anchor"),
            n.setAttribute("aria-hidden", "true"),
            n
          );
        }
        _toggleAnchorTabIndex(n, e) {
          n ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
        }
        toggleAnchors(n) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(n, this._startAnchor),
            this._toggleAnchorTabIndex(n, this._endAnchor));
        }
        _executeOnStable(n) {
          this._ngZone.isStable
            ? n()
            : this._ngZone.onStable.pipe(dt(1)).subscribe(n);
        }
      }
      let Mg = (() => {
        class t {
          constructor(e, i, o) {
            (this._checker = e), (this._ngZone = i), (this._document = o);
          }
          create(e, i = !1) {
            return new _4(e, this._checker, this._ngZone, this._document, i);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(Jd), C(X), C(re));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function SS(t) {
        return 0 === t.buttons || 0 === t.detail;
      }
      function TS(t) {
        const n =
          (t.touches && t.touches[0]) ||
          (t.changedTouches && t.changedTouches[0]);
        return !(
          !n ||
          -1 !== n.identifier ||
          (null != n.radiusX && 1 !== n.radiusX) ||
          (null != n.radiusY && 1 !== n.radiusY)
        );
      }
      const y4 = new S("cdk-input-modality-detector-options"),
        v4 = { ignoreKeys: [18, 17, 224, 91, 16] },
        ls = Wa({ passive: !0, capture: !0 });
      let b4 = (() => {
        class t {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(e, i, o, r) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new Wt(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (s) => {
                this._options?.ignoreKeys?.some((a) => a === s.keyCode) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = bi(s)));
              }),
              (this._onMousedown = (s) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(SS(s) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = bi(s)));
              }),
              (this._onTouchstart = (s) => {
                TS(s)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = bi(s)));
              }),
              (this._options = { ...v4, ...r }),
              (this.modalityDetected = this._modality.pipe(yS(1))),
              (this.modalityChanged = this.modalityDetected.pipe(Bu())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  o.addEventListener("keydown", this._onKeydown, ls),
                    o.addEventListener("mousedown", this._onMousedown, ls),
                    o.addEventListener("touchstart", this._onTouchstart, ls);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener("keydown", this._onKeydown, ls),
                document.removeEventListener(
                  "mousedown",
                  this._onMousedown,
                  ls
                ),
                document.removeEventListener(
                  "touchstart",
                  this._onTouchstart,
                  ls
                ));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(Zn), C(X), C(re), C(y4, 8));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const w4 = new S("cdk-focus-monitor-default-options"),
        eu = Wa({ passive: !0, capture: !0 });
      let Sg = (() => {
        class t {
          constructor(e, i, o, r, s) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = o),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new me()),
              (this._rootNodeFocusAndBlurListener = (a) => {
                for (let c = bi(a); c; c = c.parentElement)
                  "focus" === a.type ? this._onFocus(a, c) : this._onBlur(a, c);
              }),
              (this._document = r),
              (this._detectionMode = s?.detectionMode || 0);
          }
          monitor(e, i = !1) {
            const o = ss(e);
            if (!this._platform.isBrowser || 1 !== o.nodeType) return H();
            const r =
                (function bz(t) {
                  if (
                    (function vz() {
                      if (null == hg) {
                        const t = typeof document < "u" ? document.head : null;
                        hg = !(!t || (!t.createShadowRoot && !t.attachShadow));
                      }
                      return hg;
                    })()
                  ) {
                    const n = t.getRootNode ? t.getRootNode() : null;
                    if (
                      typeof ShadowRoot < "u" &&
                      ShadowRoot &&
                      n instanceof ShadowRoot
                    )
                      return n;
                  }
                  return null;
                })(o) || this._getDocument(),
              s = this._elementInfo.get(o);
            if (s) return i && (s.checkChildren = !0), s.subject;
            const a = { checkChildren: i, subject: new me(), rootNode: r };
            return (
              this._elementInfo.set(o, a),
              this._registerGlobalListeners(a),
              a.subject
            );
          }
          stopMonitoring(e) {
            const i = ss(e),
              o = this._elementInfo.get(i);
            o &&
              (o.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(o));
          }
          focusVia(e, i, o) {
            const r = ss(e);
            r === this._getDocument().activeElement
              ? this._getClosestElementsInfo(r).forEach(([a, l]) =>
                  this._originChanged(a, i, l)
                )
              : (this._setOrigin(i),
                "function" == typeof r.focus && r.focus(o));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : e && this._isLastInteractionFromInputLabel(e)
              ? "mouse"
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!e?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(e, i) {
            e.classList.toggle("cdk-focused", !!i),
              e.classList.toggle("cdk-touch-focused", "touch" === i),
              e.classList.toggle("cdk-keyboard-focused", "keyboard" === i),
              e.classList.toggle("cdk-mouse-focused", "mouse" === i),
              e.classList.toggle("cdk-program-focused", "program" === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const o = this._elementInfo.get(i),
              r = bi(e);
            !o ||
              (!o.checkChildren && i !== r) ||
              this._originChanged(i, this._getFocusOrigin(r), o);
          }
          _onBlur(e, i) {
            const o = this._elementInfo.get(i);
            !o ||
              (o.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(o, null));
          }
          _emitOrigin(e, i) {
            e.subject.observers.length &&
              this._ngZone.run(() => e.subject.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              o = this._rootNodeFocusListenerCount.get(i) || 0;
            o ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  eu
                ),
                  i.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    eu
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, o + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(hd(this._stopInputModalityDetector))
                  .subscribe((r) => {
                    this._setOrigin(r, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const o = this._rootNodeFocusListenerCount.get(i);
              o > 1
                ? this._rootNodeFocusListenerCount.set(i, o - 1)
                : (i.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    eu
                  ),
                  i.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    eu
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, o) {
            this._setClasses(e, i),
              this._emitOrigin(o, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((o, r) => {
                (r === e || (o.checkChildren && r.contains(e))) &&
                  i.push([r, o]);
              }),
              i
            );
          }
          _isLastInteractionFromInputLabel(e) {
            const { _mostRecentTarget: i, mostRecentModality: o } =
              this._inputModalityDetector;
            if (
              "mouse" !== o ||
              !i ||
              i === e ||
              ("INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName) ||
              e.disabled
            )
              return !1;
            const r = e.labels;
            if (r)
              for (let s = 0; s < r.length; s++)
                if (r[s].contains(i)) return !0;
            return !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(X), C(Zn), C(b4), C(re, 8), C(w4, 8));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const AS = "cdk-high-contrast-black-on-white",
        OS = "cdk-high-contrast-white-on-black",
        Tg = "cdk-high-contrast-active";
      let RS = (() => {
          class t {
            constructor(e, i) {
              (this._platform = e),
                (this._document = i),
                (this._breakpointSubscription = R(o4)
                  .observe("(forced-colors: active)")
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const i = this._document.defaultView || window,
                o = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                r = ((o && o.backgroundColor) || "").replace(/ /g, "");
              switch ((e.remove(), r)) {
                case "rgb(0,0,0)":
                case "rgb(45,50,54)":
                case "rgb(32,32,32)":
                  return 2;
                case "rgb(255,255,255)":
                case "rgb(255,250,239)":
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove(Tg, AS, OS), (this._hasCheckedHighContrastMode = !0);
                const i = this.getHighContrastMode();
                1 === i ? e.add(Tg, AS) : 2 === i && e.add(Tg, OS);
              }
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(Zn), C(re));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        D4 = (() => {
          class t {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(RS));
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [vS] }));
          }
          return t;
        })();
      function x4(t, n) {}
      class tu {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0),
            (this.closeOnOverlayDetachments = !0);
        }
      }
      let PS = (() => {
        class t extends bg {
          constructor(e, i, o, r, s, a, l, c) {
            super(),
              (this._elementRef = e),
              (this._focusTrapFactory = i),
              (this._config = r),
              (this._interactivityChecker = s),
              (this._ngZone = a),
              (this._overlayRef = l),
              (this._focusMonitor = c),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this._ariaLabelledByQueue = []),
              (this.attachDomPortal = (d) => {
                this._portalOutlet.hasAttached();
                const u = this._portalOutlet.attachDomPortal(d);
                return this._contentAttached(), u;
              }),
              (this._document = o),
              this._config.ariaLabelledBy &&
                this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachComponentPortal(e);
            return this._contentAttached(), i;
          }
          attachTemplatePortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachTemplatePortal(e);
            return this._contentAttached(), i;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(e, i) {
            this._interactivityChecker.isFocusable(e) ||
              ((e.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const o = () => {
                  e.removeEventListener("blur", o),
                    e.removeEventListener("mousedown", o),
                    e.removeAttribute("tabindex");
                };
                e.addEventListener("blur", o),
                  e.addEventListener("mousedown", o);
              })),
              e.focus(i);
          }
          _focusByCssSelector(e, i) {
            let o = this._elementRef.nativeElement.querySelector(e);
            o && this._forceFocus(o, i);
          }
          _trapFocus() {
            const e = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case "dialog":
                this._containsFocus() || e.focus();
                break;
              case !0:
              case "first-tabbable":
                this._focusTrap.focusInitialElementWhenReady().then((i) => {
                  i || this._focusDialogContainer();
                });
                break;
              case "first-heading":
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]'
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const e = this._config.restoreFocus;
            let i = null;
            if (
              ("string" == typeof e
                ? (i = this._document.querySelector(e))
                : "boolean" == typeof e
                ? (i = e ? this._elementFocusedBeforeDialogWasOpened : null)
                : e && (i = e),
              this._config.restoreFocus && i && "function" == typeof i.focus)
            ) {
              const o = fg(),
                r = this._elementRef.nativeElement;
              (!o || o === this._document.body || o === r || r.contains(o)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(i, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : i.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const e = this._elementRef.nativeElement,
              i = fg();
            return e === i || e.contains(i);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = fg());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(
              y(Me),
              y(Mg),
              y(re, 8),
              y(tu),
              y(Jd),
              y(X),
              y(Ka),
              y(Sg)
            );
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["cdk-dialog-container"]],
            viewQuery: function (i, o) {
              if ((1 & i && wo(Cg, 7), 2 & i)) {
                let r;
                zt((r = qt())) && (o._portalOutlet = r.first);
              }
            },
            hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
            hostVars: 6,
            hostBindings: function (i, o) {
              2 & i &&
                We("id", o._config.id || null)("role", o._config.role)(
                  "aria-modal",
                  o._config.ariaModal
                )(
                  "aria-labelledby",
                  o._config.ariaLabel ? null : o._ariaLabelledByQueue[0]
                )("aria-label", o._config.ariaLabel)(
                  "aria-describedby",
                  o._config.ariaDescribedBy || null
                );
            },
            features: [le],
            decls: 1,
            vars: 0,
            consts: [["cdkPortalOutlet", ""]],
            template: function (i, o) {
              1 & i && B(0, x4, 0, 0, "ng-template", 0);
            },
            dependencies: [Cg],
            styles: [
              ".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}",
            ],
            encapsulation: 2,
          }));
        }
        return t;
      })();
      class Ig {
        constructor(n, e) {
          (this.overlayRef = n),
            (this.config = e),
            (this.closed = new me()),
            (this.disableClose = e.disableClose),
            (this.backdropClick = n.backdropClick()),
            (this.keydownEvents = n.keydownEvents()),
            (this.outsidePointerEvents = n.outsidePointerEvents()),
            (this.id = e.id),
            this.keydownEvents.subscribe((i) => {
              27 === i.keyCode &&
                !this.disableClose &&
                !Za(i) &&
                (i.preventDefault(),
                this.close(void 0, { focusOrigin: "keyboard" }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: "mouse" });
            }),
            (this._detachSubscription = n.detachments().subscribe(() => {
              !1 !== e.closeOnOverlayDetachments && this.close();
            }));
        }
        close(n, e) {
          if (this.containerInstance) {
            const i = this.closed;
            (this.containerInstance._closeInteractionType =
              e?.focusOrigin || "program"),
              this._detachSubscription.unsubscribe(),
              this.overlayRef.dispose(),
              i.next(n),
              i.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(n = "", e = "") {
          return this.overlayRef.updateSize({ width: n, height: e }), this;
        }
        addPanelClass(n) {
          return this.overlayRef.addPanelClass(n), this;
        }
        removePanelClass(n) {
          return this.overlayRef.removePanelClass(n), this;
        }
      }
      const kS = new S("DialogScrollStrategy"),
        E4 = new S("DialogData"),
        M4 = new S("DefaultDialogConfig"),
        T4 = {
          provide: kS,
          deps: [to],
          useFactory: function S4(t) {
            return () => t.scrollStrategies.block();
          },
        };
      let I4 = 0,
        FS = (() => {
          class t {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            constructor(e, i, o, r, s, a) {
              (this._overlay = e),
                (this._injector = i),
                (this._defaultOptions = o),
                (this._parentDialog = r),
                (this._overlayContainer = s),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new me()),
                (this._afterOpenedAtThisLevel = new me()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = Ca(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(wa(void 0))
                )),
                (this._scrollStrategy = a);
            }
            open(e, i) {
              ((i = { ...(this._defaultOptions || new tu()), ...i }).id =
                i.id || "cdk-dialog-" + I4++),
                i.id && this.getDialogById(i.id);
              const r = this._getOverlayConfig(i),
                s = this._overlay.create(r),
                a = new Ig(s, i),
                l = this._attachContainer(s, a, i);
              return (
                (a.containerInstance = l),
                this._attachDialogContent(e, a, l, i),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(a),
                a.closed.subscribe(() => this._removeOpenDialog(a, !0)),
                this.afterOpened.next(a),
                a
              );
            }
            closeAll() {
              Ag(this.openDialogs, (e) => e.close());
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              Ag(this._openDialogsAtThisLevel, (e) => {
                !1 === e.config.closeOnDestroy && this._removeOpenDialog(e, !1);
              }),
                Ag(this._openDialogsAtThisLevel, (e) => e.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(e) {
              const i = new Dg({
                positionStrategy:
                  e.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                panelClass: e.panelClass,
                hasBackdrop: e.hasBackdrop,
                direction: e.direction,
                minWidth: e.minWidth,
                minHeight: e.minHeight,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                width: e.width,
                height: e.height,
                disposeOnNavigation: e.closeOnNavigation,
              });
              return e.backdropClass && (i.backdropClass = e.backdropClass), i;
            }
            _attachContainer(e, i, o) {
              const r = o.injector || o.viewContainerRef?.injector,
                s = [
                  { provide: tu, useValue: o },
                  { provide: Ig, useValue: i },
                  { provide: Ka, useValue: e },
                ];
              let a;
              o.container
                ? "function" == typeof o.container
                  ? (a = o.container)
                  : ((a = o.container.type),
                    s.push(...o.container.providers(o)))
                : (a = PS);
              const l = new yg(
                a,
                o.viewContainerRef,
                He.create({ parent: r || this._injector, providers: s }),
                o.componentFactoryResolver
              );
              return e.attach(l).instance;
            }
            _attachDialogContent(e, i, o, r) {
              if (e instanceof en) {
                const s = this._createInjector(r, i, o, void 0);
                let a = { $implicit: r.data, dialogRef: i };
                r.templateContext &&
                  (a = {
                    ...a,
                    ...("function" == typeof r.templateContext
                      ? r.templateContext()
                      : r.templateContext),
                  }),
                  o.attachTemplatePortal(new vg(e, null, a, s));
              } else {
                const s = this._createInjector(r, i, o, this._injector),
                  a = o.attachComponentPortal(
                    new yg(e, r.viewContainerRef, s, r.componentFactoryResolver)
                  );
                (i.componentRef = a), (i.componentInstance = a.instance);
              }
            }
            _createInjector(e, i, o, r) {
              const s = e.injector || e.viewContainerRef?.injector,
                a = [
                  { provide: E4, useValue: e.data },
                  { provide: Ig, useValue: i },
                ];
              return (
                e.providers &&
                  ("function" == typeof e.providers
                    ? a.push(...e.providers(i, e, o))
                    : a.push(...e.providers)),
                e.direction &&
                  (!s || !s.get(Yd, null, { optional: !0 })) &&
                  a.push({
                    provide: Yd,
                    useValue: { value: e.direction, change: H() },
                  }),
                He.create({ parent: s || r, providers: a })
              );
            }
            _removeOpenDialog(e, i) {
              const o = this.openDialogs.indexOf(e);
              o > -1 &&
                (this.openDialogs.splice(o, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((r, s) => {
                    r
                      ? s.setAttribute("aria-hidden", r)
                      : s.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  i && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const e = this._overlayContainer.getContainerElement();
              if (e.parentElement) {
                const i = e.parentElement.children;
                for (let o = i.length - 1; o > -1; o--) {
                  const r = i[o];
                  r !== e &&
                    "SCRIPT" !== r.nodeName &&
                    "STYLE" !== r.nodeName &&
                    !r.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      r,
                      r.getAttribute("aria-hidden")
                    ),
                    r.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(
                C(to),
                C(He),
                C(M4, 8),
                C(t, 12),
                C(Zd),
                C(kS)
              );
            });
            static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
          }
          return t;
        })();
      function Ag(t, n) {
        let e = t.length;
        for (; e--; ) n(t[e]);
      }
      let A4 = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({
            providers: [FS, T4],
            imports: [xg, Kd, D4, Kd],
          }));
        }
        return t;
      })();
      const R4 = new S("mat-sanity-checks", {
        providedIn: "root",
        factory: function O4() {
          return !0;
        },
      });
      let vn = (() => {
        class t {
          constructor(e, i, o) {
            (this._sanityChecks = i),
              (this._document = o),
              (this._hasDoneGlobalChecks = !1),
              e._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(e) {
            return (
              !pg() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[e])
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(RS), C(R4, 8), C(re));
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({ imports: [Ya, Ya] }));
        }
        return t;
      })();
      const VS = Wa({ passive: !0, capture: !0 });
      class F4 {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = (n) => {
              const e = bi(n);
              e &&
                this._events.get(n.type)?.forEach((i, o) => {
                  (o === e || o.contains(e)) &&
                    i.forEach((r) => r.handleEvent(n));
                });
            });
        }
        addHandler(n, e, i, o) {
          const r = this._events.get(e);
          if (r) {
            const s = r.get(i);
            s ? s.add(o) : r.set(i, new Set([o]));
          } else
            this._events.set(e, new Map([[i, new Set([o])]])),
              n.runOutsideAngular(() => {
                document.addEventListener(e, this._delegateEventHandler, VS);
              });
        }
        removeHandler(n, e, i) {
          const o = this._events.get(n);
          if (!o) return;
          const r = o.get(e);
          r &&
            (r.delete(i),
            0 === r.size && o.delete(e),
            0 === o.size &&
              (this._events.delete(n),
              document.removeEventListener(n, this._delegateEventHandler, VS)));
        }
      }
      class Og {
        static #e = (this._eventManager = new F4());
        constructor(n, e, i, o) {
          (this._target = n),
            (this._ngZone = e),
            (this._platform = o),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            o.isBrowser && (this._containerElement = ss(i));
        }
        fadeInRipple(n, e, i = {}) {
          const o = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            r = { ...BS, ...i.animation },
            s =
              i.radius ||
              (function L4(t, n, e) {
                const i = Math.max(Math.abs(t - e.left), Math.abs(t - e.right)),
                  o = Math.max(Math.abs(n - e.top), Math.abs(n - e.bottom));
                return Math.sqrt(i * i + o * o);
              })(n, e, o),
            a = n - o.left,
            l = e - o.top,
            c = r.enterDuration,
            d = document.createElement("div");
          d.classList.add("mat-ripple-element"),
            (d.style.left = a - s + "px"),
            (d.style.top = l - s + "px"),
            (d.style.height = 2 * s + "px"),
            (d.style.width = 2 * s + "px"),
            null != i.color && (d.style.backgroundColor = i.color),
            (d.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(d);
          const u = window.getComputedStyle(d),
            f = u.transitionDuration,
            p =
              "none" === u.transitionProperty ||
              "0s" === f ||
              "0s, 0s" === f ||
              (0 === o.width && 0 === o.height),
            m = new k4(this, d, i, p);
          (d.style.transform = "scale3d(1, 1, 1)"),
            (m.state = 0),
            i.persistent || (this._mostRecentTransientRipple = m);
          return (
            !p &&
              (c || r.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const D = () => this._finishRippleTransition(m),
                  b = () => this._destroyRipple(m);
                d.addEventListener("transitionend", D),
                  d.addEventListener("transitioncancel", b);
              }),
            this._activeRipples.set(m, null),
            (p || !c) && this._finishRippleTransition(m),
            m
          );
        }
        fadeOutRipple(n) {
          if (2 === n.state || 3 === n.state) return;
          const e = n.element,
            i = { ...BS, ...n.config.animation };
          (e.style.transitionDuration = `${i.exitDuration}ms`),
            (e.style.opacity = "0"),
            (n.state = 2),
            (n._animationForciblyDisabledThroughCss || !i.exitDuration) &&
              this._finishRippleTransition(n);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((n) => n.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((n) => {
            n.config.persistent || n.fadeOut();
          });
        }
        setupTriggerEvents(n) {
          const e = ss(n);
          !this._platform.isBrowser ||
            !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            HS.forEach((i) => {
              Og._eventManager.addHandler(this._ngZone, i, e, this);
            }));
        }
        handleEvent(n) {
          "mousedown" === n.type
            ? this._onMousedown(n)
            : "touchstart" === n.type
            ? this._onTouchStart(n)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                US.forEach((e) => {
                  this._triggerElement.addEventListener(e, this, jS);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(n) {
          0 === n.state
            ? this._startFadeOutTransition(n)
            : 2 === n.state && this._destroyRipple(n);
        }
        _startFadeOutTransition(n) {
          const e = n === this._mostRecentTransientRipple,
            { persistent: i } = n.config;
          (n.state = 1), !i && (!e || !this._isPointerDown) && n.fadeOut();
        }
        _destroyRipple(n) {
          const e = this._activeRipples.get(n) ?? null;
          this._activeRipples.delete(n),
            this._activeRipples.size || (this._containerRect = null),
            n === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (n.state = 3),
            null !== e &&
              (n.element.removeEventListener(
                "transitionend",
                e.onTransitionEnd
              ),
              n.element.removeEventListener(
                "transitioncancel",
                e.onTransitionCancel
              )),
            n.element.remove();
        }
        _onMousedown(n) {
          const e = SS(n),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(n.clientX, n.clientY, this._target.rippleConfig));
        }
        _onTouchStart(n) {
          if (!this._target.rippleDisabled && !TS(n)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = n.changedTouches;
            if (e)
              for (let i = 0; i < e.length; i++)
                this.fadeInRipple(
                  e[i].clientX,
                  e[i].clientY,
                  this._target.rippleConfig
                );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((n) => {
              !n.config.persistent &&
                (1 === n.state ||
                  (n.config.terminateOnPointerUp && 0 === n.state)) &&
                n.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const n = this._triggerElement;
          n &&
            (HS.forEach((e) => Og._eventManager.removeHandler(e, n, this)),
            this._pointerUpEventsRegistered &&
              US.forEach((e) => n.removeEventListener(e, this, jS)));
        }
      }
      let V4 = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [vn, vn] }));
          }
          return t;
        })(),
        B4 = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [vn] }));
          }
          return t;
        })(),
        $S = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [V4, Eo, vn, B4] }));
          }
          return t;
        })();
      class zS {}
      class $4 {}
      const Ci = "*";
      function Qn(t, n) {
        return { type: 7, name: t, definitions: n, options: {} };
      }
      function ut(t, n = null) {
        return { type: 4, styles: n, timings: t };
      }
      function qS(t, n = null) {
        return { type: 2, steps: t, options: n };
      }
      function te(t) {
        return { type: 6, styles: t, offset: null };
      }
      function Lt(t, n, e) {
        return { type: 0, name: t, styles: n, options: e };
      }
      function Xa(t) {
        return { type: 5, steps: t };
      }
      function _t(t, n, e = null) {
        return { type: 1, expr: t, animation: n, options: e };
      }
      class Ja {
        constructor(n = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = n + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          queueMicrotask(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((n) => n()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(n) {
          this._position = this.totalTime ? n * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(n) {
          const e = "start" == n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class YS {
        constructor(n) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = n);
          let e = 0,
            i = 0,
            o = 0;
          const r = this.players.length;
          0 == r
            ? queueMicrotask(() => this._onFinish())
            : this.players.forEach((s) => {
                s.onDone(() => {
                  ++e == r && this._onFinish();
                }),
                  s.onDestroy(() => {
                    ++i == r && this._onDestroy();
                  }),
                  s.onStart(() => {
                    ++o == r && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (s, a) => Math.max(s, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((n) => n.init());
        }
        onStart(n) {
          this._onStartFns.push(n);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((n) => n()),
            (this._onStartFns = []));
        }
        onDone(n) {
          this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((n) => n.play());
        }
        pause() {
          this.players.forEach((n) => n.pause());
        }
        restart() {
          this.players.forEach((n) => n.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((n) => n.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((n) => n.destroy()),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((n) => n.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(n) {
          const e = n * this.totalTime;
          this.players.forEach((i) => {
            const o = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(o);
          });
        }
        getPosition() {
          const n = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != n ? n.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((n) => {
            n.beforeDestroy && n.beforeDestroy();
          });
        }
        triggerCallback(n) {
          const e = "start" == n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      function z4(t, n) {}
      class nu {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const kg = "mdc-dialog--open",
        KS = "mdc-dialog--opening",
        ZS = "mdc-dialog--closing";
      let W4 = (() => {
        class t extends PS {
          constructor(e, i, o, r, s, a, l, c) {
            super(e, i, o, r, s, a, l, c),
              (this._animationStateChanged = new V());
          }
          _captureInitialFocus() {
            this._config.delayFocusTrap || this._trapFocus();
          }
          _openAnimationDone(e) {
            this._config.delayFocusTrap && this._trapFocus(),
              this._animationStateChanged.next({
                state: "opened",
                totalTime: e,
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(
              y(Me),
              y(Mg),
              y(re, 8),
              y(nu),
              y(Jd),
              y(X),
              y(Ka),
              y(Sg)
            );
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["ng-component"]],
            features: [le],
            decls: 0,
            vars: 0,
            template: function (i, o) {},
            encapsulation: 2,
          }));
        }
        return t;
      })();
      const QS = "--mat-dialog-transition-duration";
      function XS(t) {
        return null == t
          ? null
          : "number" == typeof t
          ? t
          : t.endsWith("ms")
          ? eS(t.substring(0, t.length - 2))
          : t.endsWith("s")
          ? 1e3 * eS(t.substring(0, t.length - 1))
          : "0" === t
          ? 0
          : null;
      }
      let Y4 = (() => {
        class t extends W4 {
          constructor(e, i, o, r, s, a, l, c, d) {
            super(e, i, o, r, s, a, l, d),
              (this._animationMode = c),
              (this._animationsEnabled =
                "NoopAnimations" !== this._animationMode),
              (this._hostElement = this._elementRef.nativeElement),
              (this._enterAnimationDuration = this._animationsEnabled
                ? XS(this._config.enterAnimationDuration) ?? 150
                : 0),
              (this._exitAnimationDuration = this._animationsEnabled
                ? XS(this._config.exitAnimationDuration) ?? 75
                : 0),
              (this._animationTimer = null),
              (this._finishDialogOpen = () => {
                this._clearAnimationClasses(),
                  this._openAnimationDone(this._enterAnimationDuration);
              }),
              (this._finishDialogClose = () => {
                this._clearAnimationClasses(),
                  this._animationStateChanged.emit({
                    state: "closed",
                    totalTime: this._exitAnimationDuration,
                  });
              });
          }
          _contentAttached() {
            super._contentAttached(), this._startOpenAnimation();
          }
          ngOnDestroy() {
            super.ngOnDestroy(),
              null !== this._animationTimer &&
                clearTimeout(this._animationTimer);
          }
          _startOpenAnimation() {
            this._animationStateChanged.emit({
              state: "opening",
              totalTime: this._enterAnimationDuration,
            }),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    QS,
                    `${this._enterAnimationDuration}ms`
                  ),
                  this._requestAnimationFrame(() =>
                    this._hostElement.classList.add(KS, kg)
                  ),
                  this._waitForAnimationToComplete(
                    this._enterAnimationDuration,
                    this._finishDialogOpen
                  ))
                : (this._hostElement.classList.add(kg),
                  Promise.resolve().then(() => this._finishDialogOpen()));
          }
          _startExitAnimation() {
            this._animationStateChanged.emit({
              state: "closing",
              totalTime: this._exitAnimationDuration,
            }),
              this._hostElement.classList.remove(kg),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    QS,
                    `${this._exitAnimationDuration}ms`
                  ),
                  this._requestAnimationFrame(() =>
                    this._hostElement.classList.add(ZS)
                  ),
                  this._waitForAnimationToComplete(
                    this._exitAnimationDuration,
                    this._finishDialogClose
                  ))
                : Promise.resolve().then(() => this._finishDialogClose());
          }
          _clearAnimationClasses() {
            this._hostElement.classList.remove(KS, ZS);
          }
          _waitForAnimationToComplete(e, i) {
            null !== this._animationTimer && clearTimeout(this._animationTimer),
              (this._animationTimer = setTimeout(i, e));
          }
          _requestAnimationFrame(e) {
            this._ngZone.runOutsideAngular(() => {
              "function" == typeof requestAnimationFrame
                ? requestAnimationFrame(e)
                : e();
            });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(
              y(Me),
              y(Mg),
              y(re, 8),
              y(nu),
              y(Jd),
              y(X),
              y(Ka),
              y(Hs, 8),
              y(Sg)
            );
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["mat-dialog-container"]],
            hostAttrs: [
              "tabindex",
              "-1",
              1,
              "mat-mdc-dialog-container",
              "mdc-dialog",
            ],
            hostVars: 8,
            hostBindings: function (i, o) {
              2 & i &&
                (Tc("id", o._config.id),
                We("aria-modal", o._config.ariaModal)("role", o._config.role)(
                  "aria-labelledby",
                  o._config.ariaLabel ? null : o._ariaLabelledByQueue[0]
                )("aria-label", o._config.ariaLabel)(
                  "aria-describedby",
                  o._config.ariaDescribedBy || null
                ),
                En("_mat-animation-noopable", !o._animationsEnabled));
            },
            features: [le],
            decls: 3,
            vars: 0,
            consts: [
              [1, "mdc-dialog__container"],
              [1, "mat-mdc-dialog-surface", "mdc-dialog__surface"],
              ["cdkPortalOutlet", ""],
            ],
            template: function (i, o) {
              1 & i &&
                (_(0, "div", 0)(1, "div", 1),
                B(2, z4, 0, 0, "ng-template", 2),
                g()());
            },
            dependencies: [Cg],
            styles: [
              '.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{--mdc-dialog-container-elevation-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);--mdc-dialog-container-shadow-color:#000;--mdc-dialog-container-shape:4px;--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}',
            ],
            encapsulation: 2,
          }));
        }
        return t;
      })();
      class iu {
        constructor(n, e, i) {
          (this._ref = n),
            (this._containerInstance = i),
            (this._afterOpened = new me()),
            (this._beforeClosed = new me()),
            (this._state = 0),
            (this.disableClose = e.disableClose),
            (this.id = n.id),
            i._animationStateChanged
              .pipe(
                Ue((o) => "opened" === o.state),
                dt(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            i._animationStateChanged
              .pipe(
                Ue((o) => "closed" === o.state),
                dt(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            n.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            Si(
              this.backdropClick(),
              this.keydownEvents().pipe(
                Ue((o) => 27 === o.keyCode && !this.disableClose && !Za(o))
              )
            ).subscribe((o) => {
              this.disableClose ||
                (o.preventDefault(),
                JS(this, "keydown" === o.type ? "keyboard" : "mouse"));
            });
        }
        close(n) {
          (this._result = n),
            this._containerInstance._animationStateChanged
              .pipe(
                Ue((e) => "closing" === e.state),
                dt(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(n),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    e.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(n) {
          let e = this._ref.config.positionStrategy;
          return (
            n && (n.left || n.right)
              ? n.left
                ? e.left(n.left)
                : e.right(n.right)
              : e.centerHorizontally(),
            n && (n.top || n.bottom)
              ? n.top
                ? e.top(n.top)
                : e.bottom(n.bottom)
              : e.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(n = "", e = "") {
          return this._ref.updateSize(n, e), this;
        }
        addPanelClass(n) {
          return this._ref.addPanelClass(n), this;
        }
        removePanelClass(n) {
          return this._ref.removePanelClass(n), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      function JS(t, n, e) {
        return (t._closeInteractionType = n), t.close(e);
      }
      const eT = new S("MatMdcDialogData"),
        K4 = new S("mat-mdc-dialog-default-options"),
        tT = new S("mat-mdc-dialog-scroll-strategy"),
        Q4 = {
          provide: tT,
          deps: [to],
          useFactory: function Z4(t) {
            return () => t.scrollStrategies.block();
          },
        };
      let X4 = 0,
        J4 = (() => {
          class t {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            constructor(e, i, o, r, s, a, l, c, d, u) {
              (this._overlay = e),
                (this._defaultOptions = o),
                (this._parentDialog = r),
                (this._dialogRefConstructor = l),
                (this._dialogContainerType = c),
                (this._dialogDataToken = d),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new me()),
                (this._afterOpenedAtThisLevel = new me()),
                (this._idPrefix = "mat-dialog-"),
                (this.dialogConfigClass = nu),
                (this.afterAllClosed = Ca(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(wa(void 0))
                )),
                (this._scrollStrategy = a),
                (this._dialog = i.get(FS));
            }
            open(e, i) {
              let o;
              ((i = { ...(this._defaultOptions || new nu()), ...i }).id =
                i.id || `${this._idPrefix}${X4++}`),
                (i.scrollStrategy = i.scrollStrategy || this._scrollStrategy());
              const r = this._dialog.open(e, {
                ...i,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                closeOnOverlayDetachments: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: this.dialogConfigClass, useValue: i },
                    { provide: tu, useValue: i },
                  ],
                },
                templateContext: () => ({ dialogRef: o }),
                providers: (s, a, l) => (
                  (o = new this._dialogRefConstructor(s, i, l)),
                  o.updatePosition(i?.position),
                  [
                    { provide: this._dialogContainerType, useValue: l },
                    { provide: this._dialogDataToken, useValue: a.data },
                    { provide: this._dialogRefConstructor, useValue: o },
                  ]
                ),
              });
              return (
                (o.componentRef = r.componentRef),
                (o.componentInstance = r.componentInstance),
                this.openDialogs.push(o),
                this.afterOpened.next(o),
                o.afterClosed().subscribe(() => {
                  const s = this.openDialogs.indexOf(o);
                  s > -1 &&
                    (this.openDialogs.splice(s, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                o
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(e) {
              let i = e.length;
              for (; i--; ) e[i].close();
            }
            static #e = (this.ɵfac = function (i) {
              Mf();
            });
            static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        ou = (() => {
          class t extends J4 {
            constructor(e, i, o, r, s, a, l, c) {
              super(e, i, r, a, l, s, iu, Y4, eT, c),
                (this._idPrefix = "mat-mdc-dialog-");
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(
                C(to),
                C(He),
                C(ua, 8),
                C(K4, 8),
                C(tT),
                C(t, 12),
                C(Zd),
                C(Hs, 8)
              );
            });
            static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        e5 = 0,
        t5 = (() => {
          class t {
            constructor(e, i, o) {
              (this.dialogRef = e),
                (this._elementRef = i),
                (this._dialog = o),
                (this.type = "button");
            }
            ngOnInit() {
              this.dialogRef ||
                (this.dialogRef = nT(
                  this._elementRef,
                  this._dialog.openDialogs
                ));
            }
            ngOnChanges(e) {
              const i = e._matDialogClose || e._matDialogCloseResult;
              i && (this.dialogResult = i.currentValue);
            }
            _onButtonClick(e) {
              JS(
                this.dialogRef,
                0 === e.screenX && 0 === e.screenY ? "keyboard" : "mouse",
                this.dialogResult
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(iu, 8), y(Me), y(ou));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["", "mat-dialog-close", ""],
                ["", "matDialogClose", ""],
              ],
              hostVars: 2,
              hostBindings: function (i, o) {
                1 & i &&
                  F("click", function (s) {
                    return o._onButtonClick(s);
                  }),
                  2 & i &&
                    We("aria-label", o.ariaLabel || null)("type", o.type);
              },
              inputs: {
                ariaLabel: ["aria-label", "ariaLabel"],
                type: "type",
                dialogResult: ["mat-dialog-close", "dialogResult"],
                _matDialogClose: ["matDialogClose", "_matDialogClose"],
              },
              exportAs: ["matDialogClose"],
              features: [Tt],
            }));
          }
          return t;
        })(),
        n5 = (() => {
          class t {
            constructor(e, i, o) {
              (this._dialogRef = e),
                (this._elementRef = i),
                (this._dialog = o),
                (this.id = "mat-mdc-dialog-title-" + e5++);
            }
            ngOnInit() {
              this._dialogRef ||
                (this._dialogRef = nT(
                  this._elementRef,
                  this._dialog.openDialogs
                )),
                this._dialogRef &&
                  Promise.resolve().then(() => {
                    this._dialogRef._containerInstance?._ariaLabelledByQueue?.push(
                      this.id
                    );
                  });
            }
            ngOnDestroy() {
              const e =
                this._dialogRef?._containerInstance?._ariaLabelledByQueue;
              e &&
                Promise.resolve().then(() => {
                  const i = e.indexOf(this.id);
                  i > -1 && e.splice(i, 1);
                });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(iu, 8), y(Me), y(ou));
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["", "mat-dialog-title", ""],
                ["", "matDialogTitle", ""],
              ],
              hostAttrs: [1, "mat-mdc-dialog-title", "mdc-dialog__title"],
              hostVars: 1,
              hostBindings: function (i, o) {
                2 & i && Tc("id", o.id);
              },
              inputs: { id: "id" },
              exportAs: ["matDialogTitle"],
            }));
          }
          return t;
        })(),
        o5 = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["", "mat-dialog-content", ""],
                ["mat-dialog-content"],
                ["", "matDialogContent", ""],
              ],
              hostAttrs: [1, "mat-mdc-dialog-content", "mdc-dialog__content"],
            }));
          }
          return t;
        })(),
        r5 = (() => {
          class t {
            constructor() {
              this.align = "start";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵdir = j({
              type: t,
              selectors: [
                ["", "mat-dialog-actions", ""],
                ["mat-dialog-actions"],
                ["", "matDialogActions", ""],
              ],
              hostAttrs: [1, "mat-mdc-dialog-actions", "mdc-dialog__actions"],
              hostVars: 4,
              hostBindings: function (i, o) {
                2 & i &&
                  En(
                    "mat-mdc-dialog-actions-align-center",
                    "center" === o.align
                  )("mat-mdc-dialog-actions-align-end", "end" === o.align);
              },
              inputs: { align: "align" },
            }));
          }
          return t;
        })();
      function nT(t, n) {
        let e = t.nativeElement.parentElement;
        for (; e && !e.classList.contains("mat-mdc-dialog-container"); )
          e = e.parentElement;
        return e ? n.find((i) => i.id === e.id) : null;
      }
      let s5 = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({
            providers: [ou, Q4],
            imports: [A4, xg, Kd, vn, vn],
          }));
        }
        return t;
      })();
      function a5(t, n) {
        if ((1 & t && (_(0, "mat-checkbox", 7), w(1), g()), 2 & t)) {
          const e = n.$implicit,
            i = n.index;
          T("formControl", L().checkboxControl[i]), M(1), Ne(" ", e.name, " ");
        }
      }
      let oT = (() => {
          class t {
            constructor(e, i, o, r) {
              (this.dialogRef = e),
                (this.data = i),
                (this.resumeService = o),
                (this.router = r),
                (this.checkboxControl = []),
                (this.checkboxControl = i.portals.map(
                  (s) => new Xi(s.checked)
                ));
            }
            onNoClick() {
              this.dialogRef.close();
            }
            postJob() {
              this.dialogRef.close(this.data.portals),
                this.router.navigate(["/job-details"]);
            }
            uploadToNaukri(e) {
              this.resumeService.uploadToNaukri(e).subscribe(
                (i) => {
                  console.log("Uploaded to Naukri:", i);
                },
                (i) => {
                  console.error("Error uploading to Naukri:", i);
                }
              );
            }
            uploadToLinkedIn(e) {
              this.resumeService.uploadToLinkedIn(e).subscribe(
                (i) => {
                  console.log("Uploaded to LinkedIn:", i);
                },
                (i) => {
                  console.error("Error uploading to LinkedIn:", i);
                }
              );
            }
            uploadToIndeed(e) {
              this.resumeService.uploadToIndeed(e).subscribe(
                (i) => {
                  console.log("Uploaded to Indeed:", i);
                },
                (i) => {
                  console.error("Error uploading to Indeed:", i);
                }
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(y(iu), y(eT), y(ko), y(et));
            });
            static #t = (this.ɵcmp = Ae({
              type: t,
              selectors: [["app-job-posting-dialog"]],
              decls: 10,
              vars: 2,
              consts: [
                ["mat-dialog-title", "", 1, "dialog-title"],
                ["mat-dialog-content", "", 1, "dialog-content"],
                [1, "portal-list"],
                [3, "formControl", 4, "ngFor", "ngForOf"],
                ["mat-dialog-actions", "", 1, "dialog-actions"],
                ["mat-button", "", 1, "cancel-button", "btn", 3, "click"],
                [
                  "mat-raised-button",
                  "",
                  "color",
                  "primary",
                  1,
                  "post-button",
                  "btn",
                  3,
                  "mat-dialog-close",
                ],
                [3, "formControl"],
              ],
              template: function (i, o) {
                1 & i &&
                  (_(0, "h2", 0),
                  w(1, "Post Job"),
                  g(),
                  _(2, "div", 1)(3, "div", 2),
                  B(4, a5, 2, 2, "mat-checkbox", 3),
                  g()(),
                  _(5, "div", 4)(6, "button", 5),
                  F("click", function () {
                    return o.onNoClick();
                  }),
                  w(7, "Cancel"),
                  g(),
                  _(8, "button", 6),
                  w(9, "Post Job"),
                  g()()),
                  2 & i &&
                    (M(4),
                    T("ngForOf", o.data.portals),
                    M(4),
                    T("mat-dialog-close", o.data.portals));
              },
              dependencies: [Hi, Zi, eg, t5, n5, o5, r5],
              styles: [
                ".dialog-title[_ngcontent-%COMP%]{font-size:24px;font-weight:600;color:#333}.dialog-content[_ngcontent-%COMP%]{padding:16px}.portal-list[_ngcontent-%COMP%]{margin-top:12px}.dialog-actions[_ngcontent-%COMP%]{justify-content:space-between;padding:16px;border-top:1px solid #ccc;margin-top:16px}.cancel-button[_ngcontent-%COMP%]{color:#333;background-color:#eee;transition:background-color .3s ease}.cancel-button[_ngcontent-%COMP%]:hover{background-color:#ddd}.post-button[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;transition:background-color .3s ease}.post-button[_ngcontent-%COMP%]:hover{background-color:#0056b3}",
              ],
            }));
          }
          return t;
        })(),
        rT = (() => {
          class t {
            constructor(e) {
              (this.http = e), (this.apiUrl = "http://localhost:5002/api");
            }
            generateDescription(e) {
              return this.http.post(`${this.apiUrl}/generate-description`, e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(C(mi));
            });
            static #t = (this.ɵprov = I({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      function l5(t, n) {
        if ((1 & t && (_(0, "option", 44), w(1), g()), 2 & t)) {
          const e = n.$implicit;
          T("value", e), M(1), Ne(" ", e, " ");
        }
      }
      function c5(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "div", 49),
            w(1),
            _(2, "button", 50),
            F("click", function () {
              const r = Ce(e).$implicit;
              return we(L(2).removeSkill(r));
            }),
            _(3, "i", 51),
            w(4, "\u274c"),
            g()()();
        }
        if (2 & t) {
          const e = n.$implicit;
          M(1), Ne(" ", e, " ");
        }
      }
      function d5(t, n) {
        if (
          (1 & t &&
            (_(0, "div", 45)(1, "label", 46),
            w(2, "Selected Skills:"),
            g(),
            _(3, "div", 47),
            B(4, c5, 5, 1, "div", 48),
            g()()),
          2 & t)
        ) {
          const e = L();
          M(4), T("ngForOf", e.selectedSkills);
        }
      }
      function u5(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "div", 53),
            w(1),
            _(2, "button", 50),
            F("click", function () {
              const r = Ce(e).$implicit;
              return we(L(2).removeLocation(r));
            }),
            _(3, "i", 51),
            w(4, "\u274c"),
            g()()();
        }
        if (2 & t) {
          const e = n.$implicit;
          M(1), Ne(" ", e, " ");
        }
      }
      function h5(t, n) {
        if (
          (1 & t &&
            (_(0, "div", 45)(1, "label", 46),
            w(2, "Selected Locations:"),
            g(),
            _(3, "div", 47),
            B(4, u5, 5, 1, "div", 52),
            g()()),
          2 & t)
        ) {
          const e = L();
          M(4), T("ngForOf", e.selectedLocations);
        }
      }
      function f5(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "li", 57),
            F("click", function () {
              const r = Ce(e).$implicit;
              return we(L(2).addLocation(r));
            }),
            w(1),
            g();
        }
        if (2 & t) {
          const e = n.$implicit;
          M(1), Ne(" ", e, " ");
        }
      }
      function p5(t, n) {
        if (
          (1 & t &&
            (_(0, "div", 54)(1, "ul", 55), B(2, f5, 2, 1, "li", 56), g()()),
          2 & t)
        ) {
          const e = L();
          M(2), T("ngForOf", e.filteredLocations);
        }
      }
      function m5(t, n) {
        if ((1 & t && (_(0, "div", 58), w(1), g()), 2 & t)) {
          const e = L();
          M(1), Ne(" ", e.errorMessage, " ");
        }
      }
      let g5 = (() => {
        class t {
          constructor(e, i, o, r, s, a, l) {
            (this.http = e),
              (this.jobPostingService = i),
              (this.geoNamesService = o),
              (this.router = r),
              (this.fb = s),
              (this.dialog = a),
              (this.aiDescriptionService = l),
              (this.locationControl = new Xi()),
              (this.showAutocomplete = !1),
              (this.searchTerm = ""),
              (this.selectedSkills = []),
              (this.filteredLocations = []),
              (this.selectedLocations = []),
              (this.tags = []),
              (this.autocompleteItems = []),
              (this.generatedJobDescription = []),
              (this.selectedJobTypes = []),
              (this.jobDescription = ""),
              (this.availableJobTypes = [
                "Full-time",
                "Part-time",
                "Contract",
                "Internship",
              ]),
              (this.jobForm = this.fb.group({
                jobTitle: ["", Ke.required],
                jobType: ["", Ke.required],
                experienceLevel: ["", Ke.required],
                seniorityLevel: ["", Ke.required],
                minExperience: ["", Ke.required],
                maxExperience: ["", Ke.required],
                skillInput: [""],
                locationInput: [""],
                currency: ["", Ke.required],
                minSalary: ["", Ke.required],
                maxSalary: ["", Ke.required],
                department: ["", Ke.required],
                employerJobId: ["", Ke.required],
                vacancies: ["", Ke.required],
                postedDate: new Date(),
                jobDescription: ["", Ke.required],
              })),
              (this.searchForm = this.fb.group({
                skills: [""],
                location: [""],
              }));
          }
          ngOnInit() {}
          createJob() {
            const e = {
              ...this.jobForm.value,
              skills: this.selectedSkills,
              locations: this.selectedLocations,
            };
            this.dialog
              .open(oT, {
                width: "800px",
                data: {
                  portals: [
                    { name: "Indeed", checked: !1 },
                    { name: "Glassdoor", checked: !1 },
                    { name: "LinkedIn", checked: !1 },
                  ],
                },
              })
              .afterClosed()
              .subscribe((o) => {
                o &&
                  o.length > 0 &&
                  this.http.post("http://localhost:5002/api/jobs", e).subscribe(
                    (r) => {
                      console.log("Job posted successfully:", r),
                        this.router.navigate(["/job-details", r.job._id]);
                    },
                    (r) => {
                      console.error("Error posting job:", r),
                        (this.errorMessage =
                          "Error posting job. Please try again later.");
                    }
                  );
              });
          }
          addJobType(e) {
            this.selectedJobTypes.includes(e) || this.selectedJobTypes.push(e);
          }
          removeJobType(e) {
            const i = this.selectedJobTypes.indexOf(e);
            -1 !== i && this.selectedJobTypes.splice(i, 1);
          }
          addSkill() {
            const e = this.jobForm.get("skillInput").value;
            e &&
              (this.selectedSkills.push(e),
              this.jobForm.get("skillInput").reset()),
              console.log("Selected Skills:", this.selectedSkills);
          }
          removeSkill(e) {
            const i = this.selectedSkills.indexOf(e);
            -1 !== i && this.selectedSkills.splice(i, 1);
          }
          searchLocations(e) {
            const i = e.target.value.trim();
            if (((this.searchTerm = i), !i))
              return (
                (this.filteredLocations = []), void (this.showAutocomplete = !1)
              );
            this.geoNamesService.searchLocations(i).subscribe(
              (o) => {
                (this.filteredLocations = o.geonames.map((r) => r.name)),
                  (this.showAutocomplete = !0);
              },
              (o) => {
                console.error("Error fetching locations from GeoNames API", o),
                  (this.filteredLocations = []),
                  (this.showAutocomplete = !1);
              }
            );
          }
          addLocation(e) {
            e &&
              !this.selectedLocations.includes(e) &&
              (this.selectedLocations.push(e),
              this.jobForm.get("locationInput").setValue(""),
              (this.showAutocomplete = !1));
          }
          removeLocation(e) {
            this.selectedLocations = this.selectedLocations.filter(
              (i) => i !== e
            );
          }
          generateJobDescription() {
            this.http
              .post("http://localhost:5002/api/generate-description", {})
              .subscribe(
                (e) => {
                  this.jobForm.patchValue({ jobDescription: e.description });
                },
                (e) => {
                  (this.errorMessage = `Error generating job description: ${e.message}`),
                    console.error("Error generating job description:", e),
                    console.error("Full error details:", e);
                }
              );
          }
          postJob() {
            this.jobForm.valid &&
              this.jobPostingService.postJob(this.jobForm.value).subscribe(
                (e) => {
                  console.log("Job posted successfully:", e),
                    this.fetchJobPortals();
                },
                (e) => {
                  console.error("Error posting job:", e);
                }
              );
          }
          fetchJobPortals() {
            this.http.get("http://localhost:5002/api/job-portals").subscribe(
              (e) => {
                console.log("Available job portals:", e),
                  this.openJobPortalsDialog(e.portals);
              },
              (e) => {
                console.error("Error fetching job portals:", e),
                  (this.errorMessage =
                    "Error fetching job portals. Please try again later.");
              }
            );
          }
          openJobPortalsDialog(e) {
            this.dialog
              .open(oT, { width: "600px", data: { portals: e } })
              .afterClosed()
              .subscribe((o) => {
                console.log("Selected portals:", o),
                  o && this.postJobToPortals(o);
              });
          }
          postJobToPortals(e) {
            e.forEach((i) => {
              this.http.post(i.apiEndpoint, this.jobForm.value).subscribe(
                (o) => {
                  console.log(`Job posted on ${i.name} successfully:`, o);
                },
                (o) => {
                  console.error(`Error posting job on ${i.name}:`, o);
                }
              );
            });
          }
          searchProfiles() {
            this.searchForm.valid &&
              this.jobPostingService
                .searchProfiles(this.searchForm.value)
                .subscribe(
                  (e) => {
                    console.log("Search results:", e);
                  },
                  (e) => {
                    console.error("Error searching profiles:", e);
                  }
                );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(
              y(mi),
              y(ko),
              y(ko),
              y(et),
              y(ag),
              y(ou),
              y(rT)
            );
          });
          static #t = (this.ɵcmp = Ae({
            type: t,
            selectors: [["app-admin"]],
            decls: 84,
            vars: 8,
            consts: [
              [1, "container", "mt-4"],
              [1, "text-center", "mb-4"],
              [1, "row"],
              [1, "col-md-6"],
              [3, "formGroup", "ngSubmit"],
              [1, "mb-3"],
              ["for", "jobTitle", 1, "form-label"],
              [
                "type",
                "text",
                "id",
                "jobTitle",
                "formControlName",
                "jobTitle",
                "placeholder",
                "Enter job title",
                1,
                "form-control",
              ],
              ["for", "jobType", 1, "form-label"],
              ["id", "jobType", "formControlName", "jobType", 1, "form-select"],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["for", "skillInput", 1, "form-label"],
              [1, "input-group"],
              [
                "type",
                "text",
                "id",
                "skillInput",
                "formControlName",
                "skillInput",
                "placeholder",
                "Enter skill",
                1,
                "form-control",
              ],
              ["type", "button", 1, "btn", "btn-primary", 3, "click"],
              ["class", "mt-2", 4, "ngIf"],
              ["for", "locationInput", 1, "form-label"],
              [
                "type",
                "text",
                "id",
                "locationInput",
                "placeholder",
                "Enter location",
                "autocomplete",
                "off",
                1,
                "form-control",
                3,
                "input",
              ],
              ["locationInput", ""],
              ["class", "autocomplete-container", 4, "ngIf"],
              ["for", "department", 1, "form-label"],
              [
                "type",
                "text",
                "id",
                "department",
                "formControlName",
                "department",
                "placeholder",
                "Enter department",
                1,
                "form-control",
              ],
              ["for", "employerJobId", 1, "form-label"],
              [
                "type",
                "text",
                "id",
                "employerJobId",
                "formControlName",
                "employerJobId",
                "placeholder",
                "Enter employer job ID",
                1,
                "form-control",
              ],
              ["for", "seniorityLevel", 1, "form-label"],
              [
                "id",
                "seniorityLevel",
                "formControlName",
                "seniorityLevel",
                1,
                "form-select",
                "mb-2",
              ],
              ["value", "Entry Level"],
              ["value", "Mid-Level"],
              ["value", "Senior Level"],
              [1, "form-label", "mb-2"],
              [
                "type",
                "number",
                "formControlName",
                "minExperience",
                "placeholder",
                "Min years",
                1,
                "form-control",
                "mb-2",
              ],
              [
                "type",
                "number",
                "formControlName",
                "maxExperience",
                "placeholder",
                "Max years",
                1,
                "form-control",
                "mb-2",
              ],
              ["for", "currency", 1, "form-label"],
              [
                "id",
                "currency",
                "formControlName",
                "currency",
                1,
                "form-select",
              ],
              ["value", "INR"],
              ["for", "minSalary", 1, "form-label"],
              [
                "type",
                "number",
                "id",
                "minSalary",
                "formControlName",
                "minSalary",
                "placeholder",
                "Enter min salary",
                1,
                "form-control",
              ],
              ["for", "maxSalary", 1, "form-label"],
              [
                "type",
                "number",
                "id",
                "maxSalary",
                "formControlName",
                "maxSalary",
                "placeholder",
                "Enter max salary",
                1,
                "form-control",
              ],
              ["for", "jobDescription", 1, "form-label"],
              [
                "type",
                "button",
                1,
                "btn",
                "btn-primary",
                2,
                "margin",
                "1rem",
                3,
                "click",
              ],
              [
                "id",
                "jobDescription",
                "formControlName",
                "jobDescription",
                "placeholder",
                "Enter job description",
                "rows",
                "10",
                1,
                "form-control",
              ],
              ["class", "text-danger mt-3", 4, "ngIf"],
              ["type", "submit", 1, "btn", "btn-primary"],
              [3, "value"],
              [1, "mt-2"],
              [1, "form-label"],
              [1, "selected-items"],
              ["class", "selected-item", 4, "ngFor", "ngForOf"],
              [1, "selected-item"],
              [
                "type",
                "button",
                1,
                "btn",
                "btn-link",
                "btn-sm",
                "ms-2",
                3,
                "click",
              ],
              [1, "bi", "bi-x-circle"],
              ["class", "chip", 4, "ngFor", "ngForOf"],
              [1, "chip"],
              [1, "autocomplete-container"],
              [1, "autocomplete-list"],
              [3, "click", 4, "ngFor", "ngForOf"],
              [3, "click"],
              [1, "text-danger", "mt-3"],
            ],
            template: function (i, o) {
              1 & i &&
                (_(0, "div", 0)(1, "h2", 1),
                w(2, "Post Job"),
                g(),
                _(3, "div", 2)(4, "div", 3)(5, "form", 4),
                F("ngSubmit", function () {
                  return o.createJob();
                }),
                _(6, "div", 5)(7, "label", 6),
                w(8, "Job Title *"),
                g(),
                ge(9, "input", 7),
                g(),
                _(10, "div", 5)(11, "label", 8),
                w(12, "Job Type *"),
                g(),
                _(13, "select", 9),
                B(14, l5, 2, 2, "option", 10),
                g()(),
                _(15, "div", 5)(16, "label", 11),
                w(17, "Skills *"),
                g(),
                _(18, "div", 12),
                ge(19, "input", 13),
                _(20, "button", 14),
                F("click", function () {
                  return o.addSkill();
                }),
                w(21, " Add Skill "),
                g()(),
                B(22, d5, 5, 1, "div", 15),
                g(),
                _(23, "div", 5)(24, "label", 16),
                w(25, "Locations *"),
                g(),
                _(26, "div", 12)(27, "input", 17, 18),
                F("input", function (s) {
                  return o.searchLocations(s);
                }),
                g()(),
                B(29, h5, 5, 1, "div", 15),
                B(30, p5, 3, 1, "div", 19),
                g(),
                _(31, "div", 5)(32, "label", 20),
                w(33, "Department *"),
                g(),
                ge(34, "input", 21),
                g(),
                _(35, "div", 5)(36, "label", 22),
                w(37, "Employer Job ID *"),
                g(),
                ge(38, "input", 23),
                g()()(),
                _(39, "div", 3)(40, "form", 4),
                F("ngSubmit", function () {
                  return o.createJob();
                }),
                _(41, "div", 5)(42, "label", 24),
                w(43, "Seniority Level *"),
                g(),
                _(44, "select", 25)(45, "option", 26),
                w(46, "Entry Level"),
                g(),
                _(47, "option", 27),
                w(48, "Mid-Level"),
                g(),
                _(49, "option", 28),
                w(50, "Senior Level"),
                g()()(),
                _(51, "div", 5)(52, "label", 29),
                w(53, "Min Experience *"),
                g(),
                ge(54, "input", 30),
                g(),
                _(55, "div", 5)(56, "label", 29),
                w(57, "Max Experience *"),
                g(),
                ge(58, "input", 31),
                g(),
                _(59, "div", 5)(60, "label", 32),
                w(61, "Currency *"),
                g(),
                _(62, "select", 33)(63, "option", 34),
                w(64, "INR"),
                g()()(),
                _(65, "div", 5)(66, "label", 35),
                w(67, "Min Salary *"),
                g(),
                ge(68, "input", 36),
                g(),
                _(69, "div", 5)(70, "label", 37),
                w(71, "Max Salary *"),
                g(),
                ge(72, "input", 38),
                g()()()(),
                _(73, "form", 4),
                F("ngSubmit", function () {
                  return o.createJob();
                }),
                _(74, "div", 5)(75, "label", 39),
                w(76, "Job Description *"),
                g(),
                _(77, "button", 40),
                F("click", function () {
                  return o.generateJobDescription();
                }),
                w(78, " Generate Description "),
                g(),
                ge(79, "br")(80, "textarea", 41),
                g(),
                B(81, m5, 2, 1, "div", 42),
                _(82, "button", 43),
                w(83, "Post Job"),
                g()()()),
                2 & i &&
                  (M(5),
                  T("formGroup", o.jobForm),
                  M(9),
                  T("ngForOf", o.availableJobTypes),
                  M(8),
                  T("ngIf", o.selectedSkills.length > 0),
                  M(7),
                  T("ngIf", o.selectedLocations.length > 0),
                  M(1),
                  T(
                    "ngIf",
                    o.showAutocomplete && o.filteredLocations.length > 0
                  ),
                  M(10),
                  T("formGroup", o.jobForm),
                  M(33),
                  T("formGroup", o.jobForm),
                  M(8),
                  T("ngIf", o.errorMessage));
            },
            dependencies: [Hi, _n, Ji, ig, rg, vi, jd, $a, Zi, Qi, Oo, rs],
            styles: [
              ".mat-form-field[_ngcontent-%COMP%]{width:100%}.autocomplete-container[_ngcontent-%COMP%]{position:absolute;z-index:1000;width:100%;background-color:#fff;border:1px solid #ccc;margin-top:5px}.autocomplete-list[_ngcontent-%COMP%]{list-style-type:none;padding-left:0;cursor:pointer}.autocomplete-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:8px 12px;border-bottom:1px solid #ddd}.autocomplete-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{border-bottom:none}.selected-items[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;background-color:#f0f0f0;padding:4px 8px;border-radius:8px;margin-right:8px;margin-bottom:8px}.btn-link[_ngcontent-%COMP%]{color:#dc3545;padding:0}",
            ],
          }));
        }
        return t;
      })();
      function v5(t, n) {
        1 & t &&
          (_(0, "div", 12),
          ge(1, "hr"),
          _(2, "h4", 13),
          w(3, "Awards & Recognition"),
          g(),
          _(4, "ul", 14)(5, "li"),
          w(
            6,
            "Top 10 most promising Enterprise Information Security Provider, CIO Review."
          ),
          g(),
          _(7, "li"),
          w(8, "Business Excellence Award, Houston, TX."),
          g(),
          _(9, "li"),
          w(
            10,
            "Certified for Quality In Business, International Trade Council."
          ),
          g(),
          _(11, "li"),
          w(12, "OWASP Certified Partner."),
          g(),
          _(13, "li"),
          w(14, "SendQuick Certified Partner."),
          g(),
          _(15, "li"),
          w(16, "Winner India top 500 CEO\u2019s of India 2020."),
          g(),
          _(17, "li"),
          w(18, "Top 10 Transformational Leaders to look out 2020."),
          g()()());
      }
      function b5(t, n) {
        if ((1 & t && (_(0, "span", 36), w(1), g()), 2 & t)) {
          const e = n.$implicit;
          M(1), Ne(" ", e, " ");
        }
      }
      function C5(t, n) {
        if ((1 & t && (_(0, "span", 37), ge(1, "i", 38), w(2), g()), 2 & t)) {
          const e = n.$implicit;
          M(2), Ne(" ", e, " ");
        }
      }
      function w5(t, n) {
        if ((1 & t && (_(0, "span", 36), w(1), g()), 2 & t)) {
          const e = n.$implicit;
          M(1), Ne(" ", e, " ");
        }
      }
      function D5(t, n) {
        if (
          (1 & t &&
            (_(0, "div", 39)(1, "h2"),
            w(2, "About the Job"),
            g(),
            _(3, "div", 23)(4, "h4")(5, "strong"),
            w(6, "Skills"),
            g()(),
            B(7, w5, 2, 1, "span", 24),
            g(),
            _(8, "h3"),
            w(9, "Greetings from Netsach - A Cyber Security Company."),
            g(),
            _(10, "h4")(11, "strong"),
            w(12, "Job Description"),
            g()(),
            _(13, "p"),
            w(14),
            g(),
            _(15, "h4")(16, "strong"),
            w(17, "Job Title: "),
            g(),
            w(18),
            g(),
            _(19, "h4")(20, "strong"),
            w(21, "Interested candidates kindly share your updated resume at "),
            _(22, "a", 40),
            w(23, "emily@netsach.co.in"),
            g()()(),
            _(24, "p"),
            w(25, "Thank You"),
            g(),
            _(26, "p"),
            w(27, "Emily Jha"),
            g(),
            _(28, "p"),
            w(29, "Interested candidates kindly share your updated resume at "),
            _(30, "a", 40),
            w(31, "emily@netsach.co.in"),
            g()(),
            _(32, "p"),
            w(33, "Netsach - A Cyber Security Company"),
            g(),
            _(34, "a", 41),
            w(35, "NETSACH"),
            g()()),
          2 & t)
        ) {
          const e = L().$implicit;
          M(7),
            T("ngForOf", e.skills),
            M(7),
            qn(e.jobDescription),
            M(4),
            qn(e.jobTitle);
        }
      }
      const x5 = function (t) {
        return { "my-3": t };
      };
      function E5(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "div", 18)(1, "div", 19)(2, "div", 20),
            F("click", function () {
              const r = Ce(e).$implicit;
              return we(L(2).toggleDetailsTab(r._id));
            }),
            _(3, "h3", 21),
            w(4),
            g(),
            _(5, "h5", 22)(6, "strong"),
            w(7, "NETSACH GLOBAL"),
            g()(),
            _(8, "div", 23),
            B(9, b5, 2, 1, "span", 24),
            g(),
            _(10, "p", 25),
            w(11),
            g(),
            _(12, "div", 26),
            B(13, C5, 3, 1, "span", 27),
            _(14, "span", 28),
            ge(15, "i", 29),
            w(16),
            g(),
            _(17, "span", 30),
            ge(18, "i", 31),
            w(19),
            g()(),
            B(20, D5, 36, 3, "div", 32),
            g(),
            _(21, "div", 33)(22, "p", 34),
            w(23),
            Pc(24, "date"),
            g(),
            _(25, "button", 35),
            F("click", function () {
              const r = Ce(e).$implicit;
              return we(L(2).applyForJob(r._id));
            }),
            w(26, " Apply Now "),
            g()()()();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = L(2);
          M(4),
            qn(e.jobTitle),
            M(5),
            T("ngForOf", e.skills),
            M(1),
            T(
              "ngClass",
              (function h0(t, n, e, i) {
                return m0(E(), It(), t, n, e, i);
              })(15, x5, !i.showDetailsTabs[e._id])
            ),
            M(1),
            Xf(
              " ",
              e.jobDescription.substring(0, 100),
              "",
              e.jobDescription.length > 100 ? "..." : "",
              " "
            ),
            M(2),
            T("ngForOf", e.locations),
            M(3),
            Ne(" ", e.jobType, " "),
            M(3),
            Jf(
              " ",
              e.seniorityLevel,
              " ",
              e.minExperience,
              " to ",
              e.maxExperience,
              " years "
            ),
            M(1),
            T("ngIf", i.showDetailsTabs[e._id]),
            M(3),
            Ne(" Posted on ", dp(24, 12, e.postedDate, "longDate"), " ");
        }
      }
      function M5(t, n) {
        if (
          (1 & t &&
            (_(0, "div")(1, "h2", 15),
            w(2, "Job Details"),
            g(),
            _(3, "div", 16),
            B(4, E5, 27, 17, "div", 17),
            g()()),
          2 & t)
        ) {
          const e = L();
          M(4), T("ngForOf", e.jobs);
        }
      }
      function S5(t, n) {
        1 & t && (_(0, "div", 42)(1, "p"), w(2, "No jobs available."), g()());
      }
      function T5(t, n) {
        if ((1 & t && (_(0, "div", 43), w(1), g()), 2 & t)) {
          const e = L();
          M(1), Ne(" ", e.errorMessage, " ");
        }
      }
      function O5(t, n) {
        if ((1 & t && (_(0, "div", 19), w(1), g()), 2 & t)) {
          const e = L();
          M(1), Ne(" ", e.errorMessage, " ");
        }
      }
      const R5 = [
        {
          path: "",
          component: (() => {
            class t {
              constructor() {}
              ngOnInit() {}
              static #e = (this.ɵfac = function (i) {
                return new (i || t)();
              });
              static #t = (this.ɵcmp = Ae({
                type: t,
                selectors: [["app-login"]],
                decls: 8,
                vars: 0,
                consts: [
                  [1, "login-container", "mt-5"],
                  [1, "login-buttons"],
                  ["href", "empLogin", 1, "btn", "btn-employer"],
                  ["href", "login", 1, "btn", "btn-candidate"],
                ],
                template: function (i, o) {
                  1 & i &&
                    (_(0, "div", 0)(1, "h2"),
                    w(2, "Login"),
                    g(),
                    _(3, "div", 1)(4, "a", 2),
                    w(5, "Employer Login"),
                    g(),
                    _(6, "a", 3),
                    w(7, "Candidate Login"),
                    g()()());
                },
                styles: [
                  ".login-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;background:#f9f9f9;padding:30px;border-radius:10px;box-shadow:0 4px 8px #0000001a;max-width:400px;margin:0 auto}.login-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-family:Arial,sans-serif;color:#333;margin-bottom:20px;text-align:center}.login-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:15px;margin-top:20px}.btn[_ngcontent-%COMP%]{font-size:16px;font-family:Arial,sans-serif;border:2px solid transparent;border-radius:5px;text-decoration:none;color:#fff;transition:all .3s ease;cursor:pointer}.btn-employer[_ngcontent-%COMP%]{background-color:#007bff;border-color:#007bff}.btn-candidate[_ngcontent-%COMP%]{background-color:#28a745;border-color:#28a745}.btn[_ngcontent-%COMP%]:hover{background-color:transparent;color:#333;border-color:#333;transform:translateY(-2px)}.btn.btn-employer[_ngcontent-%COMP%]:hover{background-color:#007bff;border-color:#007bff;color:#1400ff}.btn.btn-candidate[_ngcontent-%COMP%]:hover{background-color:#28a745;border-color:#28a745;color:#40ff00}",
                ],
                data: {
                  animation: [
                    Qn("spinAround", [
                      Lt("void", te({ transform: "translateZ(0) rotate(0)" })),
                      Lt(
                        "*",
                        te({ transform: "translateZ(0) rotate(360deg)" })
                      ),
                      _t("void <=> *", ut("2s linear")),
                    ]),
                    Qn("slide", [
                      Lt("void", te({ transform: "translateX(0)" })),
                      Lt("*", te({ transform: "translateX(100%)" })),
                      _t("void <=> *", ut("1s ease-in-out")),
                    ]),
                  ],
                },
              }));
            }
            return t;
          })(),
        },
        { path: "login", redirectTo: "/email-input", pathMatch: "full" },
        { path: "email-input", component: P$ },
        { path: "upload", component: L$ },
        { path: "resume", component: z$ },
        { path: "resume-analysis", component: K$ },
        { path: "admin-dashboard", component: g5 },
        {
          path: "empLogin",
          component: (() => {
            class t {
              constructor(e, i) {
                (this.route = e),
                  (this.router = i),
                  (this.adminUsername = ""),
                  (this.adminPassword = "");
              }
              ngOnInit() {}
              onAdminLogin() {
                "admin" === this.adminUsername &&
                "admin123" === this.adminPassword
                  ? (alert("Login successful!"),
                    this.router.navigate(["/admin-dashboard"]))
                  : alert("Invalid credentials. Please try again.");
              }
              static #e = (this.ɵfac = function (i) {
                return new (i || t)(y(_i), y(et));
              });
              static #t = (this.ɵcmp = Ae({
                type: t,
                selectors: [["app-emp-login"]],
                decls: 18,
                vars: 2,
                consts: [
                  [1, "row", "justify-content-center", "mt-5"],
                  [1, "col-lg-6"],
                  [1, "card", "shadow-sm"],
                  [1, "card-header", "bg-primary", "text-white"],
                  [1, "mb-0"],
                  [1, "card-body"],
                  [3, "ngSubmit"],
                  [1, "form-group"],
                  ["for", "adminUsername"],
                  [
                    "type",
                    "text",
                    "id",
                    "adminUsername",
                    "name",
                    "adminUsername",
                    "required",
                    "",
                    1,
                    "form-control",
                    3,
                    "ngModel",
                    "ngModelChange",
                  ],
                  ["for", "adminPassword"],
                  [
                    "type",
                    "password",
                    "id",
                    "adminPassword",
                    "name",
                    "adminPassword",
                    "required",
                    "",
                    1,
                    "form-control",
                    3,
                    "ngModel",
                    "ngModelChange",
                  ],
                  [
                    "type",
                    "submit",
                    1,
                    "btn",
                    "btn-primary",
                    "btn-block",
                    "mt-3",
                  ],
                ],
                template: function (i, o) {
                  1 & i &&
                    (_(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(
                      4,
                      "h5",
                      4
                    ),
                    w(5, "Admin Login"),
                    g()(),
                    _(6, "div", 5)(7, "form", 6),
                    F("ngSubmit", function () {
                      return o.onAdminLogin();
                    }),
                    _(8, "div", 7)(9, "label", 8),
                    w(10, "Username"),
                    g(),
                    _(11, "input", 9),
                    F("ngModelChange", function (s) {
                      return (o.adminUsername = s);
                    }),
                    g()(),
                    _(12, "div", 7)(13, "label", 10),
                    w(14, "Password"),
                    g(),
                    _(15, "input", 11),
                    F("ngModelChange", function (s) {
                      return (o.adminPassword = s);
                    }),
                    g()(),
                    _(16, "button", 12),
                    w(17, "Login"),
                    g()()()()()()),
                    2 & i &&
                      (M(11),
                      T("ngModel", o.adminUsername),
                      M(4),
                      T("ngModel", o.adminPassword));
                },
                dependencies: [Ji, vi, Zi, Qi, Po, Bd, os],
              }));
            }
            return t;
          })(),
        },
        {
          path: "job-details/:id",
          component: (() => {
            class t {
              constructor(e, i) {
                (this.resumeService = e),
                  (this.http = i),
                  (this.jobs = []),
                  (this.showDetailsTabs = {}),
                  (this.showDetails = !1),
                  (this.userId = "");
              }
              ngOnInit() {
                this.fetchJobs();
              }
              fetchJobs() {
                this.resumeService.getJobs().subscribe(
                  (e) => {
                    (this.jobs = e),
                      console.log("Jobs fetched successfully:", this.jobs);
                  },
                  (e) => {
                    console.error("Error fetching jobs:", e),
                      (this.errorMessage =
                        "Error fetching jobs. Please try again later.");
                  }
                );
              }
              toggleDetailsTab(e) {
                this.showDetailsTabs[e] = !this.showDetailsTabs[e];
              }
              toggleDetails() {
                this.showDetails = !this.showDetails;
              }
              applyForJob(e) {
                const i = this.jobs.find((o) => o._id === e);
                i
                  ? this.http
                      .post("http://localhost:5002/api/send-email", {
                        to: "05navjeetsingh@gmail.com",
                        subject: "Application for " + i.jobTitle,
                        body: `Dear Hiring Team,\n\nI am interested in applying for the position of ${i.jobTitle}. Please find my resume attached.\n\nRegards,\nYour Name`,
                      })
                      .subscribe(
                        (s) => {
                          console.log("Email sent successfully", s);
                        },
                        (s) => {
                          console.error("Error sending email", s),
                            (this.errorMessage =
                              "Failed to send application. Please try again later.");
                        }
                      )
                  : (this.errorMessage = "Job not found. Unable to apply.");
              }
              static #e = (this.ɵfac = function (i) {
                return new (i || t)(y(ko), y(mi));
              });
              static #t = (this.ɵcmp = Ae({
                type: t,
                selectors: [["app-job-details"]],
                decls: 26,
                vars: 5,
                consts: [
                  [1, "container", "mt-4", "job-container1"],
                  [1, "mb-4"],
                  [1, "company-info"],
                  [1, "read-more"],
                  [1, "btn", "btn-link", 3, "click"],
                  [1, "mt-4", "mb-3"],
                  [1, "company-info-item"],
                  ["class", "more-details", 4, "ngIf"],
                  [1, "container", "mt-4", "job-container"],
                  [4, "ngIf"],
                  ["class", "no-jobs", 4, "ngIf"],
                  ["class", "alert alert-danger mt-3", 4, "ngIf"],
                  [1, "more-details"],
                  [1, "mt-4"],
                  [1, "awards-list"],
                  [1, "text-center", "mb-4"],
                  [1, "job-list"],
                  ["class", "job-item", 4, "ngFor", "ngForOf"],
                  [1, "job-item"],
                  [1, "card", "mb-4"],
                  [1, "card-body", 3, "click"],
                  [1, "card-title"],
                  [1, "card-subtitle", "mb-2", "text-muted"],
                  [1, "skills", "mb-3"],
                  ["class", "badge badge-secondary", 4, "ngFor", "ngForOf"],
                  [1, "card-text", "text-muted", 3, "ngClass"],
                  [1, "job-details", "my-3"],
                  ["class", "badge badge-primary", 4, "ngFor", "ngForOf"],
                  [1, "badge", "badge-success"],
                  [1, "fas", "fa-clock"],
                  [1, "badge", "badge-warning"],
                  [1, "fas", "fa-briefcase"],
                  ["class", "job-details", 4, "ngIf"],
                  [1, "card-footer", "d-flex", "justify-content-between"],
                  [
                    1,
                    "card-text",
                    "text-muted",
                    2,
                    "color",
                    "#1d7656 !important",
                  ],
                  [1, "btn", "btn-outline-primary", "apply-button", 3, "click"],
                  [1, "badge", "badge-secondary"],
                  [1, "badge", "badge-primary"],
                  [1, "fas", "fa-map-marker-alt"],
                  [1, "job-details"],
                  ["href", "mailto:emily@netsach.co.in"],
                  ["href", "http://www.netsach.co.in"],
                  [1, "no-jobs"],
                  [1, "alert", "alert-danger", "mt-3"],
                ],
                template: function (i, o) {
                  1 & i &&
                    (_(0, "div", 0)(1, "h2", 1),
                    w(2, "NETSACH GLOBAL"),
                    g(),
                    _(3, "h3"),
                    w(4, "Netsach - A CyberSecurity Company"),
                    g(),
                    _(5, "div", 2)(6, "p"),
                    w(
                      7,
                      " Netsach, which means to soar greater heights, is indeed scaling new heights under the efficient leadership of Founder & CEO, Mr. John Prakash Jha, and Mrs. Emily Jha, Co Founder & COO. We specialize in providing Security Audit services related to Infrastructure and Application/Web/Cloud/IoT Security, leveraging our expertise in CoE Cyber Security. "
                    ),
                    g(),
                    _(8, "div", 3)(9, "button", 4),
                    F("click", function () {
                      return o.toggleDetails();
                    }),
                    w(10),
                    g()(),
                    ge(11, "hr", 5),
                    _(12, "div", 2)(13, "span", 6)(14, "strong"),
                    w(15, "Company Size:"),
                    g(),
                    w(16, " 11-50 Employees "),
                    g(),
                    _(17, "span", 6)(18, "strong"),
                    w(19, "Headquarter:"),
                    g(),
                    w(20, " India "),
                    g()()(),
                    B(21, v5, 19, 0, "div", 7),
                    g(),
                    _(22, "div", 8),
                    B(23, M5, 5, 1, "div", 9),
                    B(24, S5, 3, 0, "div", 10),
                    B(25, T5, 2, 1, "div", 11),
                    g()),
                    2 & i &&
                      (M(10),
                      Ne(" ", o.showDetails ? "Read Less" : "Read More", " "),
                      M(11),
                      T("ngIf", o.showDetails),
                      M(2),
                      T("ngIf", o.jobs && o.jobs.length > 0),
                      M(1),
                      T("ngIf", o.jobs && 0 === o.jobs.length),
                      M(1),
                      T("ngIf", o.errorMessage));
                },
                dependencies: [td, Hi, _n, JD],
                styles: [
                  "body[_ngcontent-%COMP%]{font-family:Arial,sans-serif;background-color:#aeacac}.container[_ngcontent-%COMP%]{max-width:1200px;margin:auto;padding:20px}.job-container[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:8px;margin-bottom:20px}.job-container1[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:8px;box-shadow:0 0 10px #0000001a;margin-bottom:20px}.card[_ngcontent-%COMP%]{border:1px solid #ddd;border-radius:10px;box-shadow:0 2px 4px #0000001a}.card-title[_ngcontent-%COMP%]{font-size:1.75rem;font-weight:700;color:#1a202c}.card-subtitle[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:400;color:#4a5568;margin-bottom:10px}.skills[_ngcontent-%COMP%]{margin-top:10px}.skills[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%]{margin:2px;padding:5px 10px;font-size:.9rem;border-radius:5px;background-color:#f7fafc;color:transparent;border:1px solid #e2e8f0}.skills[_ngcontent-%COMP%]   .badge-secondary[_ngcontent-%COMP%]{color:#2d3748}.job-details[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%]{font-size:.85rem;margin-right:6px;border-radius:5px;padding:8px 12px}.badge-primary[_ngcontent-%COMP%]{background-color:#e9d8fd;color:#6b46c1}.badge-success[_ngcontent-%COMP%]{background-color:#c6f6d5;color:#2f855a}.badge-info[_ngcontent-%COMP%]{background-color:#bee3f8;color:#3182ce}.badge-warning[_ngcontent-%COMP%]{background-color:#fefcbf;color:#d69e2e}.card-text[_ngcontent-%COMP%]{font-size:1rem;color:#4a5568}.apply-button[_ngcontent-%COMP%]{float:right;font-weight:700;border:1px solid #4a5568;background-color:transparent;color:#4a5568;padding:5px 15px;border-radius:20px;transition:background-color .3s,color .3s}.apply-button[_ngcontent-%COMP%]:hover{background-color:#4a5568;color:#fff}.no-jobs[_ngcontent-%COMP%], .alert[_ngcontent-%COMP%]{text-align:center;font-size:1.2rem}.job-card[_ngcontent-%COMP%]{border:1px solid #ddd;border-radius:5px;padding:15px;margin-bottom:15px;cursor:pointer;transition:all .3s ease}.job-card[_ngcontent-%COMP%]:hover{box-shadow:0 4px 8px #0000001a}.job-summary[_ngcontent-%COMP%]{display:flex;flex-direction:column}.job-details[_ngcontent-%COMP%]{margin-top:15px}a[_ngcontent-%COMP%]{text-decoration:none}.company-info[_ngcontent-%COMP%]{justify-content:space-between;align-items:center;margin-bottom:10px}.read-more[_ngcontent-%COMP%]{text-align:right;margin-top:10px}.read-more[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{text-decoration:none;font-weight:700;border:none;background-color:transparent;color:#007bff;cursor:pointer;transition:color .3s ease}.read-more[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#0056b3}.more-details[_ngcontent-%COMP%]{margin-top:20px}.awards-list[_ngcontent-%COMP%]{list-style-type:disc;padding-left:20px}.company-info-item[_ngcontent-%COMP%]{font-size:1rem;color:#4a5568}.company-info-item[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{font-weight:700}.hr-line[_ngcontent-%COMP%]{margin-top:10px;margin-bottom:20px}@media (max-width: 768px){.job-container[_ngcontent-%COMP%]{padding:15px}.company-info[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.company-info-item[_ngcontent-%COMP%]{margin-bottom:5px}.hr-line[_ngcontent-%COMP%]{margin-top:15px}.read-more[_ngcontent-%COMP%]{margin-top:8px}}",
                ],
              }));
            }
            return t;
          })(),
        },
        {
          path: "second-page",
          component: (() => {
            class t {
              constructor(e, i, o) {
                (this.fb = e),
                  (this.http = i),
                  (this.router = o),
                  (this.jobDetailsForm = this.fb.group({
                    currency: ["", Ke.required],
                    minSalary: ["", Ke.required],
                    maxSalary: ["", Ke.required],
                    department: ["", Ke.required],
                    employerJobId: ["", Ke.required],
                    vacancies: ["", Ke.required],
                  }));
              }
              ngOnInit() {
                this.jobDetailsForm.patchValue({ currency: "INR" });
              }
              createJob() {
                this.http
                  .post(
                    "http://localhost:5002/api/job-details",
                    this.jobDetailsForm.value
                  )
                  .subscribe(
                    (e) => {
                      console.log("Job details saved successfully:", e),
                        this.router.navigate(["/job-details"]);
                    },
                    (e) => {
                      console.error("Error saving job details:", e),
                        (this.errorMessage =
                          "Error saving job details. Please try again later.");
                    }
                  );
              }
              static #e = (this.ɵfac = function (i) {
                return new (i || t)(y(ag), y(mi), y(et));
              });
              static #t = (this.ɵcmp = Ae({
                type: t,
                selectors: [["app-second-page"]],
                decls: 33,
                vars: 2,
                consts: [
                  [1, "container", "mt-4"],
                  [1, "text-center", "mb-4"],
                  [3, "formGroup", "ngSubmit"],
                  [1, "mb-3"],
                  ["for", "currency", 1, "form-label"],
                  [
                    "id",
                    "currency",
                    "formControlName",
                    "currency",
                    "required",
                    "",
                    1,
                    "form-select",
                  ],
                  ["value", "INR"],
                  ["for", "minSalary", 1, "form-label"],
                  [
                    "type",
                    "number",
                    "id",
                    "minSalary",
                    "formControlName",
                    "minSalary",
                    "placeholder",
                    "Enter min salary",
                    "required",
                    "",
                    1,
                    "form-control",
                  ],
                  ["for", "maxSalary", 1, "form-label"],
                  [
                    "type",
                    "number",
                    "id",
                    "maxSalary",
                    "formControlName",
                    "maxSalary",
                    "placeholder",
                    "Enter max salary",
                    "required",
                    "",
                    1,
                    "form-control",
                  ],
                  ["for", "department", 1, "form-label"],
                  [
                    "type",
                    "text",
                    "id",
                    "department",
                    "formControlName",
                    "department",
                    "placeholder",
                    "Enter department",
                    "required",
                    "",
                    1,
                    "form-control",
                  ],
                  ["for", "employerJobId", 1, "form-label"],
                  [
                    "type",
                    "text",
                    "id",
                    "employerJobId",
                    "formControlName",
                    "employerJobId",
                    "placeholder",
                    "Enter employer job ID",
                    "required",
                    "",
                    1,
                    "form-control",
                  ],
                  ["for", "vacancies", 1, "form-label"],
                  [
                    "type",
                    "number",
                    "id",
                    "vacancies",
                    "formControlName",
                    "vacancies",
                    "placeholder",
                    "Enter vacancies",
                    "required",
                    "",
                    1,
                    "form-control",
                  ],
                  ["type", "submit", 1, "btn", "btn-primary"],
                  ["class", "text-danger mt-3", 4, "ngIf"],
                  [1, "text-danger", "mt-3"],
                ],
                template: function (i, o) {
                  1 & i &&
                    (_(0, "div", 0)(1, "h2", 1),
                    w(2, "Finalize Job Details"),
                    g(),
                    _(3, "form", 2),
                    F("ngSubmit", function () {
                      return o.createJob();
                    }),
                    _(4, "div", 3)(5, "label", 4),
                    w(6, "Currency *"),
                    g(),
                    _(7, "select", 5)(8, "option", 6),
                    w(9, "INR"),
                    g()()(),
                    _(10, "div", 3)(11, "label", 7),
                    w(12, "Min Salary *"),
                    g(),
                    ge(13, "input", 8),
                    g(),
                    _(14, "div", 3)(15, "label", 9),
                    w(16, "Max Salary *"),
                    g(),
                    ge(17, "input", 10),
                    g(),
                    _(18, "div", 3)(19, "label", 11),
                    w(20, "Department *"),
                    g(),
                    ge(21, "input", 12),
                    g(),
                    _(22, "div", 3)(23, "label", 13),
                    w(24, "Employer Job ID *"),
                    g(),
                    ge(25, "input", 14),
                    g(),
                    _(26, "div", 3)(27, "label", 15),
                    w(28, "Vacancies *"),
                    g(),
                    ge(29, "input", 16),
                    g(),
                    _(30, "button", 17),
                    w(31, "Submit"),
                    g()(),
                    B(32, O5, 2, 1, "div", 18),
                    g()),
                    2 & i &&
                      (M(3),
                      T("formGroup", o.jobDetailsForm),
                      M(29),
                      T("ngIf", o.errorMessage));
                },
                dependencies: [_n, Ji, ig, rg, vi, jd, $a, Zi, Qi, Po, Oo, rs],
              }));
            }
            return t;
          })(),
        },
      ];
      let P5 = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [YE.forRoot(R5), YE] }));
          }
          return t;
        })(),
        k5 = (() => {
          class t {
            constructor() {
              this.title = "resume-frontend";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵcmp = Ae({
              type: t,
              selectors: [["app-root"]],
              decls: 1,
              vars: 0,
              template: function (i, o) {
                1 & i && ge(0, "router-outlet");
              },
              dependencies: [Rm],
            }));
          }
          return t;
        })(),
        Fg = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [vn, Eo, vS, vn] }));
          }
          return t;
        })();
      const Y5 = {
        provide: new S("mat-autocomplete-scroll-strategy"),
        deps: [to],
        useFactory: function W5(t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let Q5 = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({
              providers: [Y5],
              imports: [xg, $S, vn, Eo, gg, $S, vn],
            }));
          }
          return t;
        })(),
        X5 = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({}));
          }
          return t;
        })(),
        J5 = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t }));
            static #n = (this.ɵinj = ce({ imports: [vn, Fg, Fg, X5, vn] }));
          }
          return t;
        })();
      function lT(t) {
        return new x(3e3, !1);
      }
      function no(t) {
        switch (t.length) {
          case 0:
            return new Ja();
          case 1:
            return t[0];
          default:
            return new YS(t);
        }
      }
      function cT(t, n, e = new Map(), i = new Map()) {
        const o = [],
          r = [];
        let s = -1,
          a = null;
        if (
          (n.forEach((l) => {
            const c = l.get("offset"),
              d = c == s,
              u = (d && a) || new Map();
            l.forEach((h, f) => {
              let p = f,
                m = h;
              if ("offset" !== f)
                switch (((p = t.normalizePropertyName(p, o)), m)) {
                  case "!":
                    m = e.get(f);
                    break;
                  case Ci:
                    m = i.get(f);
                    break;
                  default:
                    m = t.normalizeStyleValue(f, p, m, o);
                }
              u.set(p, m);
            }),
              d || r.push(u),
              (a = u),
              (s = c);
          }),
          o.length)
        )
          throw (function w8(t) {
            return new x(3502, !1);
          })();
        return r;
      }
      function Ng(t, n, e, i) {
        switch (n) {
          case "start":
            t.onStart(() => i(e && Lg(e, "start", t)));
            break;
          case "done":
            t.onDone(() => i(e && Lg(e, "done", t)));
            break;
          case "destroy":
            t.onDestroy(() => i(e && Lg(e, "destroy", t)));
        }
      }
      function Lg(t, n, e) {
        const r = Vg(
            t.element,
            t.triggerName,
            t.fromState,
            t.toState,
            n || t.phaseName,
            e.totalTime ?? t.totalTime,
            !!e.disabled
          ),
          s = t._data;
        return null != s && (r._data = s), r;
      }
      function Vg(t, n, e, i, o = "", r = 0, s) {
        return {
          element: t,
          triggerName: n,
          fromState: e,
          toState: i,
          phaseName: o,
          totalTime: r,
          disabled: !!s,
        };
      }
      function rn(t, n, e) {
        let i = t.get(n);
        return i || t.set(n, (i = e)), i;
      }
      function dT(t) {
        const n = t.indexOf(":");
        return [t.substring(1, n), t.slice(n + 1)];
      }
      const k8 = (() =>
        typeof document > "u" ? null : document.documentElement)();
      function Bg(t) {
        const n = t.parentNode || t.host || null;
        return n === k8 ? null : n;
      }
      let Vo = null,
        uT = !1;
      function hT(t, n) {
        for (; n; ) {
          if (n === t) return !0;
          n = Bg(n);
        }
        return !1;
      }
      function fT(t, n, e) {
        if (e) return Array.from(t.querySelectorAll(n));
        const i = t.querySelector(n);
        return i ? [i] : [];
      }
      let pT = (() => {
          class t {
            validateStyleProperty(e) {
              return (function N8(t) {
                Vo ||
                  ((Vo =
                    (function L8() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (uT = !!Vo.style && "WebkitAppearance" in Vo.style));
                let n = !0;
                return (
                  Vo.style &&
                    !(function F8(t) {
                      return "ebkit" == t.substring(1, 6);
                    })(t) &&
                    ((n = t in Vo.style),
                    !n &&
                      uT &&
                      (n =
                        "Webkit" + t.charAt(0).toUpperCase() + t.slice(1) in
                        Vo.style)),
                  n
                );
              })(e);
            }
            matchesElement(e, i) {
              return !1;
            }
            containsElement(e, i) {
              return hT(e, i);
            }
            getParentElement(e) {
              return Bg(e);
            }
            query(e, i, o) {
              return fT(e, i, o);
            }
            computeStyle(e, i, o) {
              return o || "";
            }
            animate(e, i, o, r, s, a = [], l) {
              return new Ja(o, r);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        jg = (() => {
          class t {
            static #e = (this.NOOP = new pT());
          }
          return t;
        })();
      const V8 = 1e3,
        Hg = "ng-enter",
        ru = "ng-leave",
        su = "ng-trigger",
        au = ".ng-trigger",
        gT = "ng-animating",
        Ug = ".ng-animating";
      function wi(t) {
        if ("number" == typeof t) return t;
        const n = t.match(/^(-?[\.\d]+)(m?s)/);
        return !n || n.length < 2 ? 0 : $g(parseFloat(n[1]), n[2]);
      }
      function $g(t, n) {
        return "s" === n ? t * V8 : t;
      }
      function lu(t, n, e) {
        return t.hasOwnProperty("duration")
          ? t
          : (function j8(t, n, e) {
              let o,
                r = 0,
                s = "";
              if ("string" == typeof t) {
                const a = t.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return n.push(lT()), { duration: 0, delay: 0, easing: "" };
                o = $g(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (r = $g(parseFloat(l), a[4]));
                const c = a[5];
                c && (s = c);
              } else o = t;
              if (!e) {
                let a = !1,
                  l = n.length;
                o < 0 &&
                  (n.push(
                    (function e8() {
                      return new x(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  r < 0 &&
                    (n.push(
                      (function t8() {
                        return new x(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && n.splice(l, 0, lT());
              }
              return { duration: o, delay: r, easing: s };
            })(t, n, e);
      }
      function el(t, n = {}) {
        return (
          Object.keys(t).forEach((e) => {
            n[e] = t[e];
          }),
          n
        );
      }
      function _T(t) {
        const n = new Map();
        return (
          Object.keys(t).forEach((e) => {
            n.set(e, t[e]);
          }),
          n
        );
      }
      function io(t, n = new Map(), e) {
        if (e) for (let [i, o] of e) n.set(i, o);
        for (let [i, o] of t) n.set(i, o);
        return n;
      }
      function Xn(t, n, e) {
        n.forEach((i, o) => {
          const r = qg(o);
          e && !e.has(o) && e.set(o, t.style[r]), (t.style[r] = i);
        });
      }
      function Bo(t, n) {
        n.forEach((e, i) => {
          const o = qg(i);
          t.style[o] = "";
        });
      }
      function tl(t) {
        return Array.isArray(t) ? (1 == t.length ? t[0] : qS(t)) : t;
      }
      const zg = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function vT(t) {
        let n = [];
        if ("string" == typeof t) {
          let e;
          for (; (e = zg.exec(t)); ) n.push(e[1]);
          zg.lastIndex = 0;
        }
        return n;
      }
      function nl(t, n, e) {
        const i = t.toString(),
          o = i.replace(zg, (r, s) => {
            let a = n[s];
            return (
              null == a &&
                (e.push(
                  (function i8(t) {
                    return new x(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return o == i ? t : o;
      }
      function cu(t) {
        const n = [];
        let e = t.next();
        for (; !e.done; ) n.push(e.value), (e = t.next());
        return n;
      }
      const $8 = /-+([a-z0-9])/g;
      function qg(t) {
        return t.replace($8, (...n) => n[1].toUpperCase());
      }
      function sn(t, n, e) {
        switch (n.type) {
          case 7:
            return t.visitTrigger(n, e);
          case 0:
            return t.visitState(n, e);
          case 1:
            return t.visitTransition(n, e);
          case 2:
            return t.visitSequence(n, e);
          case 3:
            return t.visitGroup(n, e);
          case 4:
            return t.visitAnimate(n, e);
          case 5:
            return t.visitKeyframes(n, e);
          case 6:
            return t.visitStyle(n, e);
          case 8:
            return t.visitReference(n, e);
          case 9:
            return t.visitAnimateChild(n, e);
          case 10:
            return t.visitAnimateRef(n, e);
          case 11:
            return t.visitQuery(n, e);
          case 12:
            return t.visitStagger(n, e);
          default:
            throw (function o8(t) {
              return new x(3004, !1);
            })();
        }
      }
      function bT(t, n) {
        return window.getComputedStyle(t)[n];
      }
      const du = "*";
      function G8(t, n) {
        const e = [];
        return (
          "string" == typeof t
            ? t.split(/\s*,\s*/).forEach((i) =>
                (function W8(t, n, e) {
                  if (":" == t[0]) {
                    const l = (function Y8(t, n) {
                      switch (t) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            n.push(
                              (function y8(t) {
                                return new x(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(t, e);
                    if ("function" == typeof l) return void n.push(l);
                    t = l;
                  }
                  const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        (function _8(t) {
                          return new x(3015, !1);
                        })()
                      ),
                      n
                    );
                  const o = i[1],
                    r = i[2],
                    s = i[3];
                  n.push(CT(o, s));
                  "<" == r[0] && !(o == du && s == du) && n.push(CT(s, o));
                })(i, e, n)
              )
            : e.push(t),
          e
        );
      }
      const uu = new Set(["true", "1"]),
        hu = new Set(["false", "0"]);
      function CT(t, n) {
        const e = uu.has(t) || hu.has(t),
          i = uu.has(n) || hu.has(n);
        return (o, r) => {
          let s = t == du || t == o,
            a = n == du || n == r;
          return (
            !s && e && "boolean" == typeof o && (s = o ? uu.has(t) : hu.has(t)),
            !a && i && "boolean" == typeof r && (a = r ? uu.has(n) : hu.has(n)),
            s && a
          );
        };
      }
      const K8 = new RegExp("s*:selfs*,?", "g");
      function Gg(t, n, e, i) {
        return new Z8(t).build(n, e, i);
      }
      class Z8 {
        constructor(n) {
          this._driver = n;
        }
        build(n, e, i) {
          const o = new J8(e);
          return this._resetContextStyleTimingState(o), sn(this, tl(n), o);
        }
        _resetContextStyleTimingState(n) {
          (n.currentQuerySelector = ""),
            (n.collectedStyles = new Map()),
            n.collectedStyles.set("", new Map()),
            (n.currentTime = 0);
        }
        visitTrigger(n, e) {
          let i = (e.queryCount = 0),
            o = (e.depCount = 0);
          const r = [],
            s = [];
          return (
            "@" == n.name.charAt(0) &&
              e.errors.push(
                (function s8() {
                  return new x(3006, !1);
                })()
              ),
            n.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((d) => {
                    (l.name = d), r.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (i += l.queryCount), (o += l.depCount), s.push(l);
              } else
                e.errors.push(
                  (function a8() {
                    return new x(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: n.name,
              states: r,
              transitions: s,
              queryCount: i,
              depCount: o,
              options: null,
            }
          );
        }
        visitState(n, e) {
          const i = this.visitStyle(n.styles, e),
            o = (n.options && n.options.params) || null;
          if (i.containsDynamicStyles) {
            const r = new Set(),
              s = o || {};
            i.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  vT(l).forEach((c) => {
                    s.hasOwnProperty(c) || r.add(c);
                  });
                });
            }),
              r.size &&
                (cu(r.values()),
                e.errors.push(
                  (function l8(t, n) {
                    return new x(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: n.name,
            style: i,
            options: o ? { params: o } : null,
          };
        }
        visitTransition(n, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = sn(this, tl(n.animation), e);
          return {
            type: 1,
            matchers: G8(n.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: jo(n.options),
          };
        }
        visitSequence(n, e) {
          return {
            type: 2,
            steps: n.steps.map((i) => sn(this, i, e)),
            options: jo(n.options),
          };
        }
        visitGroup(n, e) {
          const i = e.currentTime;
          let o = 0;
          const r = n.steps.map((s) => {
            e.currentTime = i;
            const a = sn(this, s, e);
            return (o = Math.max(o, e.currentTime)), a;
          });
          return (
            (e.currentTime = o), { type: 3, steps: r, options: jo(n.options) }
          );
        }
        visitAnimate(n, e) {
          const i = (function t6(t, n) {
            if (t.hasOwnProperty("duration")) return t;
            if ("number" == typeof t) return Wg(lu(t, n).duration, 0, "");
            const e = t;
            if (
              e
                .split(/\s+/)
                .some((r) => "{" == r.charAt(0) && "{" == r.charAt(1))
            ) {
              const r = Wg(0, 0, "");
              return (r.dynamic = !0), (r.strValue = e), r;
            }
            const o = lu(e, n);
            return Wg(o.duration, o.delay, o.easing);
          })(n.timings, e.errors);
          e.currentAnimateTimings = i;
          let o,
            r = n.styles ? n.styles : te({});
          if (5 == r.type) o = this.visitKeyframes(r, e);
          else {
            let s = n.styles,
              a = !1;
            if (!s) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (s = te(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(s, e);
            (l.isEmptyStep = a), (o = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: o, options: null }
          );
        }
        visitStyle(n, e) {
          const i = this._makeStyleAst(n, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(n, e) {
          const i = [],
            o = Array.isArray(n.styles) ? n.styles : [n.styles];
          for (let a of o)
            "string" == typeof a
              ? a === Ci
                ? i.push(a)
                : e.errors.push(new x(3002, !1))
              : i.push(_T(a));
          let r = !1,
            s = null;
          return (
            i.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((s = a.get("easing")), a.delete("easing")),
                !r)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    r = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: s,
              offset: n.offset,
              containsDynamicStyles: r,
              options: null,
            }
          );
        }
        _validateStyleAst(n, e) {
          const i = e.currentAnimateTimings;
          let o = e.currentTime,
            r = e.currentTime;
          i && r > 0 && (r -= i.duration + i.delay),
            n.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((a, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    d = c.get(l);
                  let u = !0;
                  d &&
                    (r != o &&
                      r >= d.startTime &&
                      o <= d.endTime &&
                      (e.errors.push(
                        (function d8(t, n, e, i, o) {
                          return new x(3010, !1);
                        })()
                      ),
                      (u = !1)),
                    (r = d.startTime)),
                    u && c.set(l, { startTime: r, endTime: o }),
                    e.options &&
                      (function U8(t, n, e) {
                        const i = n.params || {},
                          o = vT(t);
                        o.length &&
                          o.forEach((r) => {
                            i.hasOwnProperty(r) ||
                              e.push(
                                (function n8(t) {
                                  return new x(3001, !1);
                                })()
                              );
                          });
                      })(a, e.options, e.errors);
                });
            });
        }
        visitKeyframes(n, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function u8() {
                  return new x(3011, !1);
                })()
              ),
              i
            );
          let r = 0;
          const s = [];
          let a = !1,
            l = !1,
            c = 0;
          const d = n.steps.map((D) => {
            const b = this._makeStyleAst(D, e);
            let O =
                null != b.offset
                  ? b.offset
                  : (function e6(t) {
                      if ("string" == typeof t) return null;
                      let n = null;
                      if (Array.isArray(t))
                        t.forEach((e) => {
                          if (e instanceof Map && e.has("offset")) {
                            const i = e;
                            (n = parseFloat(i.get("offset"))),
                              i.delete("offset");
                          }
                        });
                      else if (t instanceof Map && t.has("offset")) {
                        const e = t;
                        (n = parseFloat(e.get("offset"))), e.delete("offset");
                      }
                      return n;
                    })(b.styles),
              k = 0;
            return (
              null != O && (r++, (k = b.offset = O)),
              (l = l || k < 0 || k > 1),
              (a = a || k < c),
              (c = k),
              s.push(k),
              b
            );
          });
          l &&
            e.errors.push(
              (function h8() {
                return new x(3012, !1);
              })()
            ),
            a &&
              e.errors.push(
                (function f8() {
                  return new x(3200, !1);
                })()
              );
          const u = n.steps.length;
          let h = 0;
          r > 0 && r < u
            ? e.errors.push(
                (function p8() {
                  return new x(3202, !1);
                })()
              )
            : 0 == r && (h = 1 / (u - 1));
          const f = u - 1,
            p = e.currentTime,
            m = e.currentAnimateTimings,
            v = m.duration;
          return (
            d.forEach((D, b) => {
              const O = h > 0 ? (b == f ? 1 : h * b) : s[b],
                k = O * v;
              (e.currentTime = p + m.delay + k),
                (m.duration = k),
                this._validateStyleAst(D, e),
                (D.offset = O),
                i.styles.push(D);
            }),
            i
          );
        }
        visitReference(n, e) {
          return {
            type: 8,
            animation: sn(this, tl(n.animation), e),
            options: jo(n.options),
          };
        }
        visitAnimateChild(n, e) {
          return e.depCount++, { type: 9, options: jo(n.options) };
        }
        visitAnimateRef(n, e) {
          return {
            type: 10,
            animation: this.visitReference(n.animation, e),
            options: jo(n.options),
          };
        }
        visitQuery(n, e) {
          const i = e.currentQuerySelector,
            o = n.options || {};
          e.queryCount++, (e.currentQuery = n);
          const [r, s] = (function Q8(t) {
            const n = !!t.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              n && (t = t.replace(K8, "")),
              (t = t
                .replace(/@\*/g, au)
                .replace(/@\w+/g, (e) => au + "-" + e.slice(1))
                .replace(/:animating/g, Ug)),
              [t, n]
            );
          })(n.selector);
          (e.currentQuerySelector = i.length ? i + " " + r : r),
            rn(e.collectedStyles, e.currentQuerySelector, new Map());
          const a = sn(this, tl(n.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: r,
              limit: o.limit || 0,
              optional: !!o.optional,
              includeSelf: s,
              animation: a,
              originalSelector: n.selector,
              options: jo(n.options),
            }
          );
        }
        visitStagger(n, e) {
          e.currentQuery ||
            e.errors.push(
              (function m8() {
                return new x(3013, !1);
              })()
            );
          const i =
            "full" === n.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : lu(n.timings, e.errors, !0);
          return {
            type: 12,
            animation: sn(this, tl(n.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class J8 {
        constructor(n) {
          (this.errors = n),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function jo(t) {
        return (
          t
            ? (t = el(t)).params &&
              (t.params = (function X8(t) {
                return t ? el(t) : null;
              })(t.params))
            : (t = {}),
          t
        );
      }
      function Wg(t, n, e) {
        return { duration: t, delay: n, easing: e };
      }
      function Yg(t, n, e, i, o, r, s = null, a = !1) {
        return {
          type: 1,
          element: t,
          keyframes: n,
          preStyleProps: e,
          postStyleProps: i,
          duration: o,
          delay: r,
          totalTime: o + r,
          easing: s,
          subTimeline: a,
        };
      }
      class fu {
        constructor() {
          this._map = new Map();
        }
        get(n) {
          return this._map.get(n) || [];
        }
        append(n, e) {
          let i = this._map.get(n);
          i || this._map.set(n, (i = [])), i.push(...e);
        }
        has(n) {
          return this._map.has(n);
        }
        clear() {
          this._map.clear();
        }
      }
      const o6 = new RegExp(":enter", "g"),
        s6 = new RegExp(":leave", "g");
      function Kg(t, n, e, i, o, r = new Map(), s = new Map(), a, l, c = []) {
        return new a6().buildKeyframes(t, n, e, i, o, r, s, a, l, c);
      }
      class a6 {
        buildKeyframes(n, e, i, o, r, s, a, l, c, d = []) {
          c = c || new fu();
          const u = new Zg(n, e, c, o, r, d, []);
          u.options = l;
          const h = l.delay ? wi(l.delay) : 0;
          u.currentTimeline.delayNextStep(h),
            u.currentTimeline.setStyles([s], null, u.errors, l),
            sn(this, i, u);
          const f = u.timelines.filter((p) => p.containsAnimation());
          if (f.length && a.size) {
            let p;
            for (let m = f.length - 1; m >= 0; m--) {
              const v = f[m];
              if (v.element === e) {
                p = v;
                break;
              }
            }
            p &&
              !p.allowOnlyTimelineStyles() &&
              p.setStyles([a], null, u.errors, l);
          }
          return f.length
            ? f.map((p) => p.buildKeyframes())
            : [Yg(e, [], [], [], 0, h, "", !1)];
        }
        visitTrigger(n, e) {}
        visitState(n, e) {}
        visitTransition(n, e) {}
        visitAnimateChild(n, e) {
          const i = e.subInstructions.get(e.element);
          if (i) {
            const o = e.createSubContext(n.options),
              r = e.currentTimeline.currentTime,
              s = this._visitSubInstructions(i, o, o.options);
            r != s && e.transformIntoNewTimeline(s);
          }
          e.previousNode = n;
        }
        visitAnimateRef(n, e) {
          const i = e.createSubContext(n.options);
          i.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [n.options, n.animation.options],
              e,
              i
            ),
            this.visitReference(n.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = n);
        }
        _applyAnimationRefDelays(n, e, i) {
          for (const o of n) {
            const r = o?.delay;
            if (r) {
              const s =
                "number" == typeof r ? r : wi(nl(r, o?.params ?? {}, e.errors));
              i.delayNextStep(s);
            }
          }
        }
        _visitSubInstructions(n, e, i) {
          let r = e.currentTimeline.currentTime;
          const s = null != i.duration ? wi(i.duration) : null,
            a = null != i.delay ? wi(i.delay) : null;
          return (
            0 !== s &&
              n.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, s, a);
                r = Math.max(r, c.duration + c.delay);
              }),
            r
          );
        }
        visitReference(n, e) {
          e.updateOptions(n.options, !0),
            sn(this, n.animation, e),
            (e.previousNode = n);
        }
        visitSequence(n, e) {
          const i = e.subContextCount;
          let o = e;
          const r = n.options;
          if (
            r &&
            (r.params || r.delay) &&
            ((o = e.createSubContext(r)),
            o.transformIntoNewTimeline(),
            null != r.delay)
          ) {
            6 == o.previousNode.type &&
              (o.currentTimeline.snapshotCurrentStyles(),
              (o.previousNode = pu));
            const s = wi(r.delay);
            o.delayNextStep(s);
          }
          n.steps.length &&
            (n.steps.forEach((s) => sn(this, s, o)),
            o.currentTimeline.applyStylesToKeyframe(),
            o.subContextCount > i && o.transformIntoNewTimeline()),
            (e.previousNode = n);
        }
        visitGroup(n, e) {
          const i = [];
          let o = e.currentTimeline.currentTime;
          const r = n.options && n.options.delay ? wi(n.options.delay) : 0;
          n.steps.forEach((s) => {
            const a = e.createSubContext(n.options);
            r && a.delayNextStep(r),
              sn(this, s, a),
              (o = Math.max(o, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((s) => e.currentTimeline.mergeTimelineCollectedStyles(s)),
            e.transformIntoNewTimeline(o),
            (e.previousNode = n);
        }
        _visitTiming(n, e) {
          if (n.dynamic) {
            const i = n.strValue;
            return lu(e.params ? nl(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: n.duration, delay: n.delay, easing: n.easing };
        }
        visitAnimate(n, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(n.timings, e)),
            o = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), o.snapshotCurrentStyles());
          const r = n.style;
          5 == r.type
            ? this.visitKeyframes(r, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(r, e),
              o.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = n);
        }
        visitStyle(n, e) {
          const i = e.currentTimeline,
            o = e.currentAnimateTimings;
          !o && i.hasCurrentStyleProperties() && i.forwardFrame();
          const r = (o && o.easing) || n.easing;
          n.isEmptyStep
            ? i.applyEmptyStep(r)
            : i.setStyles(n.styles, r, e.errors, e.options),
            (e.previousNode = n);
        }
        visitKeyframes(n, e) {
          const i = e.currentAnimateTimings,
            o = e.currentTimeline.duration,
            r = i.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = i.easing),
            n.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * r),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(o + r),
            (e.previousNode = n);
        }
        visitQuery(n, e) {
          const i = e.currentTimeline.currentTime,
            o = n.options || {},
            r = o.delay ? wi(o.delay) : 0;
          r &&
            (6 === e.previousNode.type ||
              (0 == i && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = pu));
          let s = i;
          const a = e.invokeQuery(
            n.selector,
            n.originalSelector,
            n.limit,
            n.includeSelf,
            !!o.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, d) => {
            e.currentQueryIndex = d;
            const u = e.createSubContext(n.options, c);
            r && u.delayNextStep(r),
              c === e.element && (l = u.currentTimeline),
              sn(this, n.animation, u),
              u.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, u.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(s),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = n);
        }
        visitStagger(n, e) {
          const i = e.parentContext,
            o = e.currentTimeline,
            r = n.timings,
            s = Math.abs(r.duration),
            a = s * (e.currentQueryTotal - 1);
          let l = s * e.currentQueryIndex;
          switch (r.duration < 0 ? "reverse" : r.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const d = e.currentTimeline;
          l && d.delayNextStep(l);
          const u = d.currentTime;
          sn(this, n.animation, e),
            (e.previousNode = n),
            (i.currentStaggerTime =
              o.currentTime - u + (o.startTime - i.currentTimeline.startTime));
        }
      }
      const pu = {};
      class Zg {
        constructor(n, e, i, o, r, s, a, l) {
          (this._driver = n),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = o),
            (this._leaveClassName = r),
            (this.errors = s),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = pu),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new mu(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(n, e) {
          if (!n) return;
          const i = n;
          let o = this.options;
          null != i.duration && (o.duration = wi(i.duration)),
            null != i.delay && (o.delay = wi(i.delay));
          const r = i.params;
          if (r) {
            let s = o.params;
            s || (s = this.options.params = {}),
              Object.keys(r).forEach((a) => {
                (!e || !s.hasOwnProperty(a)) &&
                  (s[a] = nl(r[a], s, this.errors));
              });
          }
        }
        _copyOptions() {
          const n = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (n.params = {});
              Object.keys(e).forEach((o) => {
                i[o] = e[o];
              });
            }
          }
          return n;
        }
        createSubContext(n = null, e, i) {
          const o = e || this.element,
            r = new Zg(
              this._driver,
              o,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(o, i || 0)
            );
          return (
            (r.previousNode = this.previousNode),
            (r.currentAnimateTimings = this.currentAnimateTimings),
            (r.options = this._copyOptions()),
            r.updateOptions(n),
            (r.currentQueryIndex = this.currentQueryIndex),
            (r.currentQueryTotal = this.currentQueryTotal),
            (r.parentContext = this),
            this.subContextCount++,
            r
          );
        }
        transformIntoNewTimeline(n) {
          return (
            (this.previousNode = pu),
            (this.currentTimeline = this.currentTimeline.fork(this.element, n)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(n, e, i) {
          const o = {
              duration: e ?? n.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + n.delay,
              easing: "",
            },
            r = new l6(
              this._driver,
              n.element,
              n.keyframes,
              n.preStyleProps,
              n.postStyleProps,
              o,
              n.stretchStartingKeyframe
            );
          return this.timelines.push(r), o;
        }
        incrementTime(n) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + n);
        }
        delayNextStep(n) {
          n > 0 && this.currentTimeline.delayNextStep(n);
        }
        invokeQuery(n, e, i, o, r, s) {
          let a = [];
          if ((o && a.push(this.element), n.length > 0)) {
            n = (n = n.replace(o6, "." + this._enterClassName)).replace(
              s6,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, n, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !r &&
              0 == a.length &&
              s.push(
                (function g8(t) {
                  return new x(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class mu {
        constructor(n, e, i, o) {
          (this._driver = n),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = o),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(n) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + n),
              e && this.snapshotCurrentStyles())
            : (this.startTime += n);
        }
        fork(n, e) {
          return (
            this.applyStylesToKeyframe(),
            new mu(
              this._driver,
              n,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(n) {
          this.applyStylesToKeyframe(),
            (this.duration = n),
            this._loadKeyframe();
        }
        _updateStyle(n, e) {
          this._localTimelineStyles.set(n, e),
            this._globalTimelineStyles.set(n, e),
            this._styleSummary.set(n, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(n) {
          n && this._previousKeyframe.set("easing", n);
          for (let [e, i] of this._globalTimelineStyles)
            this._backFill.set(e, i || Ci), this._currentKeyframe.set(e, Ci);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(n, e, i, o) {
          e && this._previousKeyframe.set("easing", e);
          const r = (o && o.params) || {},
            s = (function c6(t, n) {
              const e = new Map();
              let i;
              return (
                t.forEach((o) => {
                  if ("*" === o) {
                    i = i || n.keys();
                    for (let r of i) e.set(r, Ci);
                  } else io(o, e);
                }),
                e
              );
            })(n, this._globalTimelineStyles);
          for (let [a, l] of s) {
            const c = nl(l, r, i);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? Ci),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((n, e) => {
              this._currentKeyframe.set(e, n);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((n, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, n);
            }));
        }
        snapshotCurrentStyles() {
          for (let [n, e] of this._localTimelineStyles)
            this._pendingStyles.set(n, e), this._updateStyle(n, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const n = [];
          for (let e in this._currentKeyframe) n.push(e);
          return n;
        }
        mergeTimelineCollectedStyles(n) {
          n._styleSummary.forEach((e, i) => {
            const o = this._styleSummary.get(i);
            (!o || e.time > o.time) && this._updateStyle(i, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const n = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let o = [];
          this._keyframes.forEach((a, l) => {
            const c = io(a, new Map(), this._backFill);
            c.forEach((d, u) => {
              "!" === d ? n.add(u) : d === Ci && e.add(u);
            }),
              i || c.set("offset", l / this.duration),
              o.push(c);
          });
          const r = n.size ? cu(n.values()) : [],
            s = e.size ? cu(e.values()) : [];
          if (i) {
            const a = o[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (o = [a, l]);
          }
          return Yg(
            this.element,
            o,
            r,
            s,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class l6 extends mu {
        constructor(n, e, i, o, r, s, a = !1) {
          super(n, e, s.delay),
            (this.keyframes = i),
            (this.preStyleProps = o),
            (this.postStyleProps = r),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: s.duration,
              delay: s.delay,
              easing: s.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let n = this.keyframes,
            { delay: e, duration: i, easing: o } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const r = [],
              s = i + e,
              a = e / s,
              l = io(n[0]);
            l.set("offset", 0), r.push(l);
            const c = io(n[0]);
            c.set("offset", xT(a)), r.push(c);
            const d = n.length - 1;
            for (let u = 1; u <= d; u++) {
              let h = io(n[u]);
              const f = h.get("offset");
              h.set("offset", xT((e + f * i) / s)), r.push(h);
            }
            (i = s), (e = 0), (o = ""), (n = r);
          }
          return Yg(
            this.element,
            n,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            o,
            !0
          );
        }
      }
      function xT(t, n = 3) {
        const e = Math.pow(10, n - 1);
        return Math.round(t * e) / e;
      }
      class Qg {}
      const d6 = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class u6 extends Qg {
        normalizePropertyName(n, e) {
          return qg(n);
        }
        normalizeStyleValue(n, e, i, o) {
          let r = "";
          const s = i.toString().trim();
          if (d6.has(e) && 0 !== i && "0" !== i)
            if ("number" == typeof i) r = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                o.push(
                  (function r8(t, n) {
                    return new x(3005, !1);
                  })()
                );
            }
          return s + r;
        }
      }
      function ET(t, n, e, i, o, r, s, a, l, c, d, u, h) {
        return {
          type: 0,
          element: t,
          triggerName: n,
          isRemovalTransition: o,
          fromState: e,
          fromStyles: r,
          toState: i,
          toStyles: s,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: d,
          totalTime: u,
          errors: h,
        };
      }
      const Xg = {};
      class MT {
        constructor(n, e, i) {
          (this._triggerName = n), (this.ast = e), (this._stateStyles = i);
        }
        match(n, e, i, o) {
          return (function h6(t, n, e, i, o) {
            return t.some((r) => r(n, e, i, o));
          })(this.ast.matchers, n, e, i, o);
        }
        buildStyles(n, e, i) {
          let o = this._stateStyles.get("*");
          return (
            void 0 !== n && (o = this._stateStyles.get(n?.toString()) || o),
            o ? o.buildStyles(e, i) : new Map()
          );
        }
        build(n, e, i, o, r, s, a, l, c, d) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || Xg,
            p = this.buildStyles(i, (a && a.params) || Xg, u),
            m = (l && l.params) || Xg,
            v = this.buildStyles(o, m, u),
            D = new Set(),
            b = new Map(),
            O = new Map(),
            k = "void" === o,
            Y = { params: f6(m, h), delay: this.ast.options?.delay },
            xe = d ? [] : Kg(n, e, this.ast.animation, r, s, p, v, Y, c, u);
          let ke = 0;
          if (
            (xe.forEach((an) => {
              ke = Math.max(an.duration + an.delay, ke);
            }),
            u.length)
          )
            return ET(e, this._triggerName, i, o, k, p, v, [], [], b, O, ke, u);
          xe.forEach((an) => {
            const Pn = an.element,
              Eu = rn(b, Pn, new Set());
            an.preStyleProps.forEach((Uo) => Eu.add(Uo));
            const ll = rn(O, Pn, new Set());
            an.postStyleProps.forEach((Uo) => ll.add(Uo)),
              Pn !== e && D.add(Pn);
          });
          const yt = cu(D.values());
          return ET(e, this._triggerName, i, o, k, p, v, xe, yt, b, O, ke);
        }
      }
      function f6(t, n) {
        const e = el(n);
        for (const i in t) t.hasOwnProperty(i) && null != t[i] && (e[i] = t[i]);
        return e;
      }
      class p6 {
        constructor(n, e, i) {
          (this.styles = n), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(n, e) {
          const i = new Map(),
            o = el(this.defaultParams);
          return (
            Object.keys(n).forEach((r) => {
              const s = n[r];
              null !== s && (o[r] = s);
            }),
            this.styles.styles.forEach((r) => {
              "string" != typeof r &&
                r.forEach((s, a) => {
                  s && (s = nl(s, o, e));
                  const l = this.normalizer.normalizePropertyName(a, e);
                  (s = this.normalizer.normalizeStyleValue(a, l, s, e)),
                    i.set(a, s);
                });
            }),
            i
          );
        }
      }
      class g6 {
        constructor(n, e, i) {
          (this.name = n),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((o) => {
              this.states.set(
                o.name,
                new p6(o.style, (o.options && o.options.params) || {}, i)
              );
            }),
            ST(this.states, "true", "1"),
            ST(this.states, "false", "0"),
            e.transitions.forEach((o) => {
              this.transitionFactories.push(new MT(n, o, this.states));
            }),
            (this.fallbackTransition = (function _6(t, n, e) {
              return new MT(
                t,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(s, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                n
              );
            })(n, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(n, e, i, o) {
          return (
            this.transitionFactories.find((s) => s.match(n, e, i, o)) || null
          );
        }
        matchStyles(n, e, i) {
          return this.fallbackTransition.buildStyles(n, e, i);
        }
      }
      function ST(t, n, e) {
        t.has(n)
          ? t.has(e) || t.set(e, t.get(n))
          : t.has(e) && t.set(n, t.get(e));
      }
      const y6 = new fu();
      class v6 {
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(n, e) {
          const i = [],
            r = Gg(this._driver, e, i, []);
          if (i.length)
            throw (function D8(t) {
              return new x(3503, !1);
            })();
          this._animations.set(n, r);
        }
        _buildPlayer(n, e, i) {
          const o = n.element,
            r = cT(this._normalizer, n.keyframes, e, i);
          return this._driver.animate(
            o,
            r,
            n.duration,
            n.delay,
            n.easing,
            [],
            !0
          );
        }
        create(n, e, i = {}) {
          const o = [],
            r = this._animations.get(n);
          let s;
          const a = new Map();
          if (
            (r
              ? ((s = Kg(
                  this._driver,
                  e,
                  r,
                  Hg,
                  ru,
                  new Map(),
                  new Map(),
                  i,
                  y6,
                  o
                )),
                s.forEach((d) => {
                  const u = rn(a, d.element, new Map());
                  d.postStyleProps.forEach((h) => u.set(h, null));
                }))
              : (o.push(
                  (function x8() {
                    return new x(3300, !1);
                  })()
                ),
                (s = [])),
            o.length)
          )
            throw (function E8(t) {
              return new x(3504, !1);
            })();
          a.forEach((d, u) => {
            d.forEach((h, f) => {
              d.set(f, this._driver.computeStyle(u, f, Ci));
            });
          });
          const c = no(
            s.map((d) => {
              const u = a.get(d.element);
              return this._buildPlayer(d, new Map(), u);
            })
          );
          return (
            this._playersById.set(n, c),
            c.onDestroy(() => this.destroy(n)),
            this.players.push(c),
            c
          );
        }
        destroy(n) {
          const e = this._getPlayer(n);
          e.destroy(), this._playersById.delete(n);
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(n) {
          const e = this._playersById.get(n);
          if (!e)
            throw (function M8(t) {
              return new x(3301, !1);
            })();
          return e;
        }
        listen(n, e, i, o) {
          const r = Vg(e, "", "", "");
          return Ng(this._getPlayer(n), i, r, o), () => {};
        }
        command(n, e, i, o) {
          if ("register" == i) return void this.register(n, o[0]);
          if ("create" == i) return void this.create(n, e, o[0] || {});
          const r = this._getPlayer(n);
          switch (i) {
            case "play":
              r.play();
              break;
            case "pause":
              r.pause();
              break;
            case "reset":
              r.reset();
              break;
            case "restart":
              r.restart();
              break;
            case "finish":
              r.finish();
              break;
            case "init":
              r.init();
              break;
            case "setPosition":
              r.setPosition(parseFloat(o[0]));
              break;
            case "destroy":
              this.destroy(n);
          }
        }
      }
      const TT = "ng-animate-queued",
        Jg = "ng-animate-disabled",
        x6 = [],
        IT = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        E6 = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        Rn = "__ng_removed";
      class e_ {
        get params() {
          return this.options.params;
        }
        constructor(n, e = "") {
          this.namespaceId = e;
          const i = n && n.hasOwnProperty("value");
          if (
            ((this.value = (function I6(t) {
              return t ?? null;
            })(i ? n.value : n)),
            i)
          ) {
            const r = el(n);
            delete r.value, (this.options = r);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(n) {
          const e = n.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((o) => {
              null == i[o] && (i[o] = e[o]);
            });
          }
        }
      }
      const il = "void",
        t_ = new e_(il);
      class M6 {
        constructor(n, e, i) {
          (this.id = n),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + n),
            bn(e, this._hostClassName);
        }
        listen(n, e, i, o) {
          if (!this._triggers.has(e))
            throw (function S8(t, n) {
              return new x(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function T8(t) {
              return new x(3303, !1);
            })();
          if (
            !(function A6(t) {
              return "start" == t || "done" == t;
            })(i)
          )
            throw (function I8(t, n) {
              return new x(3400, !1);
            })();
          const r = rn(this._elementListeners, n, []),
            s = { name: e, phase: i, callback: o };
          r.push(s);
          const a = rn(this._engine.statesByElement, n, new Map());
          return (
            a.has(e) || (bn(n, su), bn(n, su + "-" + e), a.set(e, t_)),
            () => {
              this._engine.afterFlush(() => {
                const l = r.indexOf(s);
                l >= 0 && r.splice(l, 1), this._triggers.has(e) || a.delete(e);
              });
            }
          );
        }
        register(n, e) {
          return !this._triggers.has(n) && (this._triggers.set(n, e), !0);
        }
        _getTrigger(n) {
          const e = this._triggers.get(n);
          if (!e)
            throw (function A8(t) {
              return new x(3401, !1);
            })();
          return e;
        }
        trigger(n, e, i, o = !0) {
          const r = this._getTrigger(e),
            s = new n_(this.id, e, n);
          let a = this._engine.statesByElement.get(n);
          a ||
            (bn(n, su),
            bn(n, su + "-" + e),
            this._engine.statesByElement.set(n, (a = new Map())));
          let l = a.get(e);
          const c = new e_(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(e, c),
            l || (l = t_),
            c.value !== il && l.value === c.value)
          ) {
            if (
              !(function P6(t, n) {
                const e = Object.keys(t),
                  i = Object.keys(n);
                if (e.length != i.length) return !1;
                for (let o = 0; o < e.length; o++) {
                  const r = e[o];
                  if (!n.hasOwnProperty(r) || t[r] !== n[r]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const m = [],
                v = r.matchStyles(l.value, l.params, m),
                D = r.matchStyles(c.value, c.params, m);
              m.length
                ? this._engine.reportError(m)
                : this._engine.afterFlush(() => {
                    Bo(n, v), Xn(n, D);
                  });
            }
            return;
          }
          const h = rn(this._engine.playersByElement, n, []);
          h.forEach((m) => {
            m.namespaceId == this.id &&
              m.triggerName == e &&
              m.queued &&
              m.destroy();
          });
          let f = r.matchTransition(l.value, c.value, n, c.params),
            p = !1;
          if (!f) {
            if (!o) return;
            (f = r.fallbackTransition), (p = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: n,
              triggerName: e,
              transition: f,
              fromState: l,
              toState: c,
              player: s,
              isFallbackTransition: p,
            }),
            p ||
              (bn(n, TT),
              s.onStart(() => {
                cs(n, TT);
              })),
            s.onDone(() => {
              let m = this.players.indexOf(s);
              m >= 0 && this.players.splice(m, 1);
              const v = this._engine.playersByElement.get(n);
              if (v) {
                let D = v.indexOf(s);
                D >= 0 && v.splice(D, 1);
              }
            }),
            this.players.push(s),
            h.push(s),
            s
          );
        }
        deregister(n) {
          this._triggers.delete(n),
            this._engine.statesByElement.forEach((e) => e.delete(n)),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((o) => o.name != n)
              );
            });
        }
        clearElementCache(n) {
          this._engine.statesByElement.delete(n),
            this._elementListeners.delete(n);
          const e = this._engine.playersByElement.get(n);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(n));
        }
        _signalRemovalForInnerTriggers(n, e) {
          const i = this._engine.driver.query(n, au, !0);
          i.forEach((o) => {
            if (o[Rn]) return;
            const r = this._engine.fetchNamespacesByElement(o);
            r.size
              ? r.forEach((s) => s.triggerLeaveAnimation(o, e, !1, !0))
              : this.clearElementCache(o);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((o) => this.clearElementCache(o))
            );
        }
        triggerLeaveAnimation(n, e, i, o) {
          const r = this._engine.statesByElement.get(n),
            s = new Map();
          if (r) {
            const a = [];
            if (
              (r.forEach((l, c) => {
                if ((s.set(c, l.value), this._triggers.has(c))) {
                  const d = this.trigger(n, c, il, o);
                  d && a.push(d);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, n, !0, e, s),
                i && no(a).onDone(() => this._engine.processLeaveNode(n)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(n) {
          const e = this._elementListeners.get(n),
            i = this._engine.statesByElement.get(n);
          if (e && i) {
            const o = new Set();
            e.forEach((r) => {
              const s = r.name;
              if (o.has(s)) return;
              o.add(s);
              const l = this._triggers.get(s).fallbackTransition,
                c = i.get(s) || t_,
                d = new e_(il),
                u = new n_(this.id, s, n);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: n,
                  triggerName: s,
                  transition: l,
                  fromState: c,
                  toState: d,
                  player: u,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(n, e) {
          const i = this._engine;
          if (
            (n.childElementCount && this._signalRemovalForInnerTriggers(n, e),
            this.triggerLeaveAnimation(n, e, !0))
          )
            return;
          let o = !1;
          if (i.totalAnimations) {
            const r = i.players.length ? i.playersByQueriedElement.get(n) : [];
            if (r && r.length) o = !0;
            else {
              let s = n;
              for (; (s = s.parentNode); )
                if (i.statesByElement.get(s)) {
                  o = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(n), o))
            i.markElementAsRemoved(this.id, n, !1, e);
          else {
            const r = n[Rn];
            (!r || r === IT) &&
              (i.afterFlush(() => this.clearElementCache(n)),
              i.destroyInnerAnimations(n),
              i._onRemovalComplete(n, e));
          }
        }
        insertNode(n, e) {
          bn(n, this._hostClassName);
        }
        drainQueuedTransitions(n) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const o = i.player;
              if (o.destroyed) return;
              const r = i.element,
                s = this._elementListeners.get(r);
              s &&
                s.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = Vg(
                      r,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = n), Ng(i.player, a.phase, l, a.callback);
                  }
                }),
                o.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      o.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, o) => {
              const r = i.transition.ast.depCount,
                s = o.transition.ast.depCount;
              return 0 == r || 0 == s
                ? r - s
                : this._engine.driver.containsElement(i.element, o.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(n) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, n);
        }
      }
      class S6 {
        _onRemovalComplete(n, e) {
          this.onRemovalComplete(n, e);
        }
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (o, r) => {});
        }
        get queuedPlayers() {
          const n = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && n.push(i);
              });
            }),
            n
          );
        }
        createNamespace(n, e) {
          const i = new M6(n, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[n] = i)
          );
        }
        _balanceNamespaceList(n, e) {
          const i = this._namespaceList,
            o = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let s = !1,
              a = this.driver.getParentElement(e);
            for (; a; ) {
              const l = o.get(a);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, n), (s = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            s || i.unshift(n);
          } else i.push(n);
          return o.set(e, n), n;
        }
        register(n, e) {
          let i = this._namespaceLookup[n];
          return i || (i = this.createNamespace(n, e)), i;
        }
        registerTrigger(n, e, i) {
          let o = this._namespaceLookup[n];
          o && o.register(e, i) && this.totalAnimations++;
        }
        destroy(n, e) {
          n &&
            (this.afterFlush(() => {}),
            this.afterFlushAnimationsDone(() => {
              const i = this._fetchNamespace(n);
              this.namespacesByHostElement.delete(i.hostElement);
              const o = this._namespaceList.indexOf(i);
              o >= 0 && this._namespaceList.splice(o, 1),
                i.destroy(e),
                delete this._namespaceLookup[n];
            }));
        }
        _fetchNamespace(n) {
          return this._namespaceLookup[n];
        }
        fetchNamespacesByElement(n) {
          const e = new Set(),
            i = this.statesByElement.get(n);
          if (i)
            for (let o of i.values())
              if (o.namespaceId) {
                const r = this._fetchNamespace(o.namespaceId);
                r && e.add(r);
              }
          return e;
        }
        trigger(n, e, i, o) {
          if (gu(e)) {
            const r = this._fetchNamespace(n);
            if (r) return r.trigger(e, i, o), !0;
          }
          return !1;
        }
        insertNode(n, e, i, o) {
          if (!gu(e)) return;
          const r = e[Rn];
          if (r && r.setForRemoval) {
            (r.setForRemoval = !1), (r.setForMove = !0);
            const s = this.collectedLeaveElements.indexOf(e);
            s >= 0 && this.collectedLeaveElements.splice(s, 1);
          }
          if (n) {
            const s = this._fetchNamespace(n);
            s && s.insertNode(e, i);
          }
          o && this.collectEnterElement(e);
        }
        collectEnterElement(n) {
          this.collectedEnterElements.push(n);
        }
        markElementAsDisabled(n, e) {
          e
            ? this.disabledNodes.has(n) ||
              (this.disabledNodes.add(n), bn(n, Jg))
            : this.disabledNodes.has(n) &&
              (this.disabledNodes.delete(n), cs(n, Jg));
        }
        removeNode(n, e, i) {
          if (gu(e)) {
            const o = n ? this._fetchNamespace(n) : null;
            o ? o.removeNode(e, i) : this.markElementAsRemoved(n, e, !1, i);
            const r = this.namespacesByHostElement.get(e);
            r && r.id !== n && r.removeNode(e, i);
          } else this._onRemovalComplete(e, i);
        }
        markElementAsRemoved(n, e, i, o, r) {
          this.collectedLeaveElements.push(e),
            (e[Rn] = {
              namespaceId: n,
              setForRemoval: o,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: r,
            });
        }
        listen(n, e, i, o, r) {
          return gu(e) ? this._fetchNamespace(n).listen(e, i, o, r) : () => {};
        }
        _buildInstruction(n, e, i, o, r) {
          return n.transition.build(
            this.driver,
            n.element,
            n.fromState.value,
            n.toState.value,
            i,
            o,
            n.fromState.options,
            n.toState.options,
            e,
            r
          );
        }
        destroyInnerAnimations(n) {
          let e = this.driver.query(n, au, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(n, Ug, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(n) {
          const e = this.playersByElement.get(n);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(n) {
          const e = this.playersByQueriedElement.get(n);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((n) => {
            if (this.players.length) return no(this.players).onDone(() => n());
            n();
          });
        }
        processLeaveNode(n) {
          const e = n[Rn];
          if (e && e.setForRemoval) {
            if (((n[Rn] = IT), e.namespaceId)) {
              this.destroyInnerAnimations(n);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(n);
            }
            this._onRemovalComplete(n, e.setForRemoval);
          }
          n.classList?.contains(Jg) && this.markElementAsDisabled(n, !1),
            this.driver.query(n, ".ng-animate-disabled", !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(n = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, o) =>
                this._balanceNamespaceList(i, o)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              bn(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, n);
            } finally {
              for (let o = 0; o < i.length; o++) i[o]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? no(e).onDone(() => {
                    i.forEach((o) => o());
                  })
                : i.forEach((o) => o());
          }
        }
        reportError(n) {
          throw (function O8(t) {
            return new x(3402, !1);
          })();
        }
        _flushAnimations(n, e) {
          const i = new fu(),
            o = [],
            r = new Map(),
            s = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            d = new Set();
          this.disabledNodes.forEach((N) => {
            d.add(N);
            const U = this.driver.query(N, ".ng-animate-queued", !0);
            for (let $ = 0; $ < U.length; $++) d.add(U[$]);
          });
          const u = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            f = RT(h, this.collectedEnterElements),
            p = new Map();
          let m = 0;
          f.forEach((N, U) => {
            const $ = Hg + m++;
            p.set(U, $), N.forEach((fe) => bn(fe, $));
          });
          const v = [],
            D = new Set(),
            b = new Set();
          for (let N = 0; N < this.collectedLeaveElements.length; N++) {
            const U = this.collectedLeaveElements[N],
              $ = U[Rn];
            $ &&
              $.setForRemoval &&
              (v.push(U),
              D.add(U),
              $.hasAnimation
                ? this.driver
                    .query(U, ".ng-star-inserted", !0)
                    .forEach((fe) => D.add(fe))
                : b.add(U));
          }
          const O = new Map(),
            k = RT(h, Array.from(D));
          k.forEach((N, U) => {
            const $ = ru + m++;
            O.set(U, $), N.forEach((fe) => bn(fe, $));
          }),
            n.push(() => {
              f.forEach((N, U) => {
                const $ = p.get(U);
                N.forEach((fe) => cs(fe, $));
              }),
                k.forEach((N, U) => {
                  const $ = O.get(U);
                  N.forEach((fe) => cs(fe, $));
                }),
                v.forEach((N) => {
                  this.processLeaveNode(N);
                });
            });
          const Y = [],
            xe = [];
          for (let N = this._namespaceList.length - 1; N >= 0; N--)
            this._namespaceList[N].drainQueuedTransitions(e).forEach(($) => {
              const fe = $.player,
                ht = $.element;
              if ((Y.push(fe), this.collectedEnterElements.length)) {
                const xt = ht[Rn];
                if (xt && xt.setForMove) {
                  if (
                    xt.previousTriggersValues &&
                    xt.previousTriggersValues.has($.triggerName)
                  ) {
                    const $o = xt.previousTriggersValues.get($.triggerName),
                      Cn = this.statesByElement.get($.element);
                    if (Cn && Cn.has($.triggerName)) {
                      const Mu = Cn.get($.triggerName);
                      (Mu.value = $o), Cn.set($.triggerName, Mu);
                    }
                  }
                  return void fe.destroy();
                }
              }
              const Jn = !u || !this.driver.containsElement(u, ht),
                ln = O.get(ht),
                oo = p.get(ht),
                ze = this._buildInstruction($, i, oo, ln, Jn);
              if (ze.errors && ze.errors.length) return void xe.push(ze);
              if (Jn)
                return (
                  fe.onStart(() => Bo(ht, ze.fromStyles)),
                  fe.onDestroy(() => Xn(ht, ze.toStyles)),
                  void o.push(fe)
                );
              if ($.isFallbackTransition)
                return (
                  fe.onStart(() => Bo(ht, ze.fromStyles)),
                  fe.onDestroy(() => Xn(ht, ze.toStyles)),
                  void o.push(fe)
                );
              const DI = [];
              ze.timelines.forEach((xt) => {
                (xt.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(xt.element) || DI.push(xt);
              }),
                (ze.timelines = DI),
                i.append(ht, ze.timelines),
                s.push({ instruction: ze, player: fe, element: ht }),
                ze.queriedElements.forEach((xt) => rn(a, xt, []).push(fe)),
                ze.preStyleProps.forEach((xt, $o) => {
                  if (xt.size) {
                    let Cn = l.get($o);
                    Cn || l.set($o, (Cn = new Set())),
                      xt.forEach((Mu, g_) => Cn.add(g_));
                  }
                }),
                ze.postStyleProps.forEach((xt, $o) => {
                  let Cn = c.get($o);
                  Cn || c.set($o, (Cn = new Set())),
                    xt.forEach((Mu, g_) => Cn.add(g_));
                });
            });
          if (xe.length) {
            const N = [];
            xe.forEach((U) => {
              N.push(
                (function R8(t, n) {
                  return new x(3505, !1);
                })()
              );
            }),
              Y.forEach((U) => U.destroy()),
              this.reportError(N);
          }
          const ke = new Map(),
            yt = new Map();
          s.forEach((N) => {
            const U = N.element;
            i.has(U) &&
              (yt.set(U, U),
              this._beforeAnimationBuild(
                N.player.namespaceId,
                N.instruction,
                ke
              ));
          }),
            o.forEach((N) => {
              const U = N.element;
              this._getPreviousPlayers(
                U,
                !1,
                N.namespaceId,
                N.triggerName,
                null
              ).forEach((fe) => {
                rn(ke, U, []).push(fe), fe.destroy();
              });
            });
          const an = v.filter((N) => kT(N, l, c)),
            Pn = new Map();
          OT(Pn, this.driver, b, c, Ci).forEach((N) => {
            kT(N, l, c) && an.push(N);
          });
          const ll = new Map();
          f.forEach((N, U) => {
            OT(ll, this.driver, new Set(N), l, "!");
          }),
            an.forEach((N) => {
              const U = Pn.get(N),
                $ = ll.get(N);
              Pn.set(
                N,
                new Map([...(U?.entries() ?? []), ...($?.entries() ?? [])])
              );
            });
          const Uo = [],
            CI = [],
            wI = {};
          s.forEach((N) => {
            const { element: U, player: $, instruction: fe } = N;
            if (i.has(U)) {
              if (d.has(U))
                return (
                  $.onDestroy(() => Xn(U, fe.toStyles)),
                  ($.disabled = !0),
                  $.overrideTotalTime(fe.totalTime),
                  void o.push($)
                );
              let ht = wI;
              if (yt.size > 1) {
                let ln = U;
                const oo = [];
                for (; (ln = ln.parentNode); ) {
                  const ze = yt.get(ln);
                  if (ze) {
                    ht = ze;
                    break;
                  }
                  oo.push(ln);
                }
                oo.forEach((ze) => yt.set(ze, ht));
              }
              const Jn = this._buildAnimation($.namespaceId, fe, ke, r, ll, Pn);
              if (($.setRealPlayer(Jn), ht === wI)) Uo.push($);
              else {
                const ln = this.playersByElement.get(ht);
                ln && ln.length && ($.parentPlayer = no(ln)), o.push($);
              }
            } else
              Bo(U, fe.fromStyles),
                $.onDestroy(() => Xn(U, fe.toStyles)),
                CI.push($),
                d.has(U) && o.push($);
          }),
            CI.forEach((N) => {
              const U = r.get(N.element);
              if (U && U.length) {
                const $ = no(U);
                N.setRealPlayer($);
              }
            }),
            o.forEach((N) => {
              N.parentPlayer ? N.syncPlayerEvents(N.parentPlayer) : N.destroy();
            });
          for (let N = 0; N < v.length; N++) {
            const U = v[N],
              $ = U[Rn];
            if ((cs(U, ru), $ && $.hasAnimation)) continue;
            let fe = [];
            if (a.size) {
              let Jn = a.get(U);
              Jn && Jn.length && fe.push(...Jn);
              let ln = this.driver.query(U, Ug, !0);
              for (let oo = 0; oo < ln.length; oo++) {
                let ze = a.get(ln[oo]);
                ze && ze.length && fe.push(...ze);
              }
            }
            const ht = fe.filter((Jn) => !Jn.destroyed);
            ht.length ? O6(this, U, ht) : this.processLeaveNode(U);
          }
          return (
            (v.length = 0),
            Uo.forEach((N) => {
              this.players.push(N),
                N.onDone(() => {
                  N.destroy();
                  const U = this.players.indexOf(N);
                  this.players.splice(U, 1);
                }),
                N.play();
            }),
            Uo
          );
        }
        afterFlush(n) {
          this._flushFns.push(n);
        }
        afterFlushAnimationsDone(n) {
          this._whenQuietFns.push(n);
        }
        _getPreviousPlayers(n, e, i, o, r) {
          let s = [];
          if (e) {
            const a = this.playersByQueriedElement.get(n);
            a && (s = a);
          } else {
            const a = this.playersByElement.get(n);
            if (a) {
              const l = !r || r == il;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != o) || s.push(c);
              });
            }
          }
          return (
            (i || o) &&
              (s = s.filter(
                (a) => !((i && i != a.namespaceId) || (o && o != a.triggerName))
              )),
            s
          );
        }
        _beforeAnimationBuild(n, e, i) {
          const r = e.element,
            s = e.isRemovalTransition ? void 0 : n,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              d = c !== r,
              u = rn(i, c, []);
            this._getPreviousPlayers(c, d, s, a, e.toState).forEach((f) => {
              const p = f.getRealPlayer();
              p.beforeDestroy && p.beforeDestroy(), f.destroy(), u.push(f);
            });
          }
          Bo(r, e.fromStyles);
        }
        _buildAnimation(n, e, i, o, r, s) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            d = new Set(),
            u = new Set(),
            h = e.timelines.map((p) => {
              const m = p.element;
              d.add(m);
              const v = m[Rn];
              if (v && v.removedBeforeQueried)
                return new Ja(p.duration, p.delay);
              const D = m !== l,
                b = (function R6(t) {
                  const n = [];
                  return PT(t, n), n;
                })((i.get(m) || x6).map((ke) => ke.getRealPlayer())).filter(
                  (ke) => !!ke.element && ke.element === m
                ),
                O = r.get(m),
                k = s.get(m),
                Y = cT(this._normalizer, p.keyframes, O, k),
                xe = this._buildPlayer(p, Y, b);
              if ((p.subTimeline && o && u.add(m), D)) {
                const ke = new n_(n, a, m);
                ke.setRealPlayer(xe), c.push(ke);
              }
              return xe;
            });
          c.forEach((p) => {
            rn(this.playersByQueriedElement, p.element, []).push(p),
              p.onDone(() =>
                (function T6(t, n, e) {
                  let i = t.get(n);
                  if (i) {
                    if (i.length) {
                      const o = i.indexOf(e);
                      i.splice(o, 1);
                    }
                    0 == i.length && t.delete(n);
                  }
                  return i;
                })(this.playersByQueriedElement, p.element, p)
              );
          }),
            d.forEach((p) => bn(p, gT));
          const f = no(h);
          return (
            f.onDestroy(() => {
              d.forEach((p) => cs(p, gT)), Xn(l, e.toStyles);
            }),
            u.forEach((p) => {
              rn(o, p, []).push(f);
            }),
            f
          );
        }
        _buildPlayer(n, e, i) {
          return e.length > 0
            ? this.driver.animate(
                n.element,
                e,
                n.duration,
                n.delay,
                n.easing,
                i
              )
            : new Ja(n.duration, n.delay);
        }
      }
      class n_ {
        constructor(n, e, i) {
          (this.namespaceId = n),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new Ja()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(n) {
          this._containsRealPlayer ||
            ((this._player = n),
            this._queuedCallbacks.forEach((e, i) => {
              e.forEach((o) => Ng(n, i, void 0, o));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(n.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(n) {
          this.totalTime = n;
        }
        syncPlayerEvents(n) {
          const e = this._player;
          e.triggerCallback && n.onStart(() => e.triggerCallback("start")),
            n.onDone(() => this.finish()),
            n.onDestroy(() => this.destroy());
        }
        _queueEvent(n, e) {
          rn(this._queuedCallbacks, n, []).push(e);
        }
        onDone(n) {
          this.queued && this._queueEvent("done", n), this._player.onDone(n);
        }
        onStart(n) {
          this.queued && this._queueEvent("start", n), this._player.onStart(n);
        }
        onDestroy(n) {
          this.queued && this._queueEvent("destroy", n),
            this._player.onDestroy(n);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(n) {
          this.queued || this._player.setPosition(n);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(n) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(n);
        }
      }
      function gu(t) {
        return t && 1 === t.nodeType;
      }
      function AT(t, n) {
        const e = t.style.display;
        return (t.style.display = n ?? "none"), e;
      }
      function OT(t, n, e, i, o) {
        const r = [];
        e.forEach((l) => r.push(AT(l)));
        const s = [];
        i.forEach((l, c) => {
          const d = new Map();
          l.forEach((u) => {
            const h = n.computeStyle(c, u, o);
            d.set(u, h), (!h || 0 == h.length) && ((c[Rn] = E6), s.push(c));
          }),
            t.set(c, d);
        });
        let a = 0;
        return e.forEach((l) => AT(l, r[a++])), s;
      }
      function RT(t, n) {
        const e = new Map();
        if ((t.forEach((a) => e.set(a, [])), 0 == n.length)) return e;
        const o = new Set(n),
          r = new Map();
        function s(a) {
          if (!a) return 1;
          let l = r.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : o.has(c) ? 1 : s(c)), r.set(a, l), l;
        }
        return (
          n.forEach((a) => {
            const l = s(a);
            1 !== l && e.get(l).push(a);
          }),
          e
        );
      }
      function bn(t, n) {
        t.classList?.add(n);
      }
      function cs(t, n) {
        t.classList?.remove(n);
      }
      function O6(t, n, e) {
        no(e).onDone(() => t.processLeaveNode(n));
      }
      function PT(t, n) {
        for (let e = 0; e < t.length; e++) {
          const i = t[e];
          i instanceof YS ? PT(i.players, n) : n.push(i);
        }
      }
      function kT(t, n, e) {
        const i = e.get(t);
        if (!i) return !1;
        let o = n.get(t);
        return o ? i.forEach((r) => o.add(r)) : n.set(t, i), e.delete(t), !0;
      }
      class _u {
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (o, r) => {}),
            (this._transitionEngine = new S6(n, e, i)),
            (this._timelineEngine = new v6(n, e, i)),
            (this._transitionEngine.onRemovalComplete = (o, r) =>
              this.onRemovalComplete(o, r));
        }
        registerTrigger(n, e, i, o, r) {
          const s = n + "-" + o;
          let a = this._triggerCache[s];
          if (!a) {
            const l = [],
              d = Gg(this._driver, r, l, []);
            if (l.length)
              throw (function C8(t, n) {
                return new x(3404, !1);
              })();
            (a = (function m6(t, n, e) {
              return new g6(t, n, e);
            })(o, d, this._normalizer)),
              (this._triggerCache[s] = a);
          }
          this._transitionEngine.registerTrigger(e, o, a);
        }
        register(n, e) {
          this._transitionEngine.register(n, e);
        }
        destroy(n, e) {
          this._transitionEngine.destroy(n, e);
        }
        onInsert(n, e, i, o) {
          this._transitionEngine.insertNode(n, e, i, o);
        }
        onRemove(n, e, i) {
          this._transitionEngine.removeNode(n, e, i);
        }
        disableAnimations(n, e) {
          this._transitionEngine.markElementAsDisabled(n, e);
        }
        process(n, e, i, o) {
          if ("@" == i.charAt(0)) {
            const [r, s] = dT(i);
            this._timelineEngine.command(r, e, s, o);
          } else this._transitionEngine.trigger(n, e, i, o);
        }
        listen(n, e, i, o, r) {
          if ("@" == i.charAt(0)) {
            const [s, a] = dT(i);
            return this._timelineEngine.listen(s, e, a, r);
          }
          return this._transitionEngine.listen(n, e, i, o, r);
        }
        flush(n = -1) {
          this._transitionEngine.flush(n);
        }
        get players() {
          return [
            ...this._transitionEngine.players,
            ...this._timelineEngine.players,
          ];
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
        afterFlushAnimationsDone(n) {
          this._transitionEngine.afterFlushAnimationsDone(n);
        }
      }
      let F6 = (() => {
        class t {
          static #e = (this.initialStylesByElement = new WeakMap());
          constructor(e, i, o) {
            (this._element = e),
              (this._startStyles = i),
              (this._endStyles = o),
              (this._state = 0);
            let r = t.initialStylesByElement.get(e);
            r || t.initialStylesByElement.set(e, (r = new Map())),
              (this._initialStyles = r);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Xn(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Xn(this._element, this._initialStyles),
                this._endStyles &&
                  (Xn(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (t.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Bo(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Bo(this._element, this._endStyles),
                  (this._endStyles = null)),
                Xn(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return t;
      })();
      function i_(t) {
        let n = null;
        return (
          t.forEach((e, i) => {
            (function N6(t) {
              return "display" === t || "position" === t;
            })(i) && ((n = n || new Map()), n.set(i, e));
          }),
          n
        );
      }
      class FT {
        constructor(n, e, i, o) {
          (this.element = n),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = o),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const n = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            n,
            this.options
          )),
            (this._finalKeyframe = n.length ? n[n.length - 1] : new Map());
          const e = () => this._onFinish();
          this.domPlayer.addEventListener("finish", e),
            this.onDestroy(() => {
              this.domPlayer.removeEventListener("finish", e);
            });
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(n) {
          const e = [];
          return (
            n.forEach((i) => {
              e.push(Object.fromEntries(i));
            }),
            e
          );
        }
        _triggerWebAnimation(n, e, i) {
          return n.animate(this._convertKeyframesToObject(e), i);
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((n) => n()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        setPosition(n) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = n * this.time);
        }
        getPosition() {
          return +(this.domPlayer.currentTime ?? 0) / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const n = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, o) => {
              "offset" !== o &&
                n.set(o, this._finished ? i : bT(this.element, o));
            }),
            (this.currentSnapshot = n);
        }
        triggerCallback(n) {
          const e = "start" === n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class L6 {
        validateStyleProperty(n) {
          return !0;
        }
        validateAnimatableStyleProperty(n) {
          return !0;
        }
        matchesElement(n, e) {
          return !1;
        }
        containsElement(n, e) {
          return hT(n, e);
        }
        getParentElement(n) {
          return Bg(n);
        }
        query(n, e, i) {
          return fT(n, e, i);
        }
        computeStyle(n, e, i) {
          return window.getComputedStyle(n)[e];
        }
        animate(n, e, i, o, r, s = []) {
          const l = {
            duration: i,
            delay: o,
            fill: 0 == o ? "both" : "forwards",
          };
          r && (l.easing = r);
          const c = new Map(),
            d = s.filter((f) => f instanceof FT);
          (function z8(t, n) {
            return 0 === t || 0 === n;
          })(i, o) &&
            d.forEach((f) => {
              f.currentSnapshot.forEach((p, m) => c.set(m, p));
            });
          let u = (function H8(t) {
            return t.length
              ? t[0] instanceof Map
                ? t
                : t.map((n) => _T(n))
              : [];
          })(e).map((f) => io(f));
          u = (function q8(t, n, e) {
            if (e.size && n.length) {
              let i = n[0],
                o = [];
              if (
                (e.forEach((r, s) => {
                  i.has(s) || o.push(s), i.set(s, r);
                }),
                o.length)
              )
                for (let r = 1; r < n.length; r++) {
                  let s = n[r];
                  o.forEach((a) => s.set(a, bT(t, a)));
                }
            }
            return n;
          })(n, u, c);
          const h = (function k6(t, n) {
            let e = null,
              i = null;
            return (
              Array.isArray(n) && n.length
                ? ((e = i_(n[0])), n.length > 1 && (i = i_(n[n.length - 1])))
                : n instanceof Map && (e = i_(n)),
              e || i ? new F6(t, e, i) : null
            );
          })(n, u);
          return new FT(n, u, l, h);
        }
      }
      let V6 = (() => {
        class t extends zS {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: dn.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const o = Array.isArray(e) ? qS(e) : e;
            return (
              NT(this._renderer, null, i, "register", [o]),
              new B6(i, this._renderer)
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(wr), C(re));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class B6 extends $4 {
        constructor(n, e) {
          super(), (this._id = n), (this._renderer = e);
        }
        create(n, e) {
          return new j6(this._id, n, e || {}, this._renderer);
        }
      }
      class j6 {
        constructor(n, e, i, o) {
          (this.id = n),
            (this.element = e),
            (this._renderer = o),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(n, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${n}`, e);
        }
        _command(n, ...e) {
          return NT(this._renderer, this.element, this.id, n, e);
        }
        onDone(n) {
          this._listen("done", n);
        }
        onStart(n) {
          this._listen("start", n);
        }
        onDestroy(n) {
          this._listen("destroy", n);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(n) {
          this._command("setPosition", n);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function NT(t, n, e, i, o) {
        return t.setProperty(n, `@@${e}:${i}`, o);
      }
      const LT = "@.disabled";
      let H6 = (() => {
        class t {
          constructor(e, i, o) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = o),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (i.onRemovalComplete = (r, s) => {
                const a = s?.parentNode(r);
                a && s.removeChild(a, r);
              });
          }
          createRenderer(e, i) {
            const r = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let d = this._rendererCache.get(r);
              return (
                d ||
                  ((d = new VT("", r, this.engine, () =>
                    this._rendererCache.delete(r)
                  )),
                  this._rendererCache.set(r, d)),
                d
              );
            }
            const s = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (d) => {
              Array.isArray(d)
                ? d.forEach(l)
                : this.engine.registerTrigger(s, a, e, d.name, d);
            };
            return i.data.animation.forEach(l), new U6(this, a, r, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            queueMicrotask(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, o) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(o))
              : (0 == this._animationCallbacksBuffer.length &&
                  queueMicrotask(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((r) => {
                        const [s, a] = r;
                        s(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, o]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(wr), C(_u), C(X));
          });
          static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class VT {
        constructor(n, e, i, o) {
          (this.namespaceId = n),
            (this.delegate = e),
            (this.engine = i),
            (this._onDestroy = o);
        }
        get data() {
          return this.delegate.data;
        }
        destroyNode(n) {
          this.delegate.destroyNode?.(n);
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.engine.afterFlushAnimationsDone(() => {
              queueMicrotask(() => {
                this.delegate.destroy();
              });
            }),
            this._onDestroy?.();
        }
        createElement(n, e) {
          return this.delegate.createElement(n, e);
        }
        createComment(n) {
          return this.delegate.createComment(n);
        }
        createText(n) {
          return this.delegate.createText(n);
        }
        appendChild(n, e) {
          this.delegate.appendChild(n, e),
            this.engine.onInsert(this.namespaceId, e, n, !1);
        }
        insertBefore(n, e, i, o = !0) {
          this.delegate.insertBefore(n, e, i),
            this.engine.onInsert(this.namespaceId, e, n, o);
        }
        removeChild(n, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate);
        }
        selectRootElement(n, e) {
          return this.delegate.selectRootElement(n, e);
        }
        parentNode(n) {
          return this.delegate.parentNode(n);
        }
        nextSibling(n) {
          return this.delegate.nextSibling(n);
        }
        setAttribute(n, e, i, o) {
          this.delegate.setAttribute(n, e, i, o);
        }
        removeAttribute(n, e, i) {
          this.delegate.removeAttribute(n, e, i);
        }
        addClass(n, e) {
          this.delegate.addClass(n, e);
        }
        removeClass(n, e) {
          this.delegate.removeClass(n, e);
        }
        setStyle(n, e, i, o) {
          this.delegate.setStyle(n, e, i, o);
        }
        removeStyle(n, e, i) {
          this.delegate.removeStyle(n, e, i);
        }
        setProperty(n, e, i) {
          "@" == e.charAt(0) && e == LT
            ? this.disableAnimations(n, !!i)
            : this.delegate.setProperty(n, e, i);
        }
        setValue(n, e) {
          this.delegate.setValue(n, e);
        }
        listen(n, e, i) {
          return this.delegate.listen(n, e, i);
        }
        disableAnimations(n, e) {
          this.engine.disableAnimations(n, e);
        }
      }
      class U6 extends VT {
        constructor(n, e, i, o, r) {
          super(e, i, o, r), (this.factory = n), (this.namespaceId = e);
        }
        setProperty(n, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == LT
              ? this.disableAnimations(n, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, n, e.slice(1), i)
            : this.delegate.setProperty(n, e, i);
        }
        listen(n, e, i) {
          if ("@" == e.charAt(0)) {
            const o = (function $6(t) {
              switch (t) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return t;
              }
            })(n);
            let r = e.slice(1),
              s = "";
            return (
              "@" != r.charAt(0) &&
                ([r, s] = (function z6(t) {
                  const n = t.indexOf(".");
                  return [t.substring(0, n), t.slice(n + 1)];
                })(r)),
              this.engine.listen(this.namespaceId, o, r, s, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(n, e, i);
        }
      }
      const BT = [
          { provide: zS, useClass: V6 },
          {
            provide: Qg,
            useFactory: function G6() {
              return new u6();
            },
          },
          {
            provide: _u,
            useClass: (() => {
              class t extends _u {
                constructor(e, i, o, r) {
                  super(e.body, i, o);
                }
                ngOnDestroy() {
                  this.flush();
                }
                static #e = (this.ɵfac = function (i) {
                  return new (i || t)(C(re), C(jg), C(Qg), C(ui));
                });
                static #t = (this.ɵprov = I({ token: t, factory: t.ɵfac }));
              }
              return t;
            })(),
          },
          {
            provide: wr,
            useFactory: function W6(t, n, e) {
              return new H6(t, n, e);
            },
            deps: [cm, _u, X],
          },
        ],
        o_ = [
          { provide: jg, useFactory: () => new L6() },
          { provide: Hs, useValue: "BrowserAnimations" },
          ...BT,
        ],
        jT = [
          { provide: jg, useClass: pT },
          { provide: Hs, useValue: "NoopAnimations" },
          ...BT,
        ];
      let Y6 = (() => {
        class t {
          static withConfig(e) {
            return { ngModule: t, providers: e.disableAnimations ? jT : o_ };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({ providers: o_, imports: [Cx] }));
        }
        return t;
      })();
      class K6 {
        constructor(n, e) {
          (this.open = n), (this.close = e || n);
        }
        isManual() {
          return "manual" === this.open || "manual" === this.close;
        }
      }
      const Z6 = {
        hover: ["mouseover", "mouseout"],
        focus: ["focusin", "focusout"],
      };
      const at = (typeof window < "u" && window) || {};
      let Di;
      function $T() {
        const t = at.document.createElement("span");
        (t.innerText = "testing bs version"),
          t.classList.add("d-none"),
          t.classList.add("pl-1"),
          at.document.head.appendChild(t);
        const n = at.getComputedStyle(t).paddingLeft;
        return n && parseFloat(n)
          ? (at.document.head.removeChild(t), "bs4")
          : (at.document.head.removeChild(t), "bs5");
      }
      function ol() {
        return {
          isBs4: (Di || (Di = $T()), "bs4" === Di),
          isBs5: (Di || (Di = $T()), "bs5" === Di),
        };
      }
      typeof console > "u" || console;
      var qT = (function (t) {
          return (
            (t.top = "top"),
            (t.bottom = "bottom"),
            (t.left = "left"),
            (t.right = "right"),
            (t.auto = "auto"),
            (t.end = "right"),
            (t.start = "left"),
            (t["top left"] = "top left"),
            (t["top right"] = "top right"),
            (t["right top"] = "right top"),
            (t["right bottom"] = "right bottom"),
            (t["bottom right"] = "bottom right"),
            (t["bottom left"] = "bottom left"),
            (t["left bottom"] = "left bottom"),
            (t["left top"] = "left top"),
            (t["top start"] = "top left"),
            (t["top end"] = "top right"),
            (t["end top"] = "right top"),
            (t["end bottom"] = "right bottom"),
            (t["bottom end"] = "bottom right"),
            (t["bottom start"] = "bottom left"),
            (t["start bottom"] = "start bottom"),
            (t["start top"] = "left top"),
            t
          );
        })(qT || {}),
        r_ = (function (t) {
          return (
            (t.top = "top"),
            (t.bottom = "bottom"),
            (t.left = "start"),
            (t.right = "end"),
            (t.auto = "auto"),
            (t.end = "end"),
            (t.start = "start"),
            (t["top left"] = "top start"),
            (t["top right"] = "top end"),
            (t["right top"] = "end top"),
            (t["right bottom"] = "end bottom"),
            (t["bottom right"] = "bottom end"),
            (t["bottom left"] = "bottom start"),
            (t["left bottom"] = "start bottom"),
            (t["left top"] = "start top"),
            (t["top start"] = "top start"),
            (t["top end"] = "top end"),
            (t["end top"] = "end top"),
            (t["end bottom"] = "end bottom"),
            (t["bottom end"] = "bottom end"),
            (t["bottom start"] = "bottom start"),
            (t["start bottom"] = "start bottom"),
            (t["start top"] = "start top"),
            t
          );
        })(r_ || {});
      function Ho(t, n) {
        if (1 !== t.nodeType) return [];
        const i = t.ownerDocument.defaultView?.getComputedStyle(t, null);
        return n ? i && i[n] : i;
      }
      function s_(t) {
        if (!t) return document.documentElement;
        let i,
          e = t?.offsetParent;
        for (
          ;
          null === e && t.nextElementSibling && i !== t.nextElementSibling;

        )
          (i = t.nextElementSibling), (e = i.offsetParent);
        const o = e && e.nodeName;
        return o && "BODY" !== o && "HTML" !== o
          ? e &&
            -1 !== ["TH", "TD", "TABLE"].indexOf(e.nodeName) &&
            "static" === Ho(e, "position")
            ? s_(e)
            : e
          : i
          ? i.ownerDocument.documentElement
          : document.documentElement;
      }
      function a_(t) {
        return null !== t.parentNode ? a_(t.parentNode) : t;
      }
      function vu(t, n) {
        if (!(t && t.nodeType && n && n.nodeType))
          return document.documentElement;
        const e =
            t.compareDocumentPosition(n) & Node.DOCUMENT_POSITION_FOLLOWING,
          i = e ? t : n,
          o = e ? n : t,
          r = document.createRange();
        r.setStart(i, 0), r.setEnd(o, 0);
        const s = r.commonAncestorContainer;
        if ((t !== s && n !== s) || i.contains(o))
          return (function oq(t) {
            const { nodeName: n } = t;
            return (
              "BODY" !== n && ("HTML" === n || s_(t.firstElementChild) === t)
            );
          })(s)
            ? s
            : s_(s);
        const a = a_(t);
        return a.host ? vu(a.host, n) : vu(t, a_(n).host);
      }
      function GT(t) {
        if (!t || !t.parentElement) return document.documentElement;
        let n = t.parentElement;
        for (; n?.parentElement && "none" === Ho(n, "transform"); )
          n = n.parentElement;
        return n || document.documentElement;
      }
      function WT(t, n) {
        const e = "x" === n ? "Left" : "Top",
          i = "Left" === e ? "Right" : "Bottom";
        return (
          parseFloat(t[`border${e}Width`]) + parseFloat(t[`border${i}Width`])
        );
      }
      function YT(t, n, e) {
        return Math.max(
          n[`offset${t}`],
          n[`scroll${t}`],
          e[`client${t}`],
          e[`offset${t}`],
          e[`scroll${t}`],
          0
        );
      }
      function KT(t) {
        const n = t.body,
          e = t.documentElement;
        return { height: YT("Height", n, e), width: YT("Width", n, e) };
      }
      function rl(t) {
        return {
          ...t,
          right: (t.left || 0) + t.width,
          bottom: (t.top || 0) + t.height,
        };
      }
      function Be(t) {
        return (
          "number" == typeof t ||
          "[object Number]" === Object.prototype.toString.call(t)
        );
      }
      function ZT(t) {
        const n = t.getBoundingClientRect();
        if (!(n && Be(n.top) && Be(n.left) && Be(n.bottom) && Be(n.right)))
          return n;
        const e = {
            left: n.left,
            top: n.top,
            width: n.right - n.left,
            height: n.bottom - n.top,
          },
          i = "HTML" === t.nodeName ? KT(t.ownerDocument) : void 0,
          o =
            i?.width ||
            t.clientWidth ||
            (Be(n.right) && Be(e.left) && n.right - e.left) ||
            0,
          r =
            i?.height ||
            t.clientHeight ||
            (Be(n.bottom) && Be(e.top) && n.bottom - e.top) ||
            0;
        let s = t.offsetWidth - o,
          a = t.offsetHeight - r;
        if (s || a) {
          const l = Ho(t);
          (s -= WT(l, "x")), (a -= WT(l, "y")), (e.width -= s), (e.height -= a);
        }
        return rl(e);
      }
      function l_(t, n, e = !1) {
        const i = "HTML" === n.nodeName,
          o = ZT(t),
          r = ZT(n),
          s = Ho(n),
          a = parseFloat(s.borderTopWidth),
          l = parseFloat(s.borderLeftWidth);
        e &&
          i &&
          ((r.top = Math.max(r.top ?? 0, 0)),
          (r.left = Math.max(r.left ?? 0, 0)));
        const c = rl({
          top: (o.top ?? 0) - (r.top ?? 0) - a,
          left: (o.left ?? 0) - (r.left ?? 0) - l,
          width: o.width,
          height: o.height,
        });
        if (((c.marginTop = 0), (c.marginLeft = 0), i)) {
          const d = parseFloat(s.marginTop),
            u = parseFloat(s.marginLeft);
          Be(c.top) && (c.top -= a - d),
            Be(c.bottom) && (c.bottom -= a - d),
            Be(c.left) && (c.left -= l - u),
            Be(c.right) && (c.right -= l - u),
            (c.marginTop = d),
            (c.marginLeft = u);
        }
        return c;
      }
      function c_(t) {
        return "HTML" === t.nodeName ? t : t.parentNode || t.host;
      }
      function QT(t) {
        if (!t) return document.body;
        switch (t.nodeName) {
          case "HTML":
          case "BODY":
            return t.ownerDocument.body;
          case "#document":
            return t.body;
        }
        const { overflow: n, overflowX: e, overflowY: i } = Ho(t);
        return /(auto|scroll|overlay)/.test(String(n) + String(i) + String(e))
          ? t
          : QT(c_(t));
      }
      function XT(t, n = "top") {
        const e = "top" === n ? "scrollTop" : "scrollLeft",
          i = t.nodeName;
        return "BODY" === i || "HTML" === i
          ? (t.ownerDocument.scrollingElement ||
              t.ownerDocument.documentElement)[e]
          : t[e];
      }
      function JT(t) {
        const n = t.nodeName;
        return (
          "BODY" !== n &&
          "HTML" !== n &&
          ("fixed" === Ho(t, "position") || JT(c_(t)))
        );
      }
      function d_(t, n, e = 0, i, o = !1) {
        let r = { top: 0, left: 0 };
        const s = o ? GT(t) : vu(t, n);
        if ("viewport" === i)
          r = (function sq(t, n = !1) {
            const e = t.ownerDocument.documentElement,
              i = l_(t, e),
              o = Math.max(e.clientWidth, window.innerWidth || 0),
              r = Math.max(e.clientHeight, window.innerHeight || 0),
              s = n ? 0 : XT(e),
              a = n ? 0 : XT(e, "left");
            return rl({
              top: s - Number(i?.top) + Number(i?.marginTop),
              left: a - Number(i?.left) + Number(i?.marginLeft),
              width: o,
              height: r,
            });
          })(s, o);
        else {
          let a;
          "scrollParent" === i
            ? ((a = QT(c_(n))),
              "BODY" === a.nodeName && (a = t.ownerDocument.documentElement))
            : (a = "window" === i ? t.ownerDocument.documentElement : i);
          const l = l_(a, s, o);
          if (l && "HTML" === a.nodeName && !JT(s)) {
            const { height: c, width: d } = KT(t.ownerDocument);
            Be(r.top) &&
              Be(l.top) &&
              Be(l.marginTop) &&
              (r.top += l.top - l.marginTop),
              Be(r.top) && (r.bottom = Number(c) + Number(l.top)),
              Be(r.left) &&
                Be(l.left) &&
                Be(l.marginLeft) &&
                (r.left += l.left - l.marginLeft),
              Be(r.top) && (r.right = Number(d) + Number(l.left));
          } else l && (r = l);
        }
        return (
          Be(r.left) && (r.left += e),
          Be(r.top) && (r.top += e),
          Be(r.right) && (r.right -= e),
          Be(r.bottom) && (r.bottom -= e),
          r
        );
      }
      function aq({ width: t, height: n }) {
        return t * n;
      }
      function eI(
        t,
        n,
        e,
        i,
        o = ["top", "bottom", "right", "left"],
        r = "viewport",
        s = 0
      ) {
        if (-1 === t.indexOf("auto")) return t;
        const a = d_(e, i, s, r),
          l = {
            top: {
              width: a?.width ?? 0,
              height: (n?.top ?? 0) - (a?.top ?? 0),
            },
            right: {
              width: (a?.right ?? 0) - (n?.right ?? 0),
              height: a?.height ?? 0,
            },
            bottom: {
              width: a?.width ?? 0,
              height: (a?.bottom ?? 0) - (n?.bottom ?? 0),
            },
            left: {
              width: (n.left ?? 0) - (a?.left ?? 0),
              height: a?.height ?? 0,
            },
          },
          c = Object.keys(l)
            .map((f) => ({ position: f, ...l[f], area: aq(l[f]) }))
            .sort((f, p) => p.area - f.area);
        let d = c.filter(
          ({ width: f, height: p }) => f >= e.clientWidth && p >= e.clientHeight
        );
        d = d.filter(({ position: f }) => o.some((p) => p === f));
        const u = d.length > 0 ? d[0].position : c[0].position,
          h = t.split(" ")[1];
        return (
          (e.className = e.className.replace(
            /bs-tooltip-auto/g,
            `bs-tooltip-${ol().isBs5 ? r_[u] : u}`
          )),
          u + (h ? `-${h}` : "")
        );
      }
      const bu = (t, n = 0) => (t ? parseFloat(t) : n);
      function tI(t) {
        const e = t.ownerDocument.defaultView?.getComputedStyle(t),
          i = bu(e?.marginTop) + bu(e?.marginBottom),
          o = bu(e?.marginLeft) + bu(e?.marginRight);
        return {
          width: Number(t.offsetWidth) + o,
          height: Number(t.offsetHeight) + i,
        };
      }
      function nI(t, n, e) {
        return l_(n, e ? GT(t) : vu(t, n), e);
      }
      function u_(t, n, e) {
        const i = e.split(" ")[0],
          o = tI(t),
          r = { width: o.width, height: o.height },
          s = -1 !== ["right", "left"].indexOf(i),
          a = s ? "top" : "left",
          l = s ? "left" : "top",
          c = s ? "height" : "width",
          d = s ? "width" : "height";
        return (
          (r[a] = (n[a] ?? 0) + n[c] / 2 - o[c] / 2),
          (r[l] =
            i === l
              ? (n[l] ?? 0) - o[d]
              : n[
                  (function cq(t) {
                    const n = {
                      left: "right",
                      right: "left",
                      bottom: "top",
                      top: "bottom",
                    };
                    return t.replace(/left|right|bottom|top/g, (e) => n[e]);
                  })(l)
                ] ?? 0),
          r
        );
      }
      function iI(t, n) {
        return !!t.modifiers[n]?.enabled;
      }
      const uq = {
        top: ["top", "top start", "top end"],
        bottom: ["bottom", "bottom start", "bottom end"],
        start: ["start", "start top", "start bottom"],
        end: ["end", "end top", "end bottom"],
      };
      function Cu(t, n) {
        return !!ol().isBs5 && uq[n].includes(t);
      }
      function oI(t, n, e) {
        !t ||
          !n ||
          Object.keys(n).forEach((i) => {
            let o = "";
            -1 !==
              ["width", "height", "top", "right", "bottom", "left"].indexOf(
                i
              ) &&
              (function rq(t) {
                return "" !== t && !isNaN(parseFloat(t)) && isFinite(Number(t));
              })(n[i]) &&
              (o = "px"),
              e
                ? e.setStyle(t, i, `${String(n[i])}${o}`)
                : (t.style[i] = String(n[i]) + o);
          });
      }
      function pq(t) {
        let n = t.offsets.target;
        const e = t.instance.target.querySelector(".arrow");
        if (!e) return t;
        const i = -1 !== ["left", "right"].indexOf(t.placement.split(" ")[0]),
          o = i ? "height" : "width",
          r = i ? "Top" : "Left",
          s = r.toLowerCase(),
          a = i ? "left" : "top",
          l = i ? "bottom" : "right",
          c = tI(e)[o],
          d = t.placement.split(" ")[1];
        (t.offsets.host[l] ?? 0) - c < (n[s] ?? 0) &&
          (n[s] -= (n[s] ?? 0) - ((t.offsets.host[l] ?? 0) - c)),
          Number(t.offsets.host[s]) + Number(c) > (n[l] ?? 0) &&
            (n[s] += Number(t.offsets.host[s]) + Number(c) - Number(n[l])),
          (n = rl(n));
        const u = Ho(t.instance.target),
          h = parseFloat(u[`margin${r}`]) || 0,
          f = parseFloat(u[`border${r}Width`]) || 0;
        let p;
        if (d) {
          const v = parseFloat(u.borderRadius) || 0,
            D = Number(h + f + v);
          p =
            s === d
              ? Number(t.offsets.host[s]) + D
              : Number(t.offsets.host[s]) + Number(t.offsets.host[o] - D);
        } else
          p = Number(t.offsets.host[s]) + Number(t.offsets.host[o] / 2 - c / 2);
        let m = p - (n[s] ?? 0) - h - f;
        return (
          (m = Math.max(Math.min(n[o] - (c + 5), m), 0)),
          (t.offsets.arrow = { [s]: Math.round(m), [a]: "" }),
          (t.instance.arrow = e),
          t
        );
      }
      function mq(t) {
        if (((t.offsets.target = rl(t.offsets.target)), !iI(t.options, "flip")))
          return (
            (t.offsets.target = {
              ...t.offsets.target,
              ...u_(t.instance.target, t.offsets.host, t.placement),
            }),
            t
          );
        const n = d_(t.instance.target, t.instance.host, 0, "viewport", !1);
        let e = t.placement.split(" ")[0],
          i = t.placement.split(" ")[1] || "";
        const a = eI(
            "auto",
            t.offsets.host,
            t.instance.target,
            t.instance.host,
            t.options.allowedPositions
          ),
          l = [e, a];
        return (
          l.forEach((c, d) => {
            if (e !== c || l.length === d + 1) return;
            e = t.placement.split(" ")[0];
            const u =
                ("left" === e &&
                  Math.floor(t.offsets.target.right ?? 0) >
                    Math.floor(t.offsets.host.left ?? 0)) ||
                ("right" === e &&
                  Math.floor(t.offsets.target.left ?? 0) <
                    Math.floor(t.offsets.host.right ?? 0)) ||
                ("top" === e &&
                  Math.floor(t.offsets.target.bottom ?? 0) >
                    Math.floor(t.offsets.host.top ?? 0)) ||
                ("bottom" === e &&
                  Math.floor(t.offsets.target.top ?? 0) <
                    Math.floor(t.offsets.host.bottom ?? 0)),
              h =
                Math.floor(t.offsets.target.left ?? 0) <
                Math.floor(n.left ?? 0),
              f =
                Math.floor(t.offsets.target.right ?? 0) >
                Math.floor(n.right ?? 0),
              p =
                Math.floor(t.offsets.target.top ?? 0) < Math.floor(n.top ?? 0),
              m =
                Math.floor(t.offsets.target.bottom ?? 0) >
                Math.floor(n.bottom ?? 0),
              v =
                ("left" === e && h) ||
                ("right" === e && f) ||
                ("top" === e && p) ||
                ("bottom" === e && m),
              D = -1 !== ["top", "bottom"].indexOf(e),
              b =
                (D && "left" === i && h) ||
                (D && "right" === i && f) ||
                (!D && "left" === i && p) ||
                (!D && "right" === i && m);
            (u || v || b) &&
              ((u || v) && (e = l[d + 1]),
              b &&
                (i = (function dq(t) {
                  return "right" === t ? "left" : "left" === t ? "right" : t;
                })(i)),
              (t.placement = e + (i ? ` ${i}` : "")),
              (t.offsets.target = {
                ...t.offsets.target,
                ...u_(t.instance.target, t.offsets.host, t.placement),
              }));
          }),
          t
        );
      }
      function _q(t) {
        if (!iI(t.options, "preventOverflow")) return t;
        const n = "transform",
          e = t.instance.target.style,
          { top: i, left: o, [n]: r } = e;
        (e.top = ""), (e.left = ""), (e[n] = "");
        const s = d_(
          t.instance.target,
          t.instance.host,
          0,
          t.options.modifiers.preventOverflow?.boundariesElement ||
            "scrollParent",
          !1
        );
        (e.top = i), (e.left = o), (e[n] = r);
        const l = {
          primary(c) {
            let d = t.offsets.target[c];
            return (
              (t.offsets.target[c] ?? 0) < (s[c] ?? 0) &&
                (d = Math.max(t.offsets.target[c] ?? 0, s[c] ?? 0)),
              { [c]: d }
            );
          },
          secondary(c) {
            const d = "right" === c,
              u = d ? "left" : "top";
            let f = t.offsets.target[u];
            return (
              (t.offsets.target[c] ?? 0) > (s[c] ?? 0) &&
                (f = Math.min(
                  t.offsets.target[u] ?? 0,
                  (s[c] ?? 0) - t.offsets.target[d ? "width" : "height"]
                )),
              { [u]: f }
            );
          },
        };
        return (
          ["left", "right", "top", "bottom"].forEach((c) => {
            const d =
              -1 !== ["left", "top", "start"].indexOf(c)
                ? l.primary
                : l.secondary;
            t.offsets.target = { ...t.offsets.target, ...d(c) };
          }),
          t
        );
      }
      function yq(t) {
        const n = t.placement,
          e = n.split(" ")[0],
          i = n.split(" ")[1];
        if (i) {
          const { host: o, target: r } = t.offsets,
            s = -1 !== ["bottom", "top"].indexOf(e),
            a = s ? "left" : "top",
            l = s ? "width" : "height",
            c = {
              start: { [a]: o[a] },
              end: { [a]: (o[a] ?? 0) + o[l] - r[l] },
            };
          t.offsets.target = { ...r, [a]: a === i ? c.start[a] : c.end[a] };
        }
        return t;
      }
      const bq = new (class vq {
        position(n, e) {
          return this.offset(n, e);
        }
        offset(n, e) {
          return nI(e, n);
        }
        positionElements(n, e, i, o, r) {
          const s = [mq, yq, _q, pq],
            l = (function gq(t, n, e, i) {
              if (!t || !n) return;
              const o = nI(t, n);
              !e.match(/^(auto)*\s*(left|right|top|bottom|start|end)*$/) &&
                !e.match(
                  /^(left|right|top|bottom|start|end)*(?: (left|right|top|bottom|start|end))*$/
                ) &&
                (e = "auto");
              const r = !!e.match(/auto/g);
              let s = e.match(/auto\s(left|right|top|bottom|start|end)/)
                ? e.split(" ")[1] || "auto"
                : e;
              const a = s.match(
                /^(left|right|top|bottom|start|end)* ?(?!\1)(left|right|top|bottom|start|end)?/
              );
              return (
                a && (s = a[1] + (a[2] ? ` ${a[2]}` : "")),
                -1 !==
                  [
                    "left right",
                    "right left",
                    "top bottom",
                    "bottom top",
                  ].indexOf(s) && (s = "auto"),
                (s = eI(s, o, t, n, i ? i.allowedPositions : void 0)),
                {
                  options: i || { modifiers: {} },
                  instance: { target: t, host: n, arrow: void 0 },
                  offsets: { target: u_(t, o, s), host: o, arrow: void 0 },
                  positionFixed: !1,
                  placement: s,
                  placementAuto: r,
                }
              );
            })(e, n, qT[i], r);
          if (l) return s.reduce((c, d) => d(c), l);
        }
      })();
      function Cq(t, n, e, i, o, r) {
        const s = bq.positionElements(t, n, e, i, o);
        if (!s) return;
        const a = (function lq(t) {
          return {
            width: t.offsets.target.width,
            height: t.offsets.target.height,
            left: Math.floor(t.offsets.target.left ?? 0),
            top: Math.round(t.offsets.target.top ?? 0),
            bottom: Math.round(t.offsets.target.bottom ?? 0),
            right: Math.floor(t.offsets.target.right ?? 0),
          };
        })(s);
        oI(
          n,
          {
            "will-change": "transform",
            top: "0px",
            left: "0px",
            transform: `translate3d(${a.left}px, ${a.top}px, 0px)`,
          },
          r
        ),
          s.instance.arrow && oI(s.instance.arrow, s.offsets.arrow, r),
          (function fq(t, n) {
            const e = t.instance.target;
            let i = e.className;
            const o = ol().isBs5 ? r_[t.placement] : t.placement;
            t.placementAuto &&
              ((i = i.replace(/bs-popover-auto/g, `bs-popover-${o}`)),
              (i = i.replace(/ms-2|me-2|mb-2|mt-2/g, "")),
              (i = i.replace(/bs-tooltip-auto/g, `bs-tooltip-${o}`)),
              (i = i.replace(/\sauto/g, ` ${o}`)),
              -1 !== i.indexOf("popover") &&
                (i =
                  i +
                  " " +
                  (function hq(t) {
                    return ol().isBs5
                      ? Cu(t, "end")
                        ? "ms-2"
                        : Cu(t, "start")
                        ? "me-2"
                        : Cu(t, "top")
                        ? "mb-2"
                        : Cu(t, "bottom")
                        ? "mt-2"
                        : ""
                      : "";
                  })(o)),
              -1 !== i.indexOf("popover") &&
                -1 === i.indexOf("popover-auto") &&
                (i += " popover-auto"),
              -1 !== i.indexOf("tooltip") &&
                -1 === i.indexOf("tooltip-auto") &&
                (i += " tooltip-auto")),
              (i = i.replace(
                /left|right|top|bottom|end|start/g,
                `${o.split(" ")[0]}`
              )),
              n ? n.setAttribute(e, "class", i) : (e.className = i);
          })(s, r);
      }
      let rI = (() => {
        class t {
          constructor(e, i, o) {
            (this.update$$ = new me()),
              (this.positionElements = new Map()),
              (this.isDisabled = !1),
              nx(o) &&
                e.runOutsideAngular(() => {
                  (this.triggerEvent$ = Si(
                    eo(window, "scroll", { passive: !0 }),
                    eo(window, "resize", { passive: !0 }),
                    H(0, iS),
                    this.update$$
                  )),
                    this.triggerEvent$.subscribe(() => {
                      this.isDisabled ||
                        this.positionElements.forEach((r) => {
                          Cq(
                            wu(r.target),
                            wu(r.element),
                            r.attachment,
                            r.appendToBody,
                            this.options,
                            i.createRenderer(null, null)
                          );
                        });
                    });
                });
          }
          position(e) {
            this.addPositionElement(e);
          }
          get event$() {
            return this.triggerEvent$;
          }
          disable() {
            this.isDisabled = !0;
          }
          enable() {
            this.isDisabled = !1;
          }
          addPositionElement(e) {
            this.positionElements.set(wu(e.element), e);
          }
          calcPosition() {
            this.update$$.next(null);
          }
          deletePositionElement(e) {
            this.positionElements.delete(wu(e));
          }
          setOptions(e) {
            this.options = e;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(X), C(wr), C(ai));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function wu(t) {
        return "string" == typeof t
          ? document.querySelector(t)
          : t instanceof Me
          ? t.nativeElement
          : t ?? null;
      }
      class sl {
        constructor(n, e, i) {
          (this.nodes = n), (this.viewRef = e), (this.componentRef = i);
        }
      }
      class wq {
        constructor(n, e, i, o, r, s, a, l, c) {
          (this._viewContainerRef = n),
            (this._renderer = e),
            (this._elementRef = i),
            (this._injector = o),
            (this._componentFactoryResolver = r),
            (this._ngZone = s),
            (this._applicationRef = a),
            (this._posService = l),
            (this._document = c),
            (this.onBeforeShow = new V()),
            (this.onShown = new V()),
            (this.onBeforeHide = new V()),
            (this.onHidden = new V()),
            (this._providers = []),
            (this._isHiding = !1),
            (this.containerDefaultSelector = "body"),
            (this._listenOpts = {}),
            (this._globalListener = Function.prototype);
        }
        get isShown() {
          return !this._isHiding && !!this._componentRef;
        }
        attach(n) {
          return (
            (this._componentFactory =
              this._componentFactoryResolver.resolveComponentFactory(n)),
            this
          );
        }
        to(n) {
          return (this.container = n || this.container), this;
        }
        position(n) {
          return n
            ? ((this.attachment = n.attachment || this.attachment),
              (this._elementRef = n.target || this._elementRef),
              this)
            : this;
        }
        provide(n) {
          return this._providers.push(n), this;
        }
        show(n = {}) {
          if (
            (this._subscribePositioning(),
            (this._innerComponent = void 0),
            !this._componentRef)
          ) {
            this.onBeforeShow.emit(),
              (this._contentRef = this._getContentRef(
                n.content,
                n.context,
                n.initialState
              ));
            const e = He.create({
              providers: this._providers,
              parent: this._injector,
            });
            if (!this._componentFactory) return;
            if (
              ((this._componentRef = this._componentFactory.create(
                e,
                this._contentRef.nodes
              )),
              this._applicationRef.attachView(this._componentRef.hostView),
              (this.instance = this._componentRef.instance),
              Object.assign(this._componentRef.instance, n),
              this.container instanceof Me &&
                this.container.nativeElement.appendChild(
                  this._componentRef.location.nativeElement
                ),
              "string" == typeof this.container && typeof this._document < "u")
            ) {
              const i =
                this._document.querySelector(this.container) ||
                this._document.querySelector(this.containerDefaultSelector);
              if (!i) return;
              i.appendChild(this._componentRef.location.nativeElement);
            }
            !this.container &&
              this._elementRef &&
              this._elementRef.nativeElement.parentElement &&
              this._elementRef.nativeElement.parentElement.appendChild(
                this._componentRef.location.nativeElement
              ),
              this._contentRef.componentRef &&
                ((this._innerComponent =
                  this._contentRef.componentRef.instance),
                this._contentRef.componentRef.changeDetectorRef.markForCheck(),
                this._contentRef.componentRef.changeDetectorRef.detectChanges()),
              this._componentRef.changeDetectorRef.markForCheck(),
              this._componentRef.changeDetectorRef.detectChanges(),
              this.onShown.emit(
                n.id ? { id: n.id } : this._componentRef.instance
              );
          }
          return this._registerOutsideClick(), this._componentRef;
        }
        hide(n) {
          if (!this._componentRef) return this;
          this._posService.deletePositionElement(this._componentRef.location),
            this.onBeforeHide.emit(this._componentRef.instance);
          const e = this._componentRef.location.nativeElement;
          return (
            e.parentNode?.removeChild(e),
            this._contentRef?.componentRef?.destroy(),
            this._viewContainerRef &&
              this._contentRef?.viewRef &&
              this._viewContainerRef.remove(
                this._viewContainerRef.indexOf(this._contentRef.viewRef)
              ),
            this._contentRef?.viewRef?.destroy(),
            (this._contentRef = void 0),
            (this._componentRef = void 0),
            this._removeGlobalListener(),
            this.onHidden.emit(n ? { id: n } : null),
            this
          );
        }
        toggle() {
          this.isShown ? this.hide() : this.show();
        }
        dispose() {
          this.isShown && this.hide(),
            this._unsubscribePositioning(),
            this._unregisterListenersFn && this._unregisterListenersFn();
        }
        listen(n) {
          (this.triggers = n.triggers || this.triggers),
            (this._listenOpts.outsideClick = n.outsideClick),
            (this._listenOpts.outsideEsc = n.outsideEsc),
            (n.target = n.target || this._elementRef?.nativeElement);
          const e = (this._listenOpts.hide = () =>
              n.hide ? n.hide() : void this.hide()),
            i = (this._listenOpts.show = (r) => {
              n.show ? n.show(r) : this.show(r), r();
            });
          return (
            this._renderer &&
              (this._unregisterListenersFn = (function Q6(t, n) {
                const e = (function HT(t, n = Z6) {
                    const e = (t || "").trim();
                    if (0 === e.length) return [];
                    const i = e
                        .split(/\s+/)
                        .map((r) => r.split(":"))
                        .map((r) => {
                          const s = n[r[0]] || r;
                          return new K6(s[0], s[1]);
                        }),
                      o = i.filter((r) => r.isManual());
                    if (o.length > 1)
                      throw new Error(
                        "Triggers parse error: only one manual trigger is allowed"
                      );
                    if (1 === o.length && i.length > 1)
                      throw new Error(
                        "Triggers parse error: manual trigger can't be mixed with other triggers"
                      );
                    return i;
                  })(n.triggers),
                  i = n.target;
                if (1 === e.length && e[0].isManual())
                  return Function.prototype;
                const o = [],
                  r = [],
                  s = () => {
                    r.forEach((a) => o.push(a())), (r.length = 0);
                  };
                return (
                  e.forEach((a) => {
                    const l = a.open === a.close,
                      c = l ? n.toggle : n.show;
                    if (!l && a.close && n.hide) {
                      const d = a.close,
                        u = n.hide;
                      r.push(() => t.listen(i, d, u));
                    }
                    c && o.push(t.listen(i, a.open, () => c(s)));
                  }),
                  () => {
                    o.forEach((a) => a());
                  }
                );
              })(this._renderer, {
                target: n.target,
                triggers: n.triggers,
                show: i,
                hide: e,
                toggle: (r) => {
                  this.isShown ? e() : i(r);
                },
              })),
            this
          );
        }
        _removeGlobalListener() {
          this._globalListener &&
            (this._globalListener(),
            (this._globalListener = Function.prototype));
        }
        attachInline(n, e) {
          return (
            n && e && (this._inlineViewRef = n.createEmbeddedView(e)), this
          );
        }
        _registerOutsideClick() {
          if (this._componentRef && this._componentRef.location) {
            if (this._listenOpts.outsideClick) {
              const n = this._componentRef.location.nativeElement;
              setTimeout(() => {
                this._renderer &&
                  this._elementRef &&
                  (this._globalListener = (function X6(t, n) {
                    return n.outsideClick
                      ? t.listen("document", "click", (e) => {
                          (n.target && n.target.contains(e.target)) ||
                            (n.targets &&
                              n.targets.some((i) => i.contains(e.target))) ||
                            (n.hide && n.hide());
                        })
                      : Function.prototype;
                  })(this._renderer, {
                    targets: [n, this._elementRef.nativeElement],
                    outsideClick: this._listenOpts.outsideClick,
                    hide: () =>
                      this._listenOpts.hide && this._listenOpts.hide(),
                  }));
              });
            }
            this._listenOpts.outsideEsc &&
              this._renderer &&
              this._elementRef &&
              (this._globalListener = (function J6(t, n) {
                return n.outsideEsc
                  ? t.listen("document", "keyup.esc", (e) => {
                      (n.target && n.target.contains(e.target)) ||
                        (n.targets &&
                          n.targets.some((i) => i.contains(e.target))) ||
                        (n.hide && n.hide());
                    })
                  : Function.prototype;
              })(this._renderer, {
                targets: [
                  this._componentRef.location.nativeElement,
                  this._elementRef.nativeElement,
                ],
                outsideEsc: this._listenOpts.outsideEsc,
                hide: () => this._listenOpts.hide && this._listenOpts.hide(),
              }));
          }
        }
        getInnerComponent() {
          return this._innerComponent;
        }
        _subscribePositioning() {
          this._zoneSubscription ||
            !this.attachment ||
            (this.onShown.subscribe(() => {
              this._posService.position({
                element: this._componentRef?.location,
                target: this._elementRef,
                attachment: this.attachment,
                appendToBody: "body" === this.container,
              });
            }),
            (this._zoneSubscription = this._ngZone.onStable.subscribe(() => {
              this._componentRef && this._posService.calcPosition();
            })));
        }
        _unsubscribePositioning() {
          this._zoneSubscription &&
            (this._zoneSubscription.unsubscribe(),
            (this._zoneSubscription = void 0));
        }
        _getContentRef(n, e, i) {
          if (!n) return new sl([]);
          if (n instanceof en) {
            if (this._viewContainerRef) {
              const s = this._viewContainerRef.createEmbeddedView(n, e);
              return s.markForCheck(), new sl([s.rootNodes], s);
            }
            const r = n.createEmbeddedView({});
            return this._applicationRef.attachView(r), new sl([r.rootNodes], r);
          }
          if ("function" == typeof n) {
            const r = this._componentFactoryResolver.resolveComponentFactory(n),
              s = He.create({
                providers: this._providers,
                parent: this._injector,
              }),
              a = r.create(s);
            return (
              Object.assign(a.instance, i),
              this._applicationRef.attachView(a.hostView),
              new sl([[a.location.nativeElement]], a.hostView, a)
            );
          }
          const o = this._renderer ? [this._renderer.createText(`${n}`)] : [];
          return new sl([o]);
        }
      }
      let Dq = (() => {
        class t {
          constructor(e, i, o, r, s, a) {
            (this._componentFactoryResolver = e),
              (this._ngZone = i),
              (this._injector = o),
              (this._posService = r),
              (this._applicationRef = s),
              (this._document = a);
          }
          createLoader(e, i, o) {
            return new wq(
              i,
              o,
              e,
              this._injector,
              this._componentFactoryResolver,
              this._ngZone,
              this._applicationRef,
              this._posService,
              this._document
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(C(mo), C(X), C(He), C(rI), C(ui), C(re));
          });
          static #t = (this.ɵprov = I({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const aI = "220ms cubic-bezier(0, 0, 0.2, 1)";
      Qn("typeaheadAnimation", [
        Lt("animated-down", te({ height: "*", overflow: "hidden" })),
        _t("* => animated-down", [
          te({ height: 0, overflow: "hidden" }),
          ut(aI),
        ]),
        Lt("animated-up", te({ height: "*", overflow: "hidden" })),
        _t("* => animated-up", [
          te({ height: "*", overflow: "hidden" }),
          ut(aI),
        ]),
        _t("* => unanimated", ut("0s")),
      ]);
      let Aq = (() => {
        class t {
          static forRoot() {
            return { ngModule: t, providers: [Dq, rI] };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = he({ type: t }));
          static #n = (this.ɵinj = ce({ imports: [Eo] }));
        }
        return t;
      })();
      function Oq(t, n) {
        1 & t &&
          (_(0, "span", 3),
          yh(),
          _(1, "svg", 4),
          ge(2, "path", 5)(3, "g")(4, "g")(5, "g")(6, "g")(7, "g")(8, "g"),
          g()());
      }
      const h_ = ["*"];
      function Rq(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "div", 2),
            F("click", function () {
              return Ce(e), we(L().hide());
            }),
            g();
        }
      }
      const Pq = [[["ng2-dropdown-button"]], [["ng2-dropdown-menu"]]],
        kq = ["ng2-dropdown-button", "ng2-dropdown-menu"];
      let Fq = (() => {
        class t {
          constructor(e) {
            (this.element = e),
              (this.onMenuToggled = new V()),
              (this.showCaret = !0);
          }
          toggleMenu() {
            this.onMenuToggled.emit(!0);
          }
          getPosition() {
            return this.element.nativeElement.getBoundingClientRect();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(y(Me));
          }),
          (t.ɵcmp = Ae({
            type: t,
            selectors: [["ng2-dropdown-button"]],
            inputs: { showCaret: "showCaret" },
            outputs: { onMenuToggled: "onMenuToggled" },
            ngContentSelectors: h_,
            decls: 4,
            vars: 1,
            consts: [
              [
                "type",
                "button",
                "tabindex",
                "0s",
                1,
                "ng2-dropdown-button",
                3,
                "click",
              ],
              [1, "ng2-dropdown-button__label"],
              ["class", "ng2-dropdown-button__caret", 4, "ngIf"],
              [1, "ng2-dropdown-button__caret"],
              [
                "enable-background",
                "new 0 0 32 32",
                "height",
                "16px",
                "id",
                "\u0421\u043b\u043e\u0439_1",
                "version",
                "1.1",
                "viewBox",
                "0 0 32 32",
                "width",
                "16px",
                0,
                "xml",
                "space",
                "preserve",
                "xmlns",
                "http://www.w3.org/2000/svg",
                0,
                "xmlns",
                "xlink",
                "http://www.w3.org/1999/xlink",
              ],
              [
                "d",
                "M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z",
                "fill",
                "#121313",
                "id",
                "Expand_More",
              ],
            ],
            template: function (e, i) {
              1 & e &&
                (Fr(),
                _(0, "button", 0),
                F("click", function () {
                  return i.toggleMenu();
                }),
                _(1, "span", 1),
                yo(2),
                g(),
                B(3, Oq, 9, 0, "span", 2),
                g()),
                2 & e && (M(3), T("ngIf", i.showCaret));
            },
            dependencies: [_n],
            styles: [
              ".ng2-dropdown-button[_ngcontent-%COMP%]{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button[_ngcontent-%COMP%]:hover{color:#222}.ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button[_ngcontent-%COMP%]:focus{color:#222;border-bottom:2px solid #2196F3}.ng2-dropdown-button__label[_ngcontent-%COMP%]{flex:1 1 95%}.ng2-dropdown-button__caret[_ngcontent-%COMP%]{width:12px;height:12px;display:flex;flex:1 1 6%}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%], .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]{border:none;min-width:40px;width:40px;border-radius:100%;transition:all .2s;text-align:center;height:40px;padding:.5em}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active{background:rgba(0,0,0,.2)}",
            ],
          })),
          t
        );
      })();
      const lI = {
        9: (t, n, e) => {
          e.select(t < n.length - 1 ? n[t + 1] : n[0], !0);
        },
        38: (t, n, e) => {
          t > 0 && e.select(n[t - 1], !0);
        },
        40: (t, n, e) => {
          t < n.length - 1 && e.select(n[t + 1], !0);
        },
        13: (t, n, e) => (e.selectedItem ? e.selectedItem.click() : void 0),
        27: function Bq() {
          this.hide();
        },
      };
      function Hq(t) {
        [38, 40].indexOf(t.keyCode) > -1 && t.preventDefault();
      }
      class Uq {
        constructor() {
          (this.onItemSelected = new V()),
            (this.onItemClicked = new V()),
            (this.onItemDestroyed = new V());
        }
        get selectedItem() {
          return this._selectedItem;
        }
        select(n, e = !0) {
          (this._selectedItem = n),
            e && n && (n.focus(), this.onItemSelected.emit(n));
        }
        unselect() {
          this._selectedItem = void 0;
        }
      }
      let Du = (() => {
          class t {
            constructor() {
              (this.menuState = {
                isVisible: !1,
                toString() {
                  return !0 === this.isVisible ? "visible" : "hidden";
                },
              }),
                (this.dropdownState = new Uq());
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = I({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        cI = (() => {
          class t {
            constructor(e, i) {
              (this.state = e), (this.element = i), (this.preventClose = !1);
            }
            ngOnDestroy() {
              this.state.dropdownState.onItemDestroyed.emit(this);
            }
            get isSelected() {
              return this === this.state.dropdownState.selectedItem;
            }
            select(e) {
              this.state.dropdownState.select(this, !0),
                e && (e.stopPropagation(), e.preventDefault());
            }
            click() {
              this.state.dropdownState.onItemClicked.emit(this);
            }
            focus() {
              this.element.nativeElement.children[0].focus();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(y(Du), y(Me));
            }),
            (t.ɵcmp = Ae({
              type: t,
              selectors: [["ng2-menu-item"]],
              inputs: { preventClose: "preventClose", value: "value" },
              ngContentSelectors: h_,
              decls: 2,
              vars: 2,
              consts: [
                [
                  "role",
                  "button",
                  "tabindex",
                  "0",
                  1,
                  "ng2-menu-item",
                  3,
                  "keydown.enter",
                  "click",
                  "mouseover",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (Fr(),
                  _(0, "div", 0),
                  F("keydown.enter", function () {
                    return i.click();
                  })("click", function () {
                    return i.click();
                  })("mouseover", function () {
                    return i.select();
                  }),
                  yo(1),
                  g()),
                  2 & e && En("ng2-menu-item--selected", i.isSelected);
              },
              styles: [
                ".ng2-menu-item[_ngcontent-%COMP%]{font-family:Roboto,Helvetica Neue,Helvetica,Arial;background:#fff;color:#000000de;cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected[_ngcontent-%COMP%]{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item[_ngcontent-%COMP%]:focus{outline:0}.ng2-menu-item[_ngcontent-%COMP%]:active{background:rgba(158,158,158,.4)}ng2-menu-item[_nghost-%COMP%]     [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:#00000070}",
              ],
            })),
            t
          );
        })(),
        dI = (() => {
          class t {
            constructor(e, i, o) {
              (this.dropdownState = e),
                (this.element = i),
                (this.renderer = o),
                (this.width = 4),
                (this.focusFirstElement = !0),
                (this.appendToBody = !0),
                (this.zIndex = 1e3),
                (this.listeners = {
                  arrowHandler: void 0,
                  handleKeypress: void 0,
                });
            }
            show(e, i = !0) {
              const o = typeof document < "u" ? document : void 0,
                r = typeof window < "u" ? window : void 0;
              this.dropdownState.menuState.isVisible ||
                ((this.listeners.handleKeypress = this.renderer.listen(
                  o.body,
                  "keydown",
                  this.handleKeypress.bind(this)
                )),
                (this.listeners.arrowHandler = this.renderer.listen(
                  r,
                  "keydown",
                  Hq
                ))),
                (this.dropdownState.menuState.isVisible = !0),
                e && this.updatePosition(e, i);
            }
            hide() {
              (this.dropdownState.menuState.isVisible = !1),
                this.dropdownState.dropdownState.unselect(),
                this.listeners.arrowHandler && this.listeners.arrowHandler(),
                this.listeners.handleKeypress &&
                  this.listeners.handleKeypress();
            }
            updatePosition(e, i) {
              (this.position = e), this.updateOnChange(i);
            }
            handleKeypress(e) {
              const i = e.keyCode,
                o = this.items.toArray(),
                r = o.indexOf(this.dropdownState.dropdownState.selectedItem);
              lI.hasOwnProperty(i) &&
                lI[i].call(this, r, o, this.dropdownState.dropdownState);
            }
            getMenuElement() {
              return this.element.nativeElement.children[0];
            }
            calcPositionOffset(e) {
              const i = typeof window < "u" ? window : void 0,
                o = typeof document < "u" ? document : void 0;
              if (!i || !o || !e) return;
              const r = this.getMenuElement(),
                s = void 0 !== i.pageXOffset,
                a = "CSS1Compat" === (o.compatMode || ""),
                l = s
                  ? i.pageXOffset
                  : a
                  ? o.documentElement.scrollLeft
                  : o.body.scrollLeft,
                c = s
                  ? i.pageYOffset
                  : a
                  ? o.documentElement.scrollTop
                  : o.body.scrollTop;
              let { top: d, left: u } = this.applyOffset(
                `${e.top + (this.appendToBody ? c - 15 : 0)}px`,
                e.left + l - 5 + "px"
              );
              const h = r.clientWidth,
                f = r.clientHeight,
                p = parseInt(d) + f + (this.appendToBody ? 0 : c - 15),
                m = parseInt(u) + h,
                D = i.innerWidth + i.scrollX;
              if (
                (p >= i.innerHeight + i.scrollY &&
                  (d = parseInt(d.replace("px", "")) - f + "px"),
                m >= D)
              ) {
                const b = m - D + 30;
                u = parseInt(u.replace("px", "")) - b + "px";
              }
              return { top: d, left: u };
            }
            applyOffset(e, i) {
              if (!this.offset) return { top: e, left: i };
              const o = this.offset.split(" ");
              return (
                o[1] || (o[1] = "0"),
                {
                  top: (e = `${
                    parseInt(e.replace("px", "")) + parseInt(o[0])
                  }px`),
                  left: (i = `${
                    parseInt(i.replace("px", "")) + parseInt(o[1])
                  }px`),
                }
              );
            }
            ngOnInit() {
              const e = typeof document < "u" ? document : void 0;
              this.appendToBody &&
                e.body.appendChild(this.element.nativeElement);
            }
            updateOnChange(e = !0) {
              const i = this.getMenuElement(),
                o = this.calcPositionOffset(this.position);
              o &&
                (this.renderer.setStyle(i, "top", o.top.toString()),
                this.renderer.setStyle(i, "left", o.left.toString())),
                this.focusFirstElement &&
                  this.items.first &&
                  !this.dropdownState.dropdownState.selectedItem &&
                  this.dropdownState.dropdownState.select(this.items.first, !1);
            }
            ngOnDestroy() {
              const e = this.element.nativeElement;
              e.parentNode.removeChild(e),
                this.listeners.handleKeypress &&
                  this.listeners.handleKeypress();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(y(Du), y(Me), y(fn));
            }),
            (t.ɵcmp = Ae({
              type: t,
              selectors: [["ng2-dropdown-menu"]],
              contentQueries: function (e, i, o) {
                if ((1 & e && Vi(o, cI, 5), 2 & e)) {
                  let r;
                  zt((r = qt())) && (i.items = r);
                }
              },
              inputs: {
                width: "width",
                focusFirstElement: "focusFirstElement",
                offset: "offset",
                appendToBody: "appendToBody",
                zIndex: "zIndex",
              },
              ngContentSelectors: h_,
              decls: 4,
              vars: 12,
              consts: [
                [1, "ng2-dropdown-menu__options-container"],
                ["class", "ng2-dropdown-backdrop", 3, "click", 4, "ngIf"],
                [1, "ng2-dropdown-backdrop", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Fr(),
                  _(0, "div")(1, "div", 0),
                  yo(2),
                  g()(),
                  B(3, Rq, 1, 0, "div", 1)),
                  2 & e &&
                    (_w(
                      "ng2-dropdown-menu ng2-dropdown-menu---width--",
                      i.width,
                      ""
                    ),
                    Zf("z-index", i.zIndex),
                    En("ng2-dropdown-menu--inside-element", !i.appendToBody)(
                      "ng2-dropdown-menu--open",
                      i.dropdownState.menuState.isVisible
                    ),
                    T("@fade", i.dropdownState.menuState.toString()),
                    M(1),
                    T("@opacity", i.dropdownState.menuState.toString()),
                    M(2),
                    T("ngIf", i.dropdownState.menuState.isVisible));
              },
              dependencies: [_n],
              styles: [
                "[_nghost-%COMP%]{display:block}.ng2-dropdown-menu[_ngcontent-%COMP%]{overflow-y:auto;box-shadow:0 1px 2px #0000004d;position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element[_ngcontent-%COMP%]{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2[_ngcontent-%COMP%]{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4[_ngcontent-%COMP%]{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6[_ngcontent-%COMP%]{width:320px}.ng2-dropdown-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}[_nghost-%COMP%]     .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}",
              ],
              data: {
                animation: [
                  Qn("fade", [
                    Lt("visible", te({ opacity: 1, height: "*", width: "*" })),
                    Lt(
                      "hidden",
                      te({
                        opacity: 0,
                        overflow: "hidden",
                        height: 0,
                        width: 0,
                      })
                    ),
                    _t("hidden => visible", [
                      ut(
                        "250ms ease-in",
                        te({ opacity: 1, height: "*", width: "*" })
                      ),
                    ]),
                    _t("visible => hidden", [
                      ut(
                        "350ms ease-out",
                        te({ opacity: 0, width: 0, height: 0 })
                      ),
                    ]),
                  ]),
                  Qn("opacity", [
                    _t("hidden => visible", [
                      ut(
                        "450ms ease-in",
                        Xa([
                          te({ opacity: 0, offset: 0 }),
                          te({ opacity: 1, offset: 1 }),
                        ])
                      ),
                    ]),
                    _t("visible => hidden", [
                      ut(
                        "250ms ease-out",
                        Xa([
                          te({ opacity: 1, offset: 0 }),
                          te({ opacity: 0.5, offset: 0.3 }),
                          te({ opacity: 0, offset: 1 }),
                        ])
                      ),
                    ]),
                  ]),
                ],
              },
            })),
            t
          );
        })(),
        uI = (() => {
          class t {
            constructor(e) {
              (this.state = e),
                (this.dynamicUpdate = !0),
                (this.onItemClicked = new V()),
                (this.onItemSelected = new V()),
                (this.onShow = new V()),
                (this.onHide = new V());
            }
            ngOnInit() {
              this.state.dropdownState.onItemClicked.subscribe((e) => {
                this.onItemClicked.emit(e),
                  !e.preventClose && this.hide.call(this);
              }),
                this.button &&
                  this.button.onMenuToggled.subscribe(() => {
                    this.toggleMenu();
                  }),
                this.state.dropdownState.onItemSelected.subscribe((e) => {
                  this.onItemSelected.emit(e);
                }),
                this.state.dropdownState.onItemDestroyed.subscribe((e) => {
                  let i;
                  const o = this.menu.items.toArray();
                  e === this.state.dropdownState.selectedItem &&
                    (this.menu.focusFirstElement &&
                      (i = e === o[0] && o.length > 1 ? o[1] : o[0]),
                    this.state.dropdownState.select(i));
                });
            }
            toggleMenu(e = this.button.getPosition()) {
              this.state.menuState.isVisible ? this.hide() : this.show(e);
            }
            hide() {
              this.menu.hide(), this.onHide.emit(this);
            }
            show(e = this.button.getPosition()) {
              this.menu.show(e, this.dynamicUpdate), this.onShow.emit(this);
            }
            scrollListener() {
              this.button &&
                this.dynamicUpdate &&
                this.menu.updatePosition(this.button.getPosition(), !0);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(y(Du));
            }),
            (t.ɵcmp = Ae({
              type: t,
              selectors: [["ng2-dropdown"]],
              contentQueries: function (e, i, o) {
                if ((1 & e && (Vi(o, Fq, 7), Vi(o, dI, 7)), 2 & e)) {
                  let r;
                  zt((r = qt())) && (i.button = r.first),
                    zt((r = qt())) && (i.menu = r.first);
                }
              },
              hostBindings: function (e, i) {
                1 & e &&
                  F(
                    "scroll",
                    function () {
                      return i.scrollListener();
                    },
                    0,
                    hc
                  );
              },
              inputs: { dynamicUpdate: "dynamicUpdate" },
              outputs: {
                onItemClicked: "onItemClicked",
                onItemSelected: "onItemSelected",
                onShow: "onShow",
                onHide: "onHide",
              },
              features: [Se([Du])],
              ngContentSelectors: kq,
              decls: 3,
              vars: 0,
              consts: [[1, "ng2-dropdown-container"]],
              template: function (e, i) {
                1 & e && (Fr(Pq), _(0, "div", 0), yo(1), yo(2, 1), g());
              },
              encapsulation: 2,
            })),
            t
          );
        })(),
        $q = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = he({ type: t })),
            (t.ɵinj = ce({ imports: [[Eo]] })),
            t
          );
        })();
      const zq = ["input"];
      function qq(t, n) {}
      const Gq = function (t, n) {
        return { item: t, index: n };
      };
      function Wq(t, n) {
        if (
          (1 & t && (_(0, "div"), B(1, qq, 0, 0, "ng-template", 4), g()), 2 & t)
        ) {
          const e = L();
          We("contenteditable", e.editing),
            M(1),
            T(
              "ngTemplateOutletContext",
              (function f0(t, n, e, i, o) {
                return g0(E(), It(), t, n, e, i, o);
              })(3, Gq, e.model, e.index)
            )("ngTemplateOutlet", e.template);
        }
      }
      function Yq(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "delete-icon", 8),
            F("click", function (o) {
              return Ce(e), we(L(2).remove(o));
            }),
            g();
        }
      }
      function Kq(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "div", 5)(1, "div", 6),
            F("keydown.enter", function (o) {
              return Ce(e), we(L().disableEditMode(o));
            })("keydown.escape", function (o) {
              return Ce(e), we(L().disableEditMode(o));
            })("click", function (o) {
              return Ce(e), we(L().editing ? o.stopPropagation() : void 0);
            })("blur", function (o) {
              return Ce(e), we(L().onBlurred(o));
            }),
            w(2),
            g(),
            B(3, Yq, 1, 0, "delete-icon", 7),
            g();
        }
        if (2 & t) {
          const e = L();
          M(1),
            We("contenteditable", e.editing)(
              "title",
              e.getDisplayValue(e.model)
            ),
            M(1),
            Ne(" ", e.getDisplayValue(e.model), " "),
            M(1),
            T("ngIf", e.isDeleteIconVisible());
        }
      }
      function Zq(t, n) {
        1 & t && ge(0, "tag-ripple", 9),
          2 & t && (T("state", L().rippleState), We("tabindex", -1));
      }
      function Qq(t, n) {
        if ((1 & t && (ge(0, "span", 6), Pc(1, "highlight")), 2 & t)) {
          const e = L().$implicit,
            i = L();
          T(
            "innerHTML",
            dp(1, 1, e[i.displayBy], i.tagInput.inputForm.value.value),
            ab
          );
        }
      }
      function Xq(t, n) {}
      const Jq = function (t, n, e) {
        return { item: t, index: n, last: e };
      };
      function eG(t, n) {
        if ((1 & t && B(0, Xq, 0, 0, "ng-template", 7), 2 & t)) {
          const e = L(),
            i = e.$implicit,
            o = e.index,
            r = e.last;
          T("ngTemplateOutlet", L().templates.first)(
            "ngTemplateOutletContext",
            p0(2, Jq, i, o, r)
          );
        }
      }
      function tG(t, n) {
        if (
          (1 & t &&
            (_(0, "ng2-menu-item", 3),
            B(1, Qq, 2, 4, "span", 4),
            B(2, eG, 1, 6, null, 5),
            g()),
          2 & t)
        ) {
          const e = n.$implicit,
            i = L();
          T("value", e)("ngSwitch", !!i.templates.length),
            M(1),
            T("ngSwitchCase", !1);
        }
      }
      function nG(t, n) {
        if (1 & t) {
          const e = Rt();
          _(0, "tag", 6),
            F("onSelect", function () {
              const r = Ce(e).$implicit;
              return we(L().selectItem(r));
            })("onRemove", function () {
              const o = Ce(e),
                r = o.$implicit,
                s = o.index;
              return we(L().onRemoveRequested(r, s));
            })("onKeyDown", function (o) {
              return Ce(e), we(L().handleKeydown(o));
            })("onTagEdited", function (o) {
              return Ce(e), we(L().updateEditedTag(o));
            })("onBlur", function (o) {
              const s = Ce(e).index;
              return we(L().onTagBlurred(o, s));
            })("dragstart", function (o) {
              const r = Ce(e),
                s = r.$implicit,
                a = r.index,
                l = L();
              return we(l.dragZone ? l.onDragStarted(o, s, a) : void 0);
            })("drop", function (o) {
              const s = Ce(e).index,
                a = L();
              return we(a.dragZone ? a.onTagDropped(o, s) : void 0);
            })("dragenter", function (o) {
              Ce(e);
              const r = L();
              return we(r.dragZone ? r.onDragOver(o) : void 0);
            })("dragover", function (o) {
              const s = Ce(e).index,
                a = L();
              return we(a.dragZone ? a.onDragOver(o, s) : void 0);
            })("dragleave", function () {
              Ce(e);
              const o = L();
              return we(o.dragZone ? o.dragProvider.onDragEnd() : void 0);
            }),
            g();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = n.index,
            o = L();
          Ec("draggable", o.editable),
            T("canAddTag", o.isTagValid)("disabled", o.disable)(
              "@animation",
              o.animationMetadata
            )("hasRipple", o.ripple)("index", i)("removable", o.removable)(
              "editable",
              o.editable
            )("displayBy", o.displayBy)("identifyBy", o.identifyBy)(
              "template",
              o.hasCustomTemplate() ? o.templates.first : void 0
            )("draggable", o.dragZone)("model", e),
            We("tabindex", 0);
        }
      }
      function iG(t, n) {
        1 & t && ge(0, "div", 7);
      }
      function oG(t, n) {
        if ((1 & t && (_(0, "p", 10)(1, "span"), w(2), g()()), 2 & t)) {
          const e = n.$implicit;
          M(2), qn(e);
        }
      }
      function rG(t, n) {
        if ((1 & t && (_(0, "div", 8), B(1, oG, 3, 1, "p", 9), g()), 2 & t)) {
          const e = L();
          T("ngClass", e.theme), M(1), T("ngForOf", e.errors);
        }
      }
      const sG = ["*"];
      let lG = (() => {
        class t {
          transform(e, i) {
            if (!i.trim()) return e;
            try {
              const o = new RegExp(
                `(${((t) => t.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"))(i)})`,
                "i"
              );
              return e.replace(o, "<b>$1</b>");
            } catch {
              return e;
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵpipe = Et({ name: "highlight", type: t, pure: !0 })),
          t
        );
      })();
      const f_ = "keydown",
        fG = {
          8: "DELETE",
          46: "DELETE",
          37: "SWITCH_PREV",
          39: "SWITCH_NEXT",
          9: "TAB",
        },
        xu = "NEXT",
        p_ = "PREV";
      let fI = (() => {
        class t {
          constructor() {
            this.state = { dragging: !1, dropping: !1, index: void 0 };
          }
          setDraggedItem(e, i) {
            e &&
              e.dataTransfer &&
              e.dataTransfer.setData("Text", JSON.stringify(i));
          }
          getDraggedItem(e) {
            if (e && e.dataTransfer) {
              const i = e.dataTransfer.getData("Text");
              try {
                return JSON.parse(i);
              } catch {
                return;
              }
            }
          }
          setSender(e) {
            this.sender = e;
          }
          setReceiver(e) {
            this.receiver = e;
          }
          onTagDropped(e, i, o) {
            this.onDragEnd(),
              this.sender.onRemoveRequested(e, i),
              this.receiver.onAddingRequested(!1, e, o);
          }
          setState(e) {
            this.state = { ...this.state, ...e };
          }
          getState(e) {
            return e ? this.state[e] : this.state;
          }
          onDragEnd() {
            this.setState({ dragging: !1, dropping: !1, index: void 0 });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = I({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const W = {
        tagInput: {
          separatorKeys: [],
          separatorKeyCodes: [],
          maxItems: 1 / 0,
          placeholder: "+ Tag",
          secondaryPlaceholder: "Enter a new tag",
          validators: [],
          asyncValidators: [],
          onlyFromAutocomplete: !1,
          errorMessages: {},
          theme: "",
          onTextChangeDebounce: 250,
          inputId: null,
          inputClass: "",
          clearOnBlur: !1,
          hideForm: !1,
          addOnBlur: !1,
          addOnPaste: !1,
          pasteSplitPattern: ",",
          blinkIfDupe: !0,
          removable: !0,
          editable: !1,
          allowDupes: !1,
          modelAsStrings: !1,
          trimTags: !0,
          ripple: !0,
          tabIndex: "",
          disable: !1,
          dragZone: "",
          onRemoving: void 0,
          onAdding: void 0,
          displayBy: "display",
          identifyBy: "value",
          animationDuration: { enter: "250ms", leave: "150ms" },
        },
        dropdown: {
          displayBy: "display",
          identifyBy: "value",
          appendToBody: !0,
          offset: "50 0",
          focusFirstElement: !1,
          showDropdownIfEmpty: !1,
          minimumTextLength: 1,
          limitItemsTo: 1 / 0,
          keepOpen: !0,
          dynamicUpdate: !0,
          zIndex: 1e3,
          matchingFn: function pG(t, n) {
            const e = n[this.displayBy].toString();
            return e && e.toLowerCase().indexOf(t.toLowerCase()) >= 0;
          },
        },
      };
      let m_ = (() => {
        class t {
          setOptions(e) {
            (t.defaults.tagInput = { ...W.tagInput, ...e.tagInput }),
              (t.defaults.dropdown = { ...W.dropdown, ...e.dropdown });
          }
        }
        return (t.defaults = W), t;
      })();
      function pI(t) {
        return t === Object(t);
      }
      let mG = (() => {
        class t {
          constructor() {
            (this._items = []),
              (this.displayBy = m_.defaults.tagInput.displayBy),
              (this.identifyBy = m_.defaults.tagInput.identifyBy);
          }
          get items() {
            return this._items;
          }
          set items(e) {
            (this._items = e), this._onChangeCallback(this._items);
          }
          onTouched() {
            this._onTouchedCallback();
          }
          writeValue(e) {
            this._items = e || [];
          }
          registerOnChange(e) {
            this._onChangeCallback = e;
          }
          registerOnTouched(e) {
            this._onTouchedCallback = e;
          }
          getItemValue(e, i = !1) {
            const o =
              i && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;
            return pI(e) ? e[o] : e;
          }
          getItemDisplay(e, i = !1) {
            const o =
              i && this.dropdown ? this.dropdown.displayBy : this.displayBy;
            return pI(e) ? e[o] : e;
          }
          getItemsWithout(e) {
            return this.items.filter((i, o) => o !== e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵdir = j({
            type: t,
            inputs: { displayBy: "displayBy", identifyBy: "identifyBy" },
          })),
          t
        );
      })();
      function mI(t, n, e = !0) {
        if (!this.listeners.hasOwnProperty(t))
          throw new Error("The event entered may be wrong");
        e && this.listeners[t].push(n);
      }
      let gI = (() => {
          class t {
            constructor() {
              (this.onSubmit = new V()),
                (this.onBlur = new V()),
                (this.onFocus = new V()),
                (this.onKeyup = new V()),
                (this.onKeydown = new V()),
                (this.inputTextChange = new V()),
                (this.validators = []),
                (this.asyncValidators = []),
                (this.tabindex = ""),
                (this.disabled = !1),
                (this.item = new Xi({ value: "", disabled: this.disabled }));
            }
            get inputText() {
              return this.item.value;
            }
            set inputText(e) {
              this.item.setValue(e), this.inputTextChange.emit(e);
            }
            ngOnInit() {
              this.item.setValidators(this.validators),
                this.item.setAsyncValidators(this.asyncValidators),
                (this.form = new is({ item: this.item }));
            }
            ngOnChanges(e) {
              e.disabled &&
                !e.disabled.firstChange &&
                (e.disabled.currentValue
                  ? this.form.controls.item.disable()
                  : this.form.controls.item.enable());
            }
            get value() {
              return this.form.get("item");
            }
            isInputFocused() {
              const e = typeof document < "u" ? document : void 0;
              return !!e && e.activeElement === this.input.nativeElement;
            }
            getErrorMessages(e) {
              return Object.keys(e)
                .filter((i) => this.value.hasError(i))
                .map((i) => e[i]);
            }
            hasErrors() {
              const { dirty: e, value: i, valid: o } = this.form;
              return e && i.item && !o;
            }
            focus() {
              this.input.nativeElement.focus();
            }
            blur() {
              this.input.nativeElement.blur();
            }
            getElementPosition() {
              return this.input.nativeElement.getBoundingClientRect();
            }
            destroy() {
              const e = this.input.nativeElement;
              e.parentElement.removeChild(e);
            }
            onKeyDown(e) {
              if (((this.inputText = this.value.value), "Enter" !== e.key))
                return this.onKeydown.emit(e);
              this.submit(e);
            }
            onKeyUp(e) {
              return (this.inputText = this.value.value), this.onKeyup.emit(e);
            }
            submit(e) {
              e.preventDefault(), this.onSubmit.emit(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Ae({
              type: t,
              selectors: [["tag-input-form"]],
              viewQuery: function (e, i) {
                if ((1 & e && wo(zq, 5), 2 & e)) {
                  let o;
                  zt((o = qt())) && (i.input = o.first);
                }
              },
              inputs: {
                placeholder: "placeholder",
                validators: "validators",
                asyncValidators: "asyncValidators",
                inputId: "inputId",
                inputClass: "inputClass",
                tabindex: "tabindex",
                disabled: "disabled",
                inputText: "inputText",
              },
              outputs: {
                onSubmit: "onSubmit",
                onBlur: "onBlur",
                onFocus: "onFocus",
                onKeyup: "onKeyup",
                onKeydown: "onKeydown",
                inputTextChange: "inputTextChange",
              },
              features: [Tt],
              decls: 3,
              vars: 8,
              consts: [
                [3, "formGroup", "ngSubmit"],
                [
                  "type",
                  "text",
                  "autocomplete",
                  "off",
                  "minlength",
                  "1",
                  "formControlName",
                  "item",
                  1,
                  "ng2-tag-input__text-input",
                  3,
                  "tabindex",
                  "ngClass",
                  "focus",
                  "blur",
                  "keydown",
                  "keyup",
                ],
                ["input", ""],
              ],
              template: function (e, i) {
                1 & e &&
                  (_(0, "form", 0),
                  F("ngSubmit", function (r) {
                    return i.submit(r);
                  }),
                  _(1, "input", 1, 2),
                  F("focus", function (r) {
                    return i.onFocus.emit(r);
                  })("blur", function (r) {
                    return i.onBlur.emit(r);
                  })("keydown", function (r) {
                    return i.onKeyDown(r);
                  })("keyup", function (r) {
                    return i.onKeyUp(r);
                  }),
                  g()()),
                  2 & e &&
                    (T("formGroup", i.form),
                    M(1),
                    Ec(
                      "tabindex",
                      i.disabled ? -1 : i.tabindex ? i.tabindex : 0
                    ),
                    T("ngClass", i.inputClass),
                    We("id", i.inputId)("placeholder", i.placeholder)(
                      "aria-label",
                      i.placeholder
                    )("tabindex", i.tabindex)(
                      "disabled",
                      i.disabled ? i.disabled : null
                    ));
              },
              dependencies: [Ji, Qi, Oo, vi, sg, Zi, rs, td],
              styles: [
                ".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.ng2-tag-input__text-input[_ngcontent-%COMP%]{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,Helvetica Neue,sans-serif}.ng2-tag-input__text-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input__text-input[disabled=true][_ngcontent-%COMP%]{opacity:.5;background:#fff}",
              ],
            })),
            t
          );
        })(),
        _I = (() => {
          class t {
            constructor() {
              this.state = "none";
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Ae({
              type: t,
              selectors: [["tag-ripple"]],
              inputs: { state: "state" },
              decls: 1,
              vars: 1,
              consts: [[1, "tag-ripple"]],
              template: function (e, i) {
                1 & e && ge(0, "div", 0), 2 & e && T("@ink", i.state);
              },
              styles: [
                "[_nghost-%COMP%]{width:100%;height:100%;left:0;overflow:hidden;position:absolute}.tag-ripple[_ngcontent-%COMP%]{background:rgba(0,0,0,.1);top:50%;left:50%;height:100%;transform:translate(-50%,-50%);position:absolute}",
              ],
              data: {
                animation: [
                  Qn("ink", [
                    Lt("none", te({ width: 0, opacity: 0 })),
                    _t("none => clicked", [
                      ut(
                        300,
                        Xa([
                          te({
                            opacity: 1,
                            offset: 0,
                            width: "30%",
                            borderRadius: "100%",
                          }),
                          te({ opacity: 1, offset: 0.5, width: "50%" }),
                          te({
                            opacity: 0.5,
                            offset: 1,
                            width: "100%",
                            borderRadius: "16px",
                          }),
                        ])
                      ),
                    ]),
                  ]),
                ],
              },
            })),
            t
          );
        })(),
        gG = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Ae({
              type: t,
              selectors: [["delete-icon"]],
              decls: 3,
              vars: 0,
              consts: [
                ["height", "16px", "viewBox", "0 0 32 32", "width", "16px"],
                [
                  "d",
                  "M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z",
                  "fill",
                  "#121313",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (_(0, "span"), yh(), _(1, "svg", 0), ge(2, "path", 1), g()());
              },
              styles: [
                ".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}delete-icon[_nghost-%COMP%]{width:20px;height:16px;transition:all .15s;display:inline-block;text-align:right}delete-icon[_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}delete-icon[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}delete-icon[_nghost-%COMP%]:hover{transform:scale(1.5) translateY(-3px)}.dark[_nghost-%COMP%], .dark   [_nghost-%COMP%]{text-align:right}.dark[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.dark[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.minimal[_nghost-%COMP%], .minimal   [_nghost-%COMP%]{text-align:right}.minimal[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}.minimal[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.bootstrap[_nghost-%COMP%], .bootstrap   [_nghost-%COMP%]{text-align:right}.bootstrap[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.dark   tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.minimal   tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.bootstrap   tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap3-info[_nghost-%COMP%], .bootstrap3-info   [_nghost-%COMP%]{height:inherit}.bootstrap3-info[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap3-info   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}",
              ],
            })),
            t
          );
        })();
      const yI =
          typeof window < "u"
            ? window.navigator
            : { userAgent: "Chrome", vendor: "Google Inc" },
        _G = /Chrome/.test(yI.userAgent) && /Google Inc/.test(yI.vendor);
      let vI = (() => {
        class t {
          constructor(e, i, o) {
            (this.element = e),
              (this.renderer = i),
              (this.cdRef = o),
              (this.disabled = !1),
              (this.onSelect = new V()),
              (this.onRemove = new V()),
              (this.onBlur = new V()),
              (this.onKeyDown = new V()),
              (this.onTagEdited = new V()),
              (this.editing = !1),
              (this.rippleState = "none");
          }
          get readonly() {
            return "string" != typeof this.model && !0 === this.model.readonly;
          }
          select(e) {
            this.readonly ||
              this.disabled ||
              (e && e.stopPropagation(),
              this.focus(),
              this.onSelect.emit(this.model));
          }
          remove(e) {
            e.stopPropagation(), this.onRemove.emit(this);
          }
          focus() {
            this.element.nativeElement.focus();
          }
          move() {
            this.moving = !0;
          }
          keydown(e) {
            if (this.editing) {
              if (13 === e.keyCode) return this.disableEditMode(e);
            } else this.onKeyDown.emit({ event: e, model: this.model });
          }
          blink() {
            const e = this.element.nativeElement.classList;
            e.add("blink"), setTimeout(() => e.remove("blink"), 50);
          }
          toggleEditMode() {
            if (this.editable)
              return this.editing ? void 0 : this.activateEditMode();
          }
          onBlurred(e) {
            if (!this.editable) return;
            this.disableEditMode();
            const i = e.target.innerText,
              o =
                "string" == typeof this.model
                  ? i
                  : { ...this.model, [this.displayBy]: i };
            this.onBlur.emit(o);
          }
          getDisplayValue(e) {
            return "string" == typeof e ? e : e[this.displayBy];
          }
          get isRippleVisible() {
            return !this.readonly && !this.editing && _G && this.hasRipple;
          }
          disableEditMode(e) {
            const i = this.element.nativeElement.classList,
              o = this.getContentEditableText();
            (this.editing = !1),
              i.remove("tag--editing"),
              o
                ? (this.storeNewValue(o),
                  this.cdRef.detectChanges(),
                  e && e.preventDefault())
                : this.setContentEditableText(this.model);
          }
          isDeleteIconVisible() {
            return (
              !this.readonly &&
              !this.disabled &&
              this.removable &&
              !this.editing
            );
          }
          getContentEditableText() {
            const e = this.getContentEditable();
            return e ? e.innerText.trim() : "";
          }
          setContentEditableText(e) {
            const i = this.getContentEditable(),
              o = this.getDisplayValue(e);
            i.innerText = o;
          }
          activateEditMode() {
            this.element.nativeElement.classList.add("tag--editing"),
              (this.editing = !0);
          }
          storeNewValue(e) {
            if (
              ((s) =>
                "string" == typeof s ? s === e : s[this.displayBy] === e)(
                this.model
              )
            )
              return;
            const r =
              "string" == typeof this.model
                ? e
                : {
                    index: this.index,
                    [this.identifyBy]: (() =>
                      this.model[this.identifyBy] !==
                      this.model[this.displayBy])()
                      ? this.model[this.identifyBy]
                      : e,
                    [this.displayBy]: e,
                  };
            this.canAddTag(r)
              ? this.onTagEdited.emit({ tag: r, index: this.index })
              : this.setContentEditableText(this.model);
          }
          getContentEditable() {
            return this.element.nativeElement.querySelector(
              "[contenteditable]"
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(y(Me), y(fn), y(Hr));
          }),
          (t.ɵcmp = Ae({
            type: t,
            selectors: [["tag"]],
            viewQuery: function (e, i) {
              if ((1 & e && wo(_I, 5), 2 & e)) {
                let o;
                zt((o = qt())) && (i.ripple = o.first);
              }
            },
            hostVars: 2,
            hostBindings: function (e, i) {
              1 & e &&
                F("keydown", function (r) {
                  return i.keydown(r);
                }),
                2 & e && En("moving", i.moving);
            },
            inputs: {
              model: "model",
              removable: "removable",
              editable: "editable",
              template: "template",
              displayBy: "displayBy",
              identifyBy: "identifyBy",
              index: "index",
              hasRipple: "hasRipple",
              disabled: "disabled",
              canAddTag: "canAddTag",
            },
            outputs: {
              onSelect: "onSelect",
              onRemove: "onRemove",
              onBlur: "onBlur",
              onKeyDown: "onKeyDown",
              onTagEdited: "onTagEdited",
            },
            decls: 4,
            vars: 8,
            consts: [
              [3, "ngSwitch", "click", "dblclick", "mousedown", "mouseup"],
              [4, "ngSwitchCase"],
              ["class", "tag-wrapper", 4, "ngSwitchCase"],
              [3, "state", 4, "ngIf"],
              [3, "ngTemplateOutletContext", "ngTemplateOutlet"],
              [1, "tag-wrapper"],
              [
                "spellcheck",
                "false",
                1,
                "tag__text",
                "inline",
                3,
                "keydown.enter",
                "keydown.escape",
                "click",
                "blur",
              ],
              [
                "aria-label",
                "Remove tag",
                "role",
                "button",
                3,
                "click",
                4,
                "ngIf",
              ],
              ["aria-label", "Remove tag", "role", "button", 3, "click"],
              [3, "state"],
            ],
            template: function (e, i) {
              1 & e &&
                (_(0, "div", 0),
                F("click", function (r) {
                  return i.select(r);
                })("dblclick", function () {
                  return i.toggleEditMode();
                })("mousedown", function () {
                  return (i.rippleState = "clicked");
                })("mouseup", function () {
                  return (i.rippleState = "none");
                }),
                B(1, Wq, 2, 6, "div", 1),
                B(2, Kq, 4, 4, "div", 2),
                g(),
                B(3, Zq, 1, 2, "tag-ripple", 3)),
                2 & e &&
                  (En("disabled", i.disabled),
                  T("ngSwitch", !!i.template),
                  We("tabindex", -1)("aria-label", i.getDisplayValue(i.model)),
                  M(1),
                  T("ngSwitchCase", !0),
                  M(1),
                  T("ngSwitchCase", !1),
                  M(1),
                  T("ngIf", i.isRippleVisible));
            },
            dependencies: [gG, _I, pa, Xp, Jp, _n],
            styles: [
              "[_nghost-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%]:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}[_nghost-%COMP%]{max-width:400px}.blink[_nghost-%COMP%]{-webkit-animation:_ngcontent-%COMP%_blink .3s normal forwards ease-in-out;animation:_ngcontent-%COMP%_blink .3s normal forwards ease-in-out}@-webkit-keyframes _ngcontent-%COMP%_blink{0%{opacity:.3}}@keyframes _ngcontent-%COMP%_blink{0%{opacity:.3}}[_nghost-%COMP%]   .disabled[_ngcontent-%COMP%]{cursor:not-allowed}[_nghost-%COMP%]   [contenteditable=true][_ngcontent-%COMP%]{outline:0}.tag-wrapper[_ngcontent-%COMP%]{flex-direction:row;display:flex}.tag__text[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}",
            ],
          })),
          t
        );
      })();
      const yG = [
        Qn("animation", [
          Lt("in", te({ opacity: 1 })),
          Lt("out", te({ opacity: 0 })),
          _t(":enter", [
            ut(
              "{{ enter }}",
              Xa([
                te({
                  opacity: 0,
                  offset: 0,
                  transform: "translate(0px, 20px)",
                }),
                te({
                  opacity: 0.3,
                  offset: 0.3,
                  transform: "translate(0px, -10px)",
                }),
                te({
                  opacity: 0.5,
                  offset: 0.5,
                  transform: "translate(0px, 0px)",
                }),
                te({
                  opacity: 0.75,
                  offset: 0.75,
                  transform: "translate(0px, 5px)",
                }),
                te({ opacity: 1, offset: 1, transform: "translate(0px, 0px)" }),
              ])
            ),
          ]),
          _t(":leave", [
            ut(
              "{{ leave }}",
              Xa([
                te({ opacity: 1, transform: "translateX(0)", offset: 0 }),
                te({ opacity: 1, transform: "translateX(-15px)", offset: 0.7 }),
                te({ opacity: 0, transform: "translateX(100%)", offset: 1 }),
              ])
            ),
          ]),
        ]),
      ];
      let vG = (() => {
        class t {
          constructor(e) {
            var i = this;
            (this.injector = e),
              (this.offset = W.dropdown.offset),
              (this.focusFirstElement = W.dropdown.focusFirstElement),
              (this.showDropdownIfEmpty = W.dropdown.showDropdownIfEmpty),
              (this.minimumTextLength = W.dropdown.minimumTextLength),
              (this.limitItemsTo = W.dropdown.limitItemsTo),
              (this.displayBy = W.dropdown.displayBy),
              (this.identifyBy = W.dropdown.identifyBy),
              (this.matchingFn = W.dropdown.matchingFn),
              (this.appendToBody = W.dropdown.appendToBody),
              (this.keepOpen = W.dropdown.keepOpen),
              (this.dynamicUpdate = W.dropdown.dynamicUpdate),
              (this.zIndex = W.dropdown.zIndex),
              (this.items = []),
              (this.tagInput = this.injector.get(bI)),
              (this._autocompleteItems = []),
              (this.show = () => {
                const o = this.tagInput.items.length === this.tagInput.maxItems,
                  r = this.getFormValue(),
                  s = r.trim().length >= this.minimumTextLength,
                  a = this.calculatePosition(),
                  l = this.getMatchingItems(r),
                  c = l.length > 0,
                  h = this.tagInput.disable,
                  f =
                    !1 === this.isVisible &&
                    ((c && s) || (this.showDropdownIfEmpty && c && !r)),
                  p = this.isVisible && !c;
                return this.autocompleteObservable && s
                  ? this.getItemsFromObservable(r)
                  : (!this.showDropdownIfEmpty && !r) || o || h
                  ? this.dropdown.hide()
                  : (this.setItems(l),
                    void (f ? this.dropdown.show(a) : p && this.hide()));
              }),
              (this.requestAdding = (function () {
                var o = Hd(function* (r) {
                  const s = i.createTagModel(r);
                  yield i.tagInput.onAddingRequested(!0, s).catch(() => {});
                });
                return function (r) {
                  return o.apply(this, arguments);
                };
              })()),
              (this.resetItems = () => {
                this.items = [];
              }),
              (this.getItemsFromObservable = (o) => {
                this.setLoadingState(!0),
                  this.autocompleteObservable(o)
                    .pipe(An())
                    .subscribe(
                      (s) => {
                        this.setLoadingState(!1).populateItems(s),
                          this.setItems(this.getMatchingItems(o)),
                          this.items.length
                            ? this.dropdown.show(this.calculatePosition())
                            : this.dropdown.hide();
                      },
                      () => this.setLoadingState(!1)
                    );
              });
          }
          set autocompleteItems(e) {
            this._autocompleteItems = e;
          }
          get autocompleteItems() {
            const e = this._autocompleteItems;
            return e
              ? e.map((i) =>
                  "string" == typeof i
                    ? { [this.displayBy]: i, [this.identifyBy]: i }
                    : i
                )
              : [];
          }
          ngAfterViewInit() {
            this.onItemClicked().subscribe((o) => {
              this.requestAdding(o);
            }),
              this.onHide().subscribe(this.resetItems);
            const i = this.keepOpen;
            this.tagInput.onTextChange
              .asObservable()
              .pipe(
                Bu(),
                Xd(200),
                Ue((o) => !1 !== i || o.length > 0)
              )
              .subscribe(this.show);
          }
          updatePosition() {
            const e = this.tagInput.inputForm.getElementPosition();
            this.dropdown.menu.updatePosition(e, this.dynamicUpdate);
          }
          get isVisible() {
            return this.dropdown.menu.dropdownState.menuState.isVisible;
          }
          onHide() {
            return this.dropdown.onHide;
          }
          onItemClicked() {
            return this.dropdown.onItemClicked;
          }
          get selectedItem() {
            return this.dropdown.menu.dropdownState.dropdownState.selectedItem;
          }
          get state() {
            return this.dropdown.menu.dropdownState;
          }
          hide() {
            this.resetItems(), this.dropdown.hide();
          }
          scrollListener() {
            !this.isVisible || !this.dynamicUpdate || this.updatePosition();
          }
          onWindowBlur() {
            this.dropdown.hide();
          }
          getFormValue() {
            const e = this.tagInput.formValue;
            return e ? e.toString().trim() : "";
          }
          calculatePosition() {
            return this.tagInput.inputForm.getElementPosition();
          }
          createTagModel(e) {
            return {
              ...e.value,
              [this.tagInput.displayBy]:
                "string" == typeof e.value ? e.value : e.value[this.displayBy],
              [this.tagInput.identifyBy]:
                "string" == typeof e.value ? e.value : e.value[this.identifyBy],
            };
          }
          getMatchingItems(e) {
            if (!e && !this.showDropdownIfEmpty) return [];
            const i = this.tagInput.allowDupes;
            return this.autocompleteItems.filter((o) => {
              const r =
                !i &&
                this.tagInput.tags.some(
                  (s) =>
                    ("string" == typeof s.model
                      ? s.model
                      : s.model[this.tagInput.identifyBy]) ===
                    o[this.identifyBy]
                );
              return this.matchingFn(e, o) && !1 === r;
            });
          }
          setItems(e) {
            this.items = e.slice(0, this.limitItemsTo || e.length);
          }
          populateItems(e) {
            return (
              (this.autocompleteItems = e.map((i) =>
                "string" == typeof i
                  ? { [this.displayBy]: i, [this.identifyBy]: i }
                  : i
              )),
              this
            );
          }
          setLoadingState(e) {
            return (this.tagInput.isLoading = e), this;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(y(He));
          }),
          (t.ɵcmp = Ae({
            type: t,
            selectors: [["tag-input-dropdown"]],
            contentQueries: function (e, i, o) {
              if ((1 & e && Vi(o, en, 4), 2 & e)) {
                let r;
                zt((r = qt())) && (i.templates = r);
              }
            },
            viewQuery: function (e, i) {
              if ((1 & e && wo(uI, 5), 2 & e)) {
                let o;
                zt((o = qt())) && (i.dropdown = o.first);
              }
            },
            hostBindings: function (e, i) {
              1 & e &&
                F(
                  "scroll",
                  function () {
                    return i.scrollListener();
                  },
                  0,
                  hc
                )(
                  "blur",
                  function () {
                    return i.onWindowBlur();
                  },
                  !1,
                  hc
                );
            },
            inputs: {
              offset: "offset",
              focusFirstElement: "focusFirstElement",
              showDropdownIfEmpty: "showDropdownIfEmpty",
              autocompleteObservable: "autocompleteObservable",
              minimumTextLength: "minimumTextLength",
              limitItemsTo: "limitItemsTo",
              displayBy: "displayBy",
              identifyBy: "identifyBy",
              matchingFn: "matchingFn",
              appendToBody: "appendToBody",
              keepOpen: "keepOpen",
              dynamicUpdate: "dynamicUpdate",
              zIndex: "zIndex",
              autocompleteItems: "autocompleteItems",
            },
            decls: 3,
            vars: 6,
            consts: [
              [3, "dynamicUpdate"],
              [3, "focusFirstElement", "zIndex", "appendToBody", "offset"],
              [3, "value", "ngSwitch", 4, "ngFor", "ngForOf"],
              [3, "value", "ngSwitch"],
              [3, "innerHTML", 4, "ngSwitchCase"],
              [4, "ngSwitchDefault"],
              [3, "innerHTML"],
              [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
            ],
            template: function (e, i) {
              1 & e &&
                (_(0, "ng2-dropdown", 0)(1, "ng2-dropdown-menu", 1),
                B(2, tG, 3, 3, "ng2-menu-item", 2),
                g()()),
                2 & e &&
                  (T("dynamicUpdate", i.dynamicUpdate),
                  M(1),
                  T("focusFirstElement", i.focusFirstElement)(
                    "zIndex",
                    i.zIndex
                  )("appendToBody", i.appendToBody)("offset", i.offset),
                  M(1),
                  T("ngForOf", i.items));
            },
            dependencies: [uI, dI, cI, Hi, pa, Xp, ZD, Jp, lG],
            encapsulation: 2,
          })),
          t
        );
      })();
      const bG = { provide: yn, useExisting: Ee(() => bI), multi: !0 };
      let bI = (() => {
        class t extends mG {
          constructor(e, i) {
            var o;
            super(),
              (o = this),
              (this.renderer = e),
              (this.dragProvider = i),
              (this.separatorKeys = W.tagInput.separatorKeys),
              (this.separatorKeyCodes = W.tagInput.separatorKeyCodes),
              (this.placeholder = W.tagInput.placeholder),
              (this.secondaryPlaceholder = W.tagInput.secondaryPlaceholder),
              (this.maxItems = W.tagInput.maxItems),
              (this.validators = W.tagInput.validators),
              (this.asyncValidators = W.tagInput.asyncValidators),
              (this.onlyFromAutocomplete = W.tagInput.onlyFromAutocomplete),
              (this.errorMessages = W.tagInput.errorMessages),
              (this.theme = W.tagInput.theme),
              (this.onTextChangeDebounce = W.tagInput.onTextChangeDebounce),
              (this.inputId = W.tagInput.inputId),
              (this.inputClass = W.tagInput.inputClass),
              (this.clearOnBlur = W.tagInput.clearOnBlur),
              (this.hideForm = W.tagInput.hideForm),
              (this.addOnBlur = W.tagInput.addOnBlur),
              (this.addOnPaste = W.tagInput.addOnPaste),
              (this.pasteSplitPattern = W.tagInput.pasteSplitPattern),
              (this.blinkIfDupe = W.tagInput.blinkIfDupe),
              (this.removable = W.tagInput.removable),
              (this.editable = W.tagInput.editable),
              (this.allowDupes = W.tagInput.allowDupes),
              (this.modelAsStrings = W.tagInput.modelAsStrings),
              (this.trimTags = W.tagInput.trimTags),
              (this.ripple = W.tagInput.ripple),
              (this.tabindex = W.tagInput.tabIndex),
              (this.disable = W.tagInput.disable),
              (this.dragZone = W.tagInput.dragZone),
              (this.onRemoving = W.tagInput.onRemoving),
              (this.onAdding = W.tagInput.onAdding),
              (this.animationDuration = W.tagInput.animationDuration),
              (this.onAdd = new V()),
              (this.onRemove = new V()),
              (this.onSelect = new V()),
              (this.onFocus = new V()),
              (this.onBlur = new V()),
              (this.onTextChange = new V()),
              (this.onPaste = new V()),
              (this.onValidationError = new V()),
              (this.onTagEdited = new V()),
              (this.isLoading = !1),
              (this.listeners = { [f_]: [], keyup: [] }),
              (this.inputTextChange = new V()),
              (this.inputTextValue = ""),
              (this.errors = []),
              (this.appendTag = (r, s = this.items.length) => {
                const a = this.items,
                  l = this.modelAsStrings ? r[this.identifyBy] : r;
                this.items = [...a.slice(0, s), l, ...a.slice(s, a.length)];
              }),
              (this.createTag = (r) => {
                const s = (a, l) => ("string" == typeof a ? a.trim() : a[l]);
                return {
                  ...("string" != typeof r ? r : {}),
                  [this.displayBy]: this.trimTags ? s(r, this.displayBy) : r,
                  [this.identifyBy]: this.trimTags ? s(r, this.identifyBy) : r,
                };
              }),
              (this.isTagValid = (r, s = !1) => {
                const a = this.dropdown ? this.dropdown.selectedItem : void 0,
                  l = this.getItemDisplay(r).trim();
                if ((a && !s) || !l) return !1;
                const c = this.findDupe(r, s);
                if (!this.allowDupes && c && this.blinkIfDupe) {
                  const h = this.tags.find(
                    (f) => this.getItemValue(f.model) === this.getItemValue(c)
                  );
                  h && h.blink();
                }
                const u = [
                  !c || this.allowDupes,
                  !this.maxItemsReached,
                  (s && this.onlyFromAutocomplete) ||
                    !this.onlyFromAutocomplete,
                ];
                return u.filter(Boolean).length === u.length;
              }),
              (this.onPasteCallback = (function () {
                var r = Hd(function* (s) {
                  const l = (() => {
                      const u = !!window.clipboardData,
                        h = u ? window.clipboardData : s.clipboardData;
                      return null === h
                        ? ""
                        : h.getData(u ? "Text" : "text/plain") || "";
                    })(),
                    c = l.split(o.pasteSplitPattern).map((u) => {
                      const h = o.createTag(u);
                      return (
                        o.setInputValue(h[o.displayBy]),
                        o.onAddingRequested(!1, h)
                      );
                    }),
                    d = () => setTimeout(() => o.setInputValue(""), 50);
                  Promise.all(c)
                    .then(() => {
                      o.onPaste.emit(l), d();
                    })
                    .catch(d);
                });
                return function (s) {
                  return r.apply(this, arguments);
                };
              })());
          }
          get inputText() {
            return this.inputTextValue;
          }
          set inputText(e) {
            (this.inputTextValue = e), this.inputTextChange.emit(e);
          }
          get tabindexAttr() {
            return "" !== this.tabindex ? "-1" : "";
          }
          ngAfterViewInit() {
            this.setUpKeypressListeners(),
              this.setupSeparatorKeysListener(),
              this.setUpInputKeydownListeners(),
              this.onTextChange.observers.length &&
                this.setUpTextChangeSubscriber(),
              (this.clearOnBlur || this.addOnBlur) &&
                this.setUpOnBlurSubscriber(),
              this.addOnPaste && this.setUpOnPasteListener();
            const e = this.inputForm.form.statusChanges;
            e.pipe(Ue((i) => "PENDING" !== i)).subscribe(() => {
              this.errors = this.inputForm.getErrorMessages(this.errorMessages);
            }),
              (this.isProgressBarVisible$ = e.pipe(
                ae((i) => "PENDING" === i || this.isLoading)
              )),
              this.hideForm && this.inputForm.destroy();
          }
          ngOnInit() {
            void 0 !== this.maxItems &&
              this.items &&
              this.items.length > this.maxItems &&
              ((this.maxItems = this.items.length),
              console.warn(
                "The number of items specified was greater than the property max-items."
              )),
              (this.editable = !this.onlyFromAutocomplete && this.editable),
              this.setAnimationMetadata();
          }
          onRemoveRequested(e, i) {
            return new Promise((o) => {
              const r = (s) => {
                this.removeItem(s, i), o(e);
              };
              this.onRemoving
                ? this.onRemoving(e).pipe(An()).subscribe(r)
                : r(e);
            });
          }
          onAddingRequested(e, i, o, r) {
            return new Promise((s, a) => {
              const l = (c) => this.addItem(e, c, o, r).then(s).catch(a);
              return this.onAdding
                ? this.onAdding(i).pipe(An()).subscribe(l, a)
                : l(i);
            });
          }
          selectItem(e, i = !0) {
            (e && "string" != typeof e && e.readonly) ||
              this.selectedTag === e ||
              ((this.selectedTag = e), i && this.onSelect.emit(e));
          }
          fireEvents(e, i) {
            this.listeners[e].forEach((o) => o.call(this, i));
          }
          handleKeydown(e) {
            const i = e.event,
              r = i.shiftKey || !1;
            switch (fG[i.keyCode || i.which]) {
              case "DELETE":
                if (this.selectedTag && this.removable) {
                  const s = this.items.indexOf(this.selectedTag);
                  this.onRemoveRequested(this.selectedTag, s);
                }
                break;
              case "SWITCH_PREV":
                this.moveToTag(e.model, p_);
                break;
              case "SWITCH_NEXT":
                this.moveToTag(e.model, xu);
                break;
              case "TAB":
                if (r) {
                  if (this.isFirstTag(e.model)) return;
                  this.moveToTag(e.model, p_);
                } else {
                  if (
                    this.isLastTag(e.model) &&
                    (this.disable || this.maxItemsReached)
                  )
                    return;
                  this.moveToTag(e.model, xu);
                }
                break;
              default:
                return;
            }
            i.preventDefault();
          }
          onFormSubmit() {
            var e = this;
            return Hd(function* () {
              try {
                yield e.onAddingRequested(!1, e.formValue);
              } catch {
                return;
              }
            })();
          }
          setInputValue(e, i = !0) {
            this.getControl().setValue(e, { emitEvent: i });
          }
          getControl() {
            return this.inputForm.value;
          }
          focus(e = !1, i = !1) {
            this.dragProvider.getState("dragging") ||
              (this.selectItem(void 0, !1),
              e && (this.inputForm.focus(), this.onFocus.emit(this.formValue)));
          }
          blur() {
            this.onTouched(), this.onBlur.emit(this.formValue);
          }
          hasErrors() {
            return !!this.inputForm && this.inputForm.hasErrors();
          }
          isInputFocused() {
            return !!this.inputForm && this.inputForm.isInputFocused();
          }
          hasCustomTemplate() {
            const e = this.templates ? this.templates.first : void 0;
            return !(
              !e ||
              e ===
                (this.dropdown && this.dropdown.templates
                  ? this.dropdown.templates.first
                  : void 0)
            );
          }
          get maxItemsReached() {
            return (
              void 0 !== this.maxItems && this.items.length >= this.maxItems
            );
          }
          get formValue() {
            const e = this.inputForm.value;
            return e ? e.value : "";
          }
          onDragStarted(e, i, o) {
            e.stopPropagation();
            const r = { zone: this.dragZone, tag: i, index: o };
            this.dragProvider.setSender(this),
              this.dragProvider.setDraggedItem(e, r),
              this.dragProvider.setState({ dragging: !0, index: o });
          }
          onDragOver(e, i) {
            this.dragProvider.setState({ dropping: !0 }),
              this.dragProvider.setReceiver(this),
              e.preventDefault();
          }
          onTagDropped(e, i) {
            const o = this.dragProvider.getDraggedItem(e);
            !o ||
              o.zone !== this.dragZone ||
              (this.dragProvider.onTagDropped(o.tag, o.index, i),
              e.preventDefault(),
              e.stopPropagation());
          }
          isDropping() {
            const e = this.dragProvider.receiver === this,
              i = this.dragProvider.getState("dropping");
            return !(!e || !i);
          }
          onTagBlurred(e, i) {
            (this.items[i] = e), this.blur();
          }
          trackBy(e, i) {
            return i[this.identifyBy];
          }
          updateEditedTag(e) {
            this.onTagEdited.emit(e);
          }
          moveToTag(e, i) {
            const o = this.isLastTag(e),
              r = this.isFirstTag(e);
            if ((i === xu && o) || (i === p_ && r)) return void this.focus(!0);
            const a = i === xu ? 1 : -1,
              l = this.getTagIndex(e) + a,
              c = this.getTagAtIndex(l);
            return c.select.call(c);
          }
          isFirstTag(e) {
            return this.tags.first.model === e;
          }
          isLastTag(e) {
            return this.tags.last.model === e;
          }
          getTagIndex(e) {
            return this.tags.toArray().findIndex((o) => o.model === e);
          }
          getTagAtIndex(e) {
            return this.tags.toArray()[e];
          }
          removeItem(e, i) {
            (this.items = this.getItemsWithout(i)),
              this.selectedTag === e && this.selectItem(void 0, !1),
              this.focus(!0, !1),
              this.onRemove.emit(e);
          }
          addItem(e = !1, i, o, r) {
            const s = this.getItemDisplay(i),
              a = this.createTag(i);
            return (
              e && this.setInputValue(this.getItemValue(i, !0)),
              new Promise((l, c) => {
                const d = () => {
                    this.setInputValue(""), this.focus(!r, !1), l(s);
                  },
                  u = () => {
                    this.appendTag(a, o),
                      this.onAdd.emit(a),
                      this.dropdown &&
                        (this.dropdown.hide(),
                        this.dropdown.showDropdownIfEmpty &&
                          this.dropdown.show());
                  },
                  h = this.inputForm.form.status,
                  f = this.isTagValid(a, e),
                  p = () => (this.onValidationError.emit(a), c());
                return "VALID" === h && f
                  ? (u(), d())
                  : "INVALID" !== h && f
                  ? "PENDING" === h
                    ? this.inputForm.form.statusChanges
                        .pipe(
                          Ue((v) => "PENDING" !== v),
                          An()
                        )
                        .subscribe((v) =>
                          "VALID" === v && f ? (u(), d()) : (d(), p())
                        )
                    : void 0
                  : (d(), p());
              })
            );
          }
          setupSeparatorKeysListener() {
            mI.call(
              this,
              f_,
              (o) => {
                const r = this.separatorKeyCodes.indexOf(o.keyCode) >= 0,
                  s = this.separatorKeys.indexOf(o.key) >= 0;
                (r || (s && 229 !== o.keyCode)) &&
                  (o.preventDefault(),
                  this.onAddingRequested(!1, this.formValue).catch(() => {}));
              },
              this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0
            );
          }
          setUpKeypressListeners() {
            mI.call(this, f_, (i) => {
              (37 === i.keyCode || 8 === i.keyCode) &&
                !this.formValue &&
                this.items.length &&
                this.tags.last.select.call(this.tags.last);
            });
          }
          setUpInputKeydownListeners() {
            this.inputForm.onKeydown.subscribe((e) => {
              "Backspace" === e.key &&
                "" === this.formValue.trim() &&
                e.preventDefault();
            });
          }
          setUpOnPasteListener() {
            this.renderer.listen(
              this.inputForm.input.nativeElement,
              "paste",
              (i) => (this.onPasteCallback(i), i.preventDefault(), !0)
            );
          }
          setUpTextChangeSubscriber() {
            this.inputForm.form.valueChanges
              .pipe(Xd(this.onTextChangeDebounce))
              .subscribe((e) => {
                this.onTextChange.emit(e.item);
              });
          }
          setUpOnBlurSubscriber() {
            this.inputForm.onBlur
              .pipe(
                Xd(100),
                Ue(
                  () =>
                    !(
                      (this.dropdown && this.dropdown.isVisible) ||
                      !this.formValue
                    )
                )
              )
              .subscribe(() => {
                const i = () => this.setInputValue("");
                if (this.addOnBlur)
                  return this.onAddingRequested(!1, this.formValue, void 0, !0)
                    .then(i)
                    .catch(i);
                i();
              });
          }
          findDupe(e, i) {
            const r = e[i ? this.dropdown.identifyBy : this.identifyBy];
            return this.items.find((s) => this.getItemValue(s) === r);
          }
          setAnimationMetadata() {
            this.animationMetadata = {
              value: "in",
              params: { ...this.animationDuration },
            };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(y(fn), y(fI));
          }),
          (t.ɵcmp = Ae({
            type: t,
            selectors: [["tag-input"]],
            contentQueries: function (e, i, o) {
              if ((1 & e && (Vi(o, vG, 5), Vi(o, en, 4)), 2 & e)) {
                let r;
                zt((r = qt())) && (i.dropdown = r.first),
                  zt((r = qt())) && (i.templates = r);
              }
            },
            viewQuery: function (e, i) {
              if ((1 & e && (wo(gI, 5), wo(vI, 5)), 2 & e)) {
                let o;
                zt((o = qt())) && (i.inputForm = o.first),
                  zt((o = qt())) && (i.tags = o);
              }
            },
            hostVars: 1,
            hostBindings: function (e, i) {
              2 & e && We("tabindex", i.tabindexAttr);
            },
            inputs: {
              separatorKeys: "separatorKeys",
              separatorKeyCodes: "separatorKeyCodes",
              placeholder: "placeholder",
              secondaryPlaceholder: "secondaryPlaceholder",
              maxItems: "maxItems",
              validators: "validators",
              asyncValidators: "asyncValidators",
              onlyFromAutocomplete: "onlyFromAutocomplete",
              errorMessages: "errorMessages",
              theme: "theme",
              onTextChangeDebounce: "onTextChangeDebounce",
              inputId: "inputId",
              inputClass: "inputClass",
              clearOnBlur: "clearOnBlur",
              hideForm: "hideForm",
              addOnBlur: "addOnBlur",
              addOnPaste: "addOnPaste",
              pasteSplitPattern: "pasteSplitPattern",
              blinkIfDupe: "blinkIfDupe",
              removable: "removable",
              editable: "editable",
              allowDupes: "allowDupes",
              modelAsStrings: "modelAsStrings",
              trimTags: "trimTags",
              inputText: "inputText",
              ripple: "ripple",
              tabindex: "tabindex",
              disable: "disable",
              dragZone: "dragZone",
              onRemoving: "onRemoving",
              onAdding: "onAdding",
              animationDuration: "animationDuration",
            },
            outputs: {
              onAdd: "onAdd",
              onRemove: "onRemove",
              onSelect: "onSelect",
              onFocus: "onFocus",
              onBlur: "onBlur",
              onTextChange: "onTextChange",
              onPaste: "onPaste",
              onValidationError: "onValidationError",
              onTagEdited: "onTagEdited",
              inputTextChange: "inputTextChange",
            },
            features: [Se([bG]), le],
            ngContentSelectors: sG,
            decls: 8,
            vars: 27,
            consts: [
              [
                1,
                "ng2-tag-input",
                3,
                "ngClass",
                "click",
                "drop",
                "dragenter",
                "dragover",
                "dragend",
              ],
              [1, "ng2-tags-container"],
              [
                3,
                "draggable",
                "canAddTag",
                "disabled",
                "hasRipple",
                "index",
                "removable",
                "editable",
                "displayBy",
                "identifyBy",
                "template",
                "model",
                "onSelect",
                "onRemove",
                "onKeyDown",
                "onTagEdited",
                "onBlur",
                "dragstart",
                "drop",
                "dragenter",
                "dragover",
                "dragleave",
                4,
                "ngFor",
                "ngForOf",
                "ngForTrackBy",
              ],
              [
                3,
                "inputText",
                "disabled",
                "validators",
                "asyncValidators",
                "hidden",
                "placeholder",
                "inputClass",
                "inputId",
                "tabindex",
                "onSubmit",
                "onBlur",
                "click",
                "onKeydown",
                "onKeyup",
              ],
              ["class", "progress-bar", 4, "ngIf"],
              ["class", "error-messages", 3, "ngClass", 4, "ngIf"],
              [
                3,
                "draggable",
                "canAddTag",
                "disabled",
                "hasRipple",
                "index",
                "removable",
                "editable",
                "displayBy",
                "identifyBy",
                "template",
                "model",
                "onSelect",
                "onRemove",
                "onKeyDown",
                "onTagEdited",
                "onBlur",
                "dragstart",
                "drop",
                "dragenter",
                "dragover",
                "dragleave",
              ],
              [1, "progress-bar"],
              [1, "error-messages", 3, "ngClass"],
              ["class", "error-message", 4, "ngFor", "ngForOf"],
              [1, "error-message"],
            ],
            template: function (e, i) {
              1 & e &&
                (Fr(),
                _(0, "div", 0),
                F("click", function () {
                  return i.focus(!0, !1);
                })("drop", function (r) {
                  return i.dragZone ? i.onTagDropped(r, void 0) : void 0;
                })("dragenter", function (r) {
                  return i.dragZone ? i.onDragOver(r) : void 0;
                })("dragover", function (r) {
                  return i.dragZone ? i.onDragOver(r) : void 0;
                })("dragend", function () {
                  return i.dragZone ? i.dragProvider.onDragEnd() : void 0;
                }),
                _(1, "div", 1),
                B(2, nG, 1, 14, "tag", 2),
                _(3, "tag-input-form", 3),
                F("onSubmit", function () {
                  return i.onFormSubmit();
                })("onBlur", function () {
                  return i.blur();
                })("click", function () {
                  return i.dropdown ? i.dropdown.show() : void 0;
                })("onKeydown", function (r) {
                  return i.fireEvents("keydown", r);
                })("onKeyup", function (r) {
                  return i.fireEvents("keyup", r);
                }),
                g()(),
                B(4, iG, 1, 0, "div", 4),
                Pc(5, "async"),
                g(),
                B(6, rG, 2, 2, "div", 5),
                yo(7)),
                2 & e &&
                  (En("ng2-tag-input--dropping", i.isDropping())(
                    "ng2-tag-input--disabled",
                    i.disable
                  )("ng2-tag-input--loading", i.isLoading)(
                    "ng2-tag-input--invalid",
                    i.hasErrors()
                  )("ng2-tag-input--focused", i.isInputFocused()),
                  T("ngClass", i.theme),
                  We("tabindex", -1),
                  M(2),
                  T("ngForOf", i.items)("ngForTrackBy", i.trackBy),
                  M(1),
                  T("inputText", i.inputText)("disabled", i.disable)(
                    "validators",
                    i.validators
                  )("asyncValidators", i.asyncValidators)(
                    "hidden",
                    i.maxItemsReached
                  )(
                    "placeholder",
                    i.items.length ? i.placeholder : i.secondaryPlaceholder
                  )("inputClass", i.inputClass)("inputId", i.inputId)(
                    "tabindex",
                    i.tabindex
                  ),
                  M(1),
                  T(
                    "ngIf",
                    (function b0(t, n, e) {
                      const i = t + oe,
                        o = E(),
                        r = er(o, i);
                      return aa(o, i)
                        ? m0(o, It(), n, r.transform, e, r)
                        : r.transform(e);
                    })(5, 25, i.isProgressBarVisible$)
                  ),
                  M(2),
                  T("ngIf", i.hasErrors()));
            },
            dependencies: [vI, gI, td, Hi, _n, XD],
            styles: [
              '.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.progress-bar[_ngcontent-%COMP%], .progress-bar[_ngcontent-%COMP%]:before{height:2px;width:100%;margin:0}.progress-bar[_ngcontent-%COMP%]{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar[_ngcontent-%COMP%]:before{background-color:#82c4f8;content:"";-webkit-animation:_ngcontent-%COMP%_running-progress 2s cubic-bezier(.4,0,.2,1) infinite;animation:_ngcontent-%COMP%_running-progress 2s cubic-bezier(.4,0,.2,1) infinite}@-webkit-keyframes _ngcontent-%COMP%_running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}@keyframes _ngcontent-%COMP%_running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,Helvetica Neue,sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#2196F3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:#000;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly[_ngcontent-%COMP%]{cursor:default}tag.readonly[_ngcontent-%COMP%]:focus, tag[_ngcontent-%COMP%]:focus{outline:0}tag.tag--editing[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:#000;color:initial}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#d0d0d0;color:#000;color:initial}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.minimal[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.dark[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#025aa5}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#28a1c5}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}[_nghost-%COMP%]{display:block}',
            ],
            data: { animation: yG },
          })),
          t
        );
      })();
      const CG = new m_();
      let wG = (() => {
          class t {
            static withDefaults(e) {
              CG.setOptions(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = he({ type: t })),
            (t.ɵinj = ce({
              providers: [fI, { provide: XE, useValue: !1 }],
              imports: [[Eo, XM, QM, $q]],
            })),
            t
          );
        })(),
        DG = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = he({ type: t, bootstrap: [k5] }));
            static #n = (this.ɵinj = ce({
              providers: [ko, rT],
              imports: [
                Aq.forRoot(),
                Cx,
                Jj,
                QM,
                P5,
                XM,
                Q5,
                J5,
                Fg,
                Y6,
                s5,
                wG,
              ],
            }));
          }
          return t;
        })();
      wj()
        .bootstrapModule(DG)
        .catch((t) => console.error(t));
    },
  },
  (se) => {
    se((se.s = 58));
  },
]);
